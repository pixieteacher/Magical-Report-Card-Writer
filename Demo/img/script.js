var requirejs, require, define;
(function (Z) {
    function H(e) {
        return "[object Function]" === L.call(e)
    }

    function I(e) {
        return "[object Array]" === L.call(e)
    }

    function y(e, t) {
        if (e) {
            var n;
            for (n = 0; n < e.length && (!e[n] || !t(e[n], n, e)); n += 1);
        }
    }

    function M(e, t) {
        if (e) {
            var n;
            for (n = e.length - 1; - 1 < n && (!e[n] || !t(e[n], n, e)); n -= 1);
        }
    }

    function s(e, t) {
        return ga.call(e, t)
    }

    function l(e, t) {
        return s(e, t) && e[t]
    }

    function F(e, t) {
        for (var n in e)
            if (s(e, n) && t(e[n], n)) break
    }

    function Q(e, t, n, r) {
        return t && F(t, function (t, i) {
            if (n || !s(e, i)) r && "string" != typeof t ? (e[i] || (e[i] = {}), Q(e[i], t, n, r)) : e[i] = t
        }), e
    }

    function u(e, t) {
        return function () {
            return t.apply(e, arguments)
        }
    }

    function aa(e) {
        throw e
    }

    function ba(e) {
        if (!e) return e;
        var t = Z;
        return y(e.split("."), function (e) {
            t = t[e]
        }), t
    }

    function A(e, t, n, r) {
        return t = Error(t + "\nhttp://requirejs.org/docs/errors.html#" + e), t.requireType = e, t.requireModules = r, n && (t.originalError = n), t
    }

    function ha(e) {
        function t(e, t, n) {
            var r, i, s, o, u, a, f, c = t && t.split("/");
            r = c;
            var h = N.map,
                p = h && h["*"];
            if (e && "." === e.charAt(0))
                if (t) {
                    r = l(N.pkgs, t) ? c = [t] : c.slice(0, c.length - 1), t = e = r.concat(e.split("/"));
                    for (r = 0; t[r]; r += 1)
                        if (i = t[r], "." === i) t.splice(r, 1), r -= 1;
                        else if (".." === i) {
                        if (1 === r && (".." === t[2] || ".." === t[0])) break;
                        0 < r && (t.splice(r - 1, 2), r -= 2)
                    }
                    r = l(N.pkgs, t = e[0]), e = e.join("/"), r && e === t + "/" + r.main && (e = t)
                } else 0 === e.indexOf("./") && (e = e.substring(2));
            if (n && h && (c || p)) {
                t = e.split("/");
                for (r = t.length; 0 < r; r -= 1) {
                    s = t.slice(0, r).join("/");
                    if (c)
                        for (i = c.length; 0 < i; i -= 1)
                            if (n = l(h, c.slice(0, i).join("/")))
                                if (n = l(n, s)) {
                                    o = n, u = r;
                                    break
                                } if (o) break;
                    !a && p && l(p, s) && (a = l(p, s), f = r)
                }!o && a && (o = a, u = f), o && (t.splice(0, u, o), e = t.join("/"))
            }
            return e
        }

        function n(e) {
            z && y(document.getElementsByTagName("script"), function (t) {
                if (t.getAttribute("data-requiremodule") === e && t.getAttribute("data-requirecontext") === S.contextName) return t.parentNode.removeChild(t), !0
            })
        }

        function r(e) {
            var t = l(N.paths, e);
            if (t && I(t) && 1 < t.length) return n(e), t.shift(), S.require.undef(e), S.require([e]), !0
        }

        function i(e) {
            var t, n = e ? e.indexOf("!") : -1;
            return -1 < n && (t = e.substring(0, n), e = e.substring(n + 1, e.length)), [t, e]
        }

        function o(e, n, r, s) {
            var o, u, a = null,
                f = n ? n.name : null,
                c = e,
                h = !0,
                p = "";
            return e || (h = !1, e = "_@r" + (B += 1)), e = i(e), a = e[0], e = e[1], a && (a = t(a, f, s), u = l(_, a)), e && (a ? p = u && u.normalize ? u.normalize(e, function (e) {
                return t(e, f, s)
            }) : t(e, f, s) : (p = t(e, f, s), e = i(p), a = e[0], p = e[1], r = !0, o = S.nameToUrl(p))), r = a && !u && !r ? "_unnormalized" + (q += 1) : "", {
                prefix: a,
                name: p,
                parentMap: n,
                unnormalized: !!r,
                url: o,
                originalName: c,
                isDefine: h,
                id: (a ? a + "!" + p : p) + r
            }
        }

        function a(e) {
            var t = e.id,
                n = l(C, t);
            return n || (n = C[t] = new S.Module(e)), n
        }

        function f(e, t, n) {
            var r = e.id,
                i = l(C, r);
            s(_, r) && (!i || i.defineEmitComplete) ? "defined" === t && n(_[r]) : (i = a(e), i.error && "error" === t) ? n(i.error) : i.on(t, n)
        }

        function c(e, t) {
            var n = e.requireModules,
                r = !1;
            t ? t(e) : (y(n, function (t) {
                if (t = l(C, t)) t.error = e, t.events.error && (r = !0, t.emit("error", e))
            }), !r) && j.onError(e)
        }

        function h() {
            R.length && (ia.apply(M, [M.length - 1, 0].concat(R)), R = [])
        }

        function p(e) {
            delete C[e], delete k[e]
        }

        function d(e, t, n) {
            var r = e.map.id;
            e.error ? e.emit("error", e.error) : (t[r] = !0, y(e.depMaps, function (r, i) {
                var s = r.id,
                    o = l(C, s);
                o && !e.depMatched[i] && !n[s] && (l(t, s) ? (e.defineDep(i, _[s]), e.check()) : d(o, t, n))
            }), n[r] = !0)
        }

        function v() {
            var e, t, i, s, o = (i = 1e3 * N.waitSeconds) && S.startTime + i < (new Date).getTime(),
                u = [],
                a = [],
                f = !1,
                l = !0;
            if (!w) {
                w = !0, F(k, function (i) {
                    e = i.map, t = e.id;
                    if (i.enabled && (e.isDefine || a.push(i), !i.error))
                        if (!i.inited && o) r(t) ? f = s = !0 : (u.push(t), n(t));
                        else if (!i.inited && i.fetched && e.isDefine && (f = !0, !e.prefix)) return l = !1
                });
                if (o && u.length) return i = A("timeout", "Load timeout for modules: " + u, null, u), i.contextName = S.contextName, c(i);
                l && y(a, function (e) {
                    d(e, {}, {})
                }), (!o || s) && f && (z || da) && !T && (T = setTimeout(function () {
                    T = 0, v()
                }, 50)), w = !1
            }
        }

        function m(e) {
            s(_, e[0]) || a(o(e[0], null, !0)).init(e[1], e[2])
        }

        function g(e) {
            var e = e.currentTarget || e.srcElement,
                t = S.onScriptLoad;
            return e.detachEvent && !W ? e.detachEvent("onreadystatechange", t) : e.removeEventListener("load", t, !1), t = S.onScriptError, (!e.detachEvent || W) && e.removeEventListener("error", t, !1), {
                node: e,
                id: e && e.getAttribute("data-requiremodule")
            }
        }

        function b() {
            var e;
            for (h(); M.length;) {
                e = M.shift();
                if (null === e[0]) return c(A("mismatch", "Mismatched anonymous define() module: " + e[e.length - 1]));
                m(e)
            }
        }
        var w, E, S, x, T, N = {
                waitSeconds: 7,
                baseUrl: "./",
                paths: {},
                pkgs: {},
                shim: {},
                config: {}
            },
            C = {},
            k = {},
            L = {},
            M = [],
            _ = {},
            D = {},
            B = 1,
            q = 1;
        return x = {
            require: function (e) {
                return e.require ? e.require : e.require = S.makeRequire(e.map)
            },
            exports: function (e) {
                e.usingExports = !0;
                if (e.map.isDefine) return e.exports ? e.exports : e.exports = _[e.map.id] = {}
            },
            module: function (e) {
                return e.module ? e.module : e.module = {
                    id: e.map.id,
                    uri: e.map.url,
                    config: function () {
                        var t = l(N.pkgs, e.map.id);
                        return (t ? l(N.config, e.map.id + "/" + t.main) : l(N.config, e.map.id)) || {}
                    },
                    exports: _[e.map.id]
                }
            }
        }, E = function (e) {
            this.events = l(L, e.id) || {}, this.map = e, this.shim = l(N.shim, e.id), this.depExports = [], this.depMaps = [], this.depMatched = [], this.pluginMaps = {}, this.depCount = 0
        }, E.prototype = {
            init: function (e, t, n, r) {
                r = r || {}, this.inited || (this.factory = t, n ? this.on("error", n) : this.events.error && (n = u(this, function (e) {
                    this.emit("error", e)
                })), this.depMaps = e && e.slice(0), this.errback = n, this.inited = !0, this.ignore = r.ignore, r.enabled || this.enabled ? this.enable() : this.check())
            },
            defineDep: function (e, t) {
                this.depMatched[e] || (this.depMatched[e] = !0, this.depCount -= 1, this.depExports[e] = t)
            },
            fetch: function () {
                if (!this.fetched) {
                    this.fetched = !0, S.startTime = (new Date).getTime();
                    var e = this.map;
                    if (!this.shim) return e.prefix ? this.callPlugin() : this.load();
                    S.makeRequire(this.map, {
                        enableBuildCallback: !0
                    })(this.shim.deps || [], u(this, function () {
                        return e.prefix ? this.callPlugin() : this.load()
                    }))
                }
            },
            load: function () {
                var e = this.map.url;
                D[e] || (D[e] = !0, S.load(this.map.id, e))
            },
            check: function () {
                if (this.enabled && !this.enabling) {
                    var e, t, n = this.map.id;
                    t = this.depExports;
                    var r = this.exports,
                        i = this.factory;
                    if (this.inited) {
                        if (this.error) this.emit("error", this.error);
                        else if (!this.defining) {
                            this.defining = !0;
                            if (1 > this.depCount && !this.defined) {
                                if (H(i)) {
                                    if (this.events.error && this.map.isDefine || j.onError !== aa) try {
                                        r = S.execCb(n, i, t, r)
                                    } catch (s) {
                                        e = s
                                    } else r = S.execCb(n, i, t, r);
                                    this.map.isDefine && ((t = this.module) && void 0 !== t.exports && t.exports !== this.exports ? r = t.exports : void 0 === r && this.usingExports && (r = this.exports));
                                    if (e) return e.requireMap = this.map, e.requireModules = this.map.isDefine ? [this.map.id] : null, e.requireType = this.map.isDefine ? "define" : "require", c(this.error = e)
                                } else r = i;
                                this.exports = r, this.map.isDefine && !this.ignore && (_[n] = r, j.onResourceLoad) && j.onResourceLoad(S, this.map, this.depMaps), p(n), this.defined = !0
                            }
                            this.defining = !1, this.defined && !this.defineEmitted && (this.defineEmitted = !0, this.emit("defined", this.exports), this.defineEmitComplete = !0)
                        }
                    } else this.fetch()
                }
            },
            callPlugin: function () {
                var e = this.map,
                    n = e.id,
                    r = o(e.prefix);
                this.depMaps.push(r), f(r, "defined", u(this, function (r) {
                    var i, h;
                    h = this.map.name;
                    var d = this.map.parentMap ? this.map.parentMap.name : null,
                        v = S.makeRequire(e.parentMap, {
                            enableBuildCallback: !0
                        });
                    if (this.map.unnormalized) {
                        if (r.normalize && (h = r.normalize(h, function (e) {
                                return t(e, d, !0)
                            }) || ""), r = o(e.prefix + "!" + h, this.map.parentMap), f(r, "defined", u(this, function (e) {
                                this.init([], function () {
                                    return e
                                }, null, {
                                    enabled: !0,
                                    ignore: !0
                                })
                            })), h = l(C, r.id)) this.depMaps.push(r), this.events.error && h.on("error", u(this, function (e) {
                            this.emit("error", e)
                        })), h.enable()
                    } else i = u(this, function (e) {
                        this.init([], function () {
                            return e
                        }, null, {
                            enabled: !0
                        })
                    }), i.error = u(this, function (e) {
                        this.inited = !0, this.error = e, e.requireModules = [n], F(C, function (e) {
                            0 === e.map.id.indexOf(n + "_unnormalized") && p(e.map.id)
                        }), c(e)
                    }), i.fromText = u(this, function (t, r) {
                        var u = e.name,
                            f = o(u),
                            l = O;
                        r && (t = r), l && (O = !1), a(f), s(N.config, n) && (N.config[u] = N.config[n]);
                        try {
                            j.exec(t)
                        } catch (h) {
                            return c(A("fromtexteval", "fromText eval for " + n + " failed: " + h, h, [n]))
                        }
                        l && (O = !0), this.depMaps.push(f), S.completeLoad(u), v([u], i)
                    }), r.load(e.name, v, i, N)
                })), S.enable(r, this), this.pluginMaps[r.id] = r
            },
            enable: function () {
                k[this.map.id] = this, this.enabling = this.enabled = !0, y(this.depMaps, u(this, function (e, t) {
                    var n, r;
                    if ("string" == typeof e) {
                        e = o(e, this.map.isDefine ? this.map : this.map.parentMap, !1, !this.skipMap), this.depMaps[t] = e;
                        if (n = l(x, e.id)) {
                            this.depExports[t] = n(this);
                            return
                        }
                        this.depCount += 1, f(e, "defined", u(this, function (e) {
                            this.defineDep(t, e), this.check()
                        })), this.errback && f(e, "error", u(this, this.errback))
                    }
                    n = e.id, r = C[n], !s(x, n) && r && !r.enabled && S.enable(e, this)
                })), F(this.pluginMaps, u(this, function (e) {
                    var t = l(C, e.id);
                    t && !t.enabled && S.enable(e, this)
                })), this.enabling = !1, this.check()
            },
            on: function (e, t) {
                var n = this.events[e];
                n || (n = this.events[e] = []), n.push(t)
            },
            emit: function (e, t) {
                y(this.events[e], function (e) {
                    e(t)
                }), "error" === e && delete this.events[e]
            }
        }, S = {
            config: N,
            contextName: e,
            registry: C,
            defined: _,
            urlFetched: D,
            defQueue: M,
            Module: E,
            makeModuleMap: o,
            nextTick: j.nextTick,
            onError: c,
            configure: function (e) {
                e.baseUrl && "/" !== e.baseUrl.charAt(e.baseUrl.length - 1) && (e.baseUrl += "/");
                var t = N.pkgs,
                    n = N.shim,
                    r = {
                        paths: !0,
                        config: !0,
                        map: !0
                    };
                F(e, function (e, t) {
                    r[t] ? "map" === t ? (N.map || (N.map = {}), Q(N[t], e, !0, !0)) : Q(N[t], e, !0) : N[t] = e
                }), e.shim && (F(e.shim, function (e, t) {
                    I(e) && (e = {
                        deps: e
                    }), (e.exports || e.init) && !e.exportsFn && (e.exportsFn = S.makeShimExports(e)), n[t] = e
                }), N.shim = n), e.packages && (y(e.packages, function (e) {
                    e = "string" == typeof e ? {
                        name: e
                    } : e, t[e.name] = {
                        name: e.name,
                        location: e.location || e.name,
                        main: (e.main || "main").replace(ja, "").replace(ea, "")
                    }
                }), N.pkgs = t), F(C, function (e, t) {
                    !e.inited && !e.map.unnormalized && (e.map = o(t))
                }), (e.deps || e.callback) && S.require(e.deps || [], e.callback)
            },
            makeShimExports: function (e) {
                return function () {
                    var t;
                    return e.init && (t = e.init.apply(Z, arguments)), t || e.exports && ba(e.exports)
                }
            },
            makeRequire: function (n, r) {
                function i(t, u, f) {
                    var l, h;
                    return r.enableBuildCallback && u && H(u) && (u.__requireJsBuild = !0), "string" == typeof t ? H(u) ? c(A("requireargs", "Invalid require call"), f) : n && s(x, t) ? x[t](C[n.id]) : j.get ? j.get(S, t, n, i) : (l = o(t, n, !1, !0), l = l.id, s(_, l) ? _[l] : c(A("notloaded", 'Module name "' + l + '" has not been loaded yet for context: ' + e + (n ? "" : ". Use require([])")))) : (b(), S.nextTick(function () {
                        b(), h = a(o(null, n)), h.skipMap = r.skipMap, h.init(t, u, f, {
                            enabled: !0
                        }), v()
                    }), i)
                }
                return r = r || {}, Q(i, {
                    isBrowser: z,
                    toUrl: function (e) {
                        var r, i = e.lastIndexOf("."),
                            s = e.split("/")[0];
                        return -1 !== i && ("." !== s && ".." !== s || 1 < i) && (r = e.substring(i, e.length), e = e.substring(0, i)), S.nameToUrl(t(e, n && n.id, !0), r, !0)
                    },
                    defined: function (e) {
                        return s(_, o(e, n, !1, !0).id)
                    },
                    specified: function (e) {
                        return e = o(e, n, !1, !0).id, s(_, e) || s(C, e)
                    }
                }), n || (i.undef = function (e) {
                    h();
                    var t = o(e, n, !0),
                        r = l(C, e);
                    delete _[e], delete D[t.url], delete L[e], r && (r.events.defined && (L[e] = r.events), p(e))
                }), i
            },
            enable: function (e) {
                l(C, e.id) && a(e).enable()
            },
            completeLoad: function (e) {
                var t, n, i = l(N.shim, e) || {},
                    o = i.exports;
                for (h(); M.length;) {
                    n = M.shift();
                    if (null === n[0]) {
                        n[0] = e;
                        if (t) break;
                        t = !0
                    } else n[0] === e && (t = !0);
                    m(n)
                }
                n = l(C, e);
                if (!t && !s(_, e) && n && !n.inited) {
                    if (N.enforceDefine && (!o || !ba(o))) return r(e) ? void 0 : c(A("nodefine", "No define call for " + e, null, [e]));
                    m([e, i.deps || [], i.exportsFn])
                }
                v()
            },
            nameToUrl: function (e, t, n) {
                var r, i, s, o, u, a;
                if (j.jsExtRegExp.test(e)) o = e + (t || "");
                else {
                    r = N.paths, i = N.pkgs, o = e.split("/");
                    for (u = o.length; 0 < u; u -= 1) {
                        if (a = o.slice(0, u).join("/"), s = l(i, a), a = l(r, a)) {
                            I(a) && (a = a[0]), o.splice(0, u, a);
                            break
                        }
                        if (s) {
                            e = e === s.name ? s.location + "/" + s.main : s.location, o.splice(0, u, e);
                            break
                        }
                    }
                    o = o.join("/"), o += t || (/\?/.test(o) || n ? "" : ".js"), o = ("/" === o.charAt(0) || o.match(/^[\w\+\.\-]+:/) ? "" : N.baseUrl) + o
                }
                return N.urlArgs ? o + ((-1 === o.indexOf("?") ? "?" : "&") + N.urlArgs) : o
            },
            load: function (e, t) {
                j.load(S, e, t)
            },
            execCb: function (e, t, n, r) {
                return t.apply(r, n)
            },
            onScriptLoad: function (e) {
                if ("load" === e.type || ka.test((e.currentTarget || e.srcElement).readyState)) P = null, e = g(e), S.completeLoad(e.id)
            },
            onScriptError: function (e) {
                var t = g(e);
                if (!r(t.id)) return c(A("scripterror", "Script error for: " + t.id, e, [t.id]))
            }
        }, S.require = S.makeRequire(), S
    }
    var j, w, x, C, J, D, P, K, q, fa, la = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
        ma = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
        ea = /\.js$/,
        ja = /^\.\//;
    w = Object.prototype;
    var L = w.toString,
        ga = w.hasOwnProperty,
        ia = Array.prototype.splice,
        z = "undefined" != typeof window && !!navigator && !!window.document,
        da = !z && "undefined" != typeof importScripts,
        ka = z && "PLAYSTATION 3" === navigator.platform ? /^complete$/ : /^(complete|loaded)$/,
        W = "undefined" != typeof opera && "[object Opera]" === opera.toString(),
        E = {},
        t = {},
        R = [],
        O = !1;
    if ("undefined" == typeof define) {
        if ("undefined" != typeof requirejs) {
            if (H(requirejs)) return;
            t = requirejs, requirejs = void 0
        }
        "undefined" != typeof require && !H(require) && (t = require, require = void 0), j = requirejs = function (e, t, n, r) {
            var i, s = "_";
            return !I(e) && "string" != typeof e && (i = e, I(t) ? (e = t, t = n, n = r) : e = []), i && i.context && (s = i.context), (r = l(E, s)) || (r = E[s] = j.s.newContext(s)), i && r.configure(i), r.require(e, t, n)
        }, j.config = function (e) {
            return j(e)
        }, j.nextTick = "undefined" != typeof setTimeout ? function (e) {
            setTimeout(e, 4)
        } : function (e) {
            e()
        }, require || (require = j), j.version = "2.1.8", j.jsExtRegExp = /^\/|:|\?|\.js$/, j.isBrowser = z, w = j.s = {
            contexts: E,
            newContext: ha
        }, j({}), y(["toUrl", "undef", "defined", "specified"], function (e) {
            j[e] = function () {
                var t = E._;
                return t.require[e].apply(t, arguments)
            }
        }), z && (x = w.head = document.getElementsByTagName("head")[0], C = document.getElementsByTagName("base")[0]) && (x = w.head = C.parentNode), j.onError = aa, j.createNode = function (e) {
            var t = e.xhtml ? document.createElementNS("http://www.w3.org/1999/xhtml", "html:script") : document.createElement("script");
            return t.type = e.scriptType || "text/javascript", t.charset = "utf-8", t.async = !0, t
        }, j.load = function (e, t, n) {
            var r = e && e.config || {};
            if (z) return r = j.createNode(r, t, n), r.setAttribute("data-requirecontext", e.contextName), r.setAttribute("data-requiremodule", t), r.attachEvent && !(r.attachEvent.toString && 0 > r.attachEvent.toString().indexOf("[native code")) && !W ? (O = !0, r.attachEvent("onreadystatechange", e.onScriptLoad)) : (r.addEventListener("load", e.onScriptLoad, !1), r.addEventListener("error", e.onScriptError, !1)), r.src = n, K = r, C ? x.insertBefore(r, C) : x.appendChild(r), K = null, r;
            if (da) try {
                importScripts(n), e.completeLoad(t)
            } catch (i) {
                e.onError(A("importscripts", "importScripts failed for " + t + " at " + n, i, [t]))
            }
        }, z && M(document.getElementsByTagName("script"), function (e) {
            x || (x = e.parentNode);
            if (J = e.getAttribute("data-main")) return q = J, t.baseUrl || (D = q.split("/"), q = D.pop(), fa = D.length ? D.join("/") + "/" : "./", t.baseUrl = fa), q = q.replace(ea, ""), j.jsExtRegExp.test(q) && (q = J), t.deps = t.deps ? t.deps.concat(q) : [q], !0
        }), define = function (e, t, n) {
            var r, i;
            "string" != typeof e && (n = t, t = e, e = null), I(t) || (n = t, t = null), !t && H(n) && (t = [], n.length && (n.toString().replace(la, "").replace(ma, function (e, n) {
                t.push(n)
            }), t = (1 === n.length ? ["require"] : ["require", "exports", "module"]).concat(t))), O && ((r = K) || (P && "interactive" === P.readyState || M(document.getElementsByTagName("script"), function (e) {
                if ("interactive" === e.readyState) return P = e
            }), r = P), r && (e || (e = r.getAttribute("data-requiremodule")), i = E[r.getAttribute("data-requirecontext")])), (i ? i.defQueue : R).push([e, t, n])
        }, define.amd = {
            jQuery: !0
        }, j.exec = function (b) {
            return eval(b)
        }, j(t)
    }
})(this), define("../lib/require", function () {}),
    function (root) {
        var CoffeeScript = function () {
            function require(e) {
                return require[e]
            }
            return require["./helpers"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i, s, o, u;
                    e.starts = function (e, t, n) {
                        return t === e.substr(n, t.length)
                    }, e.ends = function (e, t, n) {
                        var r;
                        return r = t.length, t === e.substr(e.length - r - (n || 0), r)
                    }, e.repeat = s = function (e, t) {
                        var n;
                        for (n = ""; t > 0;) 1 & t && (n += e), t >>>= 1, e += e;
                        return n
                    }, e.compact = function (e) {
                        var t, n, r, i;
                        for (i = [], n = 0, r = e.length; r > n; n++) t = e[n], t && i.push(t);
                        return i
                    }, e.count = function (e, t) {
                        var n, r;
                        if (n = r = 0, !t.length) return 1 / 0;
                        for (; r = 1 + e.indexOf(t, r);) n++;
                        return n
                    }, e.merge = function (e, t) {
                        return n(n({}, e), t)
                    }, n = e.extend = function (e, t) {
                        var n, r;
                        for (n in t) r = t[n], e[n] = r;
                        return e
                    }, e.flatten = r = function (e) {
                        var t, n, i, s;
                        for (n = [], i = 0, s = e.length; s > i; i++) t = e[i], t instanceof Array ? n = n.concat(r(t)) : n.push(t);
                        return n
                    }, e.del = function (e, t) {
                        var n;
                        return n = e[t], delete e[t], n
                    }, e.last = i = function (e, t) {
                        return e[e.length - (t || 0) - 1]
                    }, e.some = null != (u = Array.prototype.some) ? u : function (e) {
                        var t, n, r;
                        for (n = 0, r = this.length; r > n; n++)
                            if (t = this[n], e(t)) return !0;
                        return !1
                    }, e.invertLiterate = function (e) {
                        var t, n, r;
                        return r = !0, n = function () {
                            var n, i, s, o;
                            for (s = e.split("\n"), o = [], n = 0, i = s.length; i > n; n++) t = s[n], r && /^([ ]{4}|[ ]{0,3}\t)/.test(t) ? o.push(t) : (r = /^\s*$/.test(t)) ? o.push(t) : o.push("# " + t);
                            return o
                        }(), n.join("\n")
                    }, t = function (e, t) {
                        return t ? {
                            first_line: e.first_line,
                            first_column: e.first_column,
                            last_line: t.last_line,
                            last_column: t.last_column
                        } : e
                    }, e.addLocationDataFn = function (e, n) {
                        return function (r) {
                            return "object" == typeof r && r.updateLocationDataIfMissing && r.updateLocationDataIfMissing(t(e, n)), r
                        }
                    }, e.locationDataToString = function (e) {
                        var t;
                        return "2" in e && "first_line" in e[2] ? t = e[2] : "first_line" in e && (t = e), t ? "" + (t.first_line + 1) + ":" + (t.first_column + 1) + "-" + ("" + (t.last_line + 1) + ":" + (t.last_column + 1)) : "No location data"
                    }, e.baseFileName = function (e, t, n) {
                        var r, i;
                        return null == t && (t = !1), null == n && (n = !1), i = n ? /\\|\// : /\//, r = e.split(i), e = r[r.length - 1], t && e.indexOf(".") >= 0 ? (r = e.split("."), r.pop(), "coffee" === r[r.length - 1] && r.length > 1 && r.pop(), r.join(".")) : e
                    }, e.isCoffee = function (e) {
                        return /\.((lit)?coffee|coffee\.md)$/.test(e)
                    }, e.isLiterate = function (e) {
                        return /\.(litcoffee|coffee\.md)$/.test(e)
                    }, e.throwSyntaxError = function (e, t) {
                        var n;
                        throw n = new SyntaxError(e), n.location = t, n.toString = o, n.stack = "" + n, n
                    }, e.updateSyntaxError = function (e, t, n) {
                        return e.toString === o && (e.code || (e.code = t), e.filename || (e.filename = n), e.stack = "" + e), e
                    }, o = function () {
                        var e, t, n, r, i, o, u, a, f, l, c, h, p;
                        return this.code && this.location ? (h = this.location, u = h.first_line, o = h.first_column, f = h.last_line, a = h.last_column, null == f && (f = u), null == a && (a = o), i = this.filename || "[stdin]", e = this.code.split("\n")[u], c = o, r = u === f ? a + 1 : e.length, l = e.slice(0, c).replace(/[^\s]/g, " ") + s("^", r - c), "undefined" != typeof process && null !== process && (n = process.stdout.isTTY && !process.env.NODE_DISABLE_COLORS), (null != (p = this.colorful) ? p : n) && (t = function (e) {
                            return "[1;31m" + e + "[0m"
                        }, e = e.slice(0, c) + t(e.slice(c, r)) + e.slice(r), l = t(l)), "" + i + ":" + (u + 1) + ":" + (o + 1) + ": error: " + this.message + "\n" + e + "\n" + l) : Error.prototype.toString.call(this)
                    }, e.nameWhitespaceCharacter = function (e) {
                        switch (e) {
                            case " ":
                                return "space";
                            case "\n":
                                return "newline";
                            case "\r":
                                return "carriage return";
                            case "	":
                                return "tab";
                            default:
                                return e
                        }
                    }
                }.call(this), t.exports
            }(), require["./rewriter"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w = [].indexOf || function (e) {
                            for (var t = 0, n = this.length; n > t; t++)
                                if (t in this && this[t] === e) return t;
                            return -1
                        },
                        E = [].slice;
                    for (d = function (e, t, n) {
                            var r;
                            return r = [e, t], r.generated = !0, n && (r.origin = n), r
                        }, e.Rewriter = function () {
                            function e() {}
                            return e.prototype.rewrite = function (e) {
                                return this.tokens = e, this.removeLeadingNewlines(), this.closeOpenCalls(), this.closeOpenIndexes(), this.normalizeLines(), this.tagPostfixConditionals(), this.addImplicitBracesAndParens(), this.addLocationDataToGeneratedTokens(), this.tokens
                            }, e.prototype.scanTokens = function (e) {
                                var t, n, r;
                                for (r = this.tokens, t = 0; n = r[t];) t += e.call(this, n, t, r);
                                return !0
                            }, e.prototype.detectEnd = function (e, t, n) {
                                var r, o, u, a, f;
                                for (u = this.tokens, r = 0; o = u[e];) {
                                    if (0 === r && t.call(this, o, e)) return n.call(this, o, e);
                                    if (!o || 0 > r) return n.call(this, o, e - 1);
                                    a = o[0], w.call(s, a) >= 0 ? r += 1 : (f = o[0], w.call(i, f) >= 0 && (r -= 1)), e += 1
                                }
                                return e - 1
                            }, e.prototype.removeLeadingNewlines = function () {
                                var e, t, n, r, i;
                                for (i = this.tokens, e = n = 0, r = i.length; r > n && (t = i[e][0], "TERMINATOR" === t); e = ++n);
                                return e ? this.tokens.splice(0, e) : void 0
                            }, e.prototype.closeOpenCalls = function () {
                                var e, t;
                                return t = function (e, t) {
                                    var n;
                                    return ")" === (n = e[0]) || "CALL_END" === n || "OUTDENT" === e[0] && ")" === this.tag(t - 1)
                                }, e = function (e, t) {
                                    return this.tokens["OUTDENT" === e[0] ? t - 1 : t][0] = "CALL_END"
                                }, this.scanTokens(function (n, r) {
                                    return "CALL_START" === n[0] && this.detectEnd(r + 1, t, e), 1
                                })
                            }, e.prototype.closeOpenIndexes = function () {
                                var e, t;
                                return t = function (e) {
                                    var t;
                                    return "]" === (t = e[0]) || "INDEX_END" === t
                                }, e = function (e) {
                                    return e[0] = "INDEX_END"
                                }, this.scanTokens(function (n, r) {
                                    return "INDEX_START" === n[0] && this.detectEnd(r + 1, t, e), 1
                                })
                            }, e.prototype.matchTags = function () {
                                var e, t, n, r, i, s, o;
                                for (t = arguments[0], r = arguments.length >= 2 ? E.call(arguments, 1) : [], e = 0, n = i = 0, s = r.length; s >= 0 ? s > i : i > s; n = s >= 0 ? ++i : --i) {
                                    for (;
                                        "HERECOMMENT" === this.tag(t + n + e);) e += 2;
                                    if (null != r[n] && ("string" == typeof r[n] && (r[n] = [r[n]]), o = this.tag(t + n + e), 0 > w.call(r[n], o))) return !1
                                }
                                return !0
                            }, e.prototype.looksObjectish = function (e) {
                                return this.matchTags(e, "@", null, ":") || this.matchTags(e, null, ":")
                            }, e.prototype.findTagsBackwards = function (e, t) {
                                var n, r, o, u, a, f, l;
                                for (n = []; e >= 0 && (n.length || (u = this.tag(e), 0 > w.call(t, u) && (a = this.tag(e), 0 > w.call(s, a) || this.tokens[e].generated) && (f = this.tag(e), 0 > w.call(c, f))));) r = this.tag(e), w.call(i, r) >= 0 && n.push(this.tag(e)), o = this.tag(e), w.call(s, o) >= 0 && n.length && n.pop(), e -= 1;
                                return l = this.tag(e), w.call(t, l) >= 0
                            }, e.prototype.addImplicitBracesAndParens = function () {
                                var e;
                                return e = [], this.scanTokens(function (t, r, l) {
                                    var h, p, v, m, g, y, b, E, S, x, T, N, C, k, L, A, O, M, _, D, P, H, B, j, F, I, q, R;
                                    if (H = t[0], T = (N = r > 0 ? l[r - 1] : [])[0], S = (l.length - 1 > r ? l[r + 1] : [])[0], O = function () {
                                            return e[e.length - 1]
                                        }, M = r, v = function (e) {
                                            return r - M + e
                                        }, m = function () {
                                            var e, t;
                                            return null != (e = O()) ? null != (t = e[2]) ? t.ours : void 0 : void 0
                                        }, g = function () {
                                            var e;
                                            return m() && "(" === (null != (e = O()) ? e[0] : void 0)
                                        }, b = function () {
                                            var e;
                                            return m() && "{" === (null != (e = O()) ? e[0] : void 0)
                                        }, y = function () {
                                            var e;
                                            return m && "CONTROL" === (null != (e = O()) ? e[0] : void 0)
                                        }, _ = function (t) {
                                            var n;
                                            return n = null != t ? t : r, e.push(["(", n, {
                                                ours: !0
                                            }]), l.splice(n, 0, d("CALL_START", "(")), null == t ? r += 1 : void 0
                                        }, h = function () {
                                            return e.pop(), l.splice(r, 0, d("CALL_END", ")")), r += 1
                                        }, D = function (n, i) {
                                            var s;
                                            return null == i && (i = !0), s = null != n ? n : r, e.push(["{", s, {
                                                sameLine: !0,
                                                startsLine: i,
                                                ours: !0
                                            }]), l.splice(s, 0, d("{", d(new String("{")), t)), null == n ? r += 1 : void 0
                                        }, p = function (n) {
                                            return n = null != n ? n : r, e.pop(), l.splice(n, 0, d("}", "}", t)), r += 1
                                        }, !g() || "IF" !== H && "TRY" !== H && "FINALLY" !== H && "CATCH" !== H && "CLASS" !== H && "SWITCH" !== H) {
                                        if ("INDENT" === H && m()) {
                                            if ("=>" !== T && "->" !== T && "[" !== T && "(" !== T && "," !== T && "{" !== T && "TRY" !== T && "ELSE" !== T && "=" !== T)
                                                for (; g();) h();
                                            return y() && e.pop(), e.push([H, r]), v(1)
                                        }
                                        if (w.call(s, H) >= 0) return e.push([H, r]), v(1);
                                        if (w.call(i, H) >= 0) {
                                            for (; m();) g() ? h() : b() ? p() : e.pop();
                                            e.pop()
                                        }
                                        if ((w.call(a, H) >= 0 && t.spaced && !t.stringEnd || "?" === H && r > 0 && !l[r - 1].spaced) && (w.call(o, S) >= 0 || w.call(f, S) >= 0 && (null != (B = l[r + 1]) ? !B.spaced : !void 0) && (null != (j = l[r + 1]) ? !j.newLine : !void 0))) return "?" === H && (H = t[0] = "FUNC_EXIST"), _(r + 1), v(2);
                                        if (w.call(a, H) >= 0 && this.matchTags(r + 1, "INDENT", null, ":") && !this.findTagsBackwards(r, ["CLASS", "EXTENDS", "IF", "CATCH", "SWITCH", "LEADING_WHEN", "FOR", "WHILE", "UNTIL"])) return _(r + 1), e.push(["INDENT", r + 2]), v(3);
                                        if (":" === H) {
                                            for (C = "@" === this.tag(r - 2) ? r - 2 : r - 1;
                                                "HERECOMMENT" === this.tag(C - 2);) C -= 2;
                                            return this.insideForDeclaration = "FOR" === S, P = 0 === C || (F = this.tag(C - 1), w.call(c, F) >= 0) || l[C - 1].newLine, O() && (I = O(), A = I[0], L = I[1], ("{" === A || "INDENT" === A && "{" === this.tag(L - 1)) && (P || "," === this.tag(C - 1) || "{" === this.tag(C - 1))) ? v(1) : (D(C, !!P), v(2))
                                        }
                                        if (b() && w.call(c, H) >= 0 && (O()[2].sameLine = !1), E = "OUTDENT" === T || N.newLine, w.call(u, H) >= 0 || w.call(n, H) >= 0 && E)
                                            for (; m();)
                                                if (q = O(), A = q[0], L = q[1], R = q[2], k = R.sameLine, P = R.startsLine, g() && "," !== T) h();
                                                else if (!(b() && !this.insideForDeclaration && k && "TERMINATOR" !== H && ":" !== T && p())) {
                                            if (!b() || "TERMINATOR" !== H || "," === T || P && this.looksObjectish(r + 1)) break;
                                            p()
                                        }
                                        if (!("," !== H || this.looksObjectish(r + 1) || !b() || this.insideForDeclaration || "TERMINATOR" === S && this.looksObjectish(r + 2)))
                                            for (x = "OUTDENT" === S ? 1 : 0; b();) p(r + x);
                                        return v(1)
                                    }
                                    return e.push(["CONTROL", r, {
                                        ours: !0
                                    }]), v(1)
                                })
                            }, e.prototype.addLocationDataToGeneratedTokens = function () {
                                return this.scanTokens(function (e, t, n) {
                                    var r, i, s, o, u, a;
                                    return e[2] ? 1 : e.generated || e.explicit ? ("{" === e[0] && (s = null != (u = n[t + 1]) ? u[2] : void 0) ? (i = s.first_line, r = s.first_column) : (o = null != (a = n[t - 1]) ? a[2] : void 0) ? (i = o.last_line, r = o.last_column) : i = r = 0, e[2] = {
                                        first_line: i,
                                        first_column: r,
                                        last_line: i,
                                        last_column: r
                                    }, 1) : 1
                                })
                            }, e.prototype.normalizeLines = function () {
                                var e, t, i, s, o;
                                return o = i = s = null, t = function (e, t) {
                                    var i, s, u, a;
                                    return ";" !== e[1] && (i = e[0], w.call(h, i) >= 0) && !("TERMINATOR" === e[0] && (s = this.tag(t + 1), w.call(r, s) >= 0)) && ("ELSE" !== e[0] || "THEN" === o) && ("CATCH" !== (u = e[0]) && "FINALLY" !== u || "->" !== o && "=>" !== o) || (a = e[0], w.call(n, a) >= 0 && this.tokens[t - 1].newLine)
                                }, e = function (e, t) {
                                    return this.tokens.splice("," === this.tag(t - 1) ? t - 1 : t, 0, s)
                                }, this.scanTokens(function (n, u, a) {
                                    var f, l, c, h, d, v;
                                    if (l = n[0], "TERMINATOR" === l) {
                                        if ("ELSE" === this.tag(u + 1) && "OUTDENT" !== this.tag(u - 1)) return a.splice.apply(a, [u, 1].concat(E.call(this.indentation()))), 1;
                                        if (h = this.tag(u + 1), w.call(r, h) >= 0) return a.splice(u, 1), 0
                                    }
                                    if ("CATCH" === l)
                                        for (f = c = 1; 2 >= c; f = ++c)
                                            if ("OUTDENT" === (d = this.tag(u + f)) || "TERMINATOR" === d || "FINALLY" === d) return a.splice.apply(a, [u + f, 0].concat(E.call(this.indentation()))), 2 + f;
                                    return w.call(p, l) >= 0 && "INDENT" !== this.tag(u + 1) && ("ELSE" !== l || "IF" !== this.tag(u + 1)) ? (o = l, v = this.indentation(a[u]), i = v[0], s = v[1], "THEN" === o && (i.fromThen = !0), a.splice(u + 1, 0, i), this.detectEnd(u + 2, t, e), "THEN" === l && a.splice(u, 1), 1) : 1
                                })
                            }, e.prototype.tagPostfixConditionals = function () {
                                var e, t, n;
                                return n = null, t = function (e, t) {
                                    var n, r;
                                    return r = e[0], n = this.tokens[t - 1][0], "TERMINATOR" === r || "INDENT" === r && 0 > w.call(p, n)
                                }, e = function (e) {
                                    return "INDENT" !== e[0] || e.generated && !e.fromThen ? n[0] = "POST_" + n[0] : void 0
                                }, this.scanTokens(function (r, i) {
                                    return "IF" !== r[0] ? 1 : (n = r, this.detectEnd(i + 1, t, e), 1)
                                })
                            }, e.prototype.indentation = function (e) {
                                var t, n;
                                return t = ["INDENT", 2], n = ["OUTDENT", 2], e ? (t.generated = n.generated = !0, t.origin = n.origin = e) : t.explicit = n.explicit = !0, [t, n]
                            }, e.prototype.generate = d, e.prototype.tag = function (e) {
                                var t;
                                return null != (t = this.tokens[e]) ? t[0] : void 0
                            }, e
                        }(), t = [["(", ")"], ["[", "]"], ["{", "}"], ["INDENT", "OUTDENT"], ["CALL_START", "CALL_END"], ["PARAM_START", "PARAM_END"], ["INDEX_START", "INDEX_END"]], e.INVERSES = l = {}, s = [], i = [], g = 0, y = t.length; y > g; g++) b = t[g], v = b[0], m = b[1], s.push(l[m] = v), i.push(l[v] = m);
                    r = ["CATCH", "THEN", "ELSE", "FINALLY"].concat(i), a = ["IDENTIFIER", "SUPER", ")", "CALL_END", "]", "INDEX_END", "@", "THIS"], o = ["IDENTIFIER", "NUMBER", "STRING", "JS", "REGEX", "NEW", "PARAM_START", "CLASS", "IF", "TRY", "SWITCH", "THIS", "BOOL", "NULL", "UNDEFINED", "UNARY", "UNARY_MATH", "SUPER", "THROW", "@", "->", "=>", "[", "(", "{", "--", "++"], f = ["+", "-"], u = ["POST_IF", "FOR", "WHILE", "UNTIL", "WHEN", "BY", "LOOP", "TERMINATOR"], p = ["ELSE", "->", "=>", "TRY", "FINALLY", "THEN"], h = ["TERMINATOR", "CATCH", "FINALLY", "ELSE", "OUTDENT", "LEADING_WHEN"], c = ["TERMINATOR", "INDENT", "OUTDENT"], n = [".", "?.", "::", "?::"]
                }.call(this), t.exports
            }(), require["./lexer"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M, _, D, P, H, B, j, F, I, q, R, U, z, W, X, V, $, J, K, Q, G, Y, Z, et, tt, nt = [].indexOf || function (e) {
                        for (var t = 0, n = this.length; n > t; t++)
                            if (t in this && this[t] === e) return t;
                        return -1
                    };
                    et = require("./rewriter"), j = et.Rewriter, b = et.INVERSES, tt = require("./helpers"), V = tt.count, Y = tt.starts, X = tt.compact, K = tt.last, G = tt.repeat, $ = tt.invertLiterate, Q = tt.locationDataToString, Z = tt.throwSyntaxError, e.Lexer = C = function () {
                        function e() {}
                        return e.prototype.tokenize = function (e, t) {
                            var n, r, i, s;
                            for (null == t && (t = {}), this.literate = t.literate, this.indent = 0, this.baseIndent = 0, this.indebt = 0, this.outdebt = 0, this.indents = [], this.ends = [], this.tokens = [], this.chunkLine = t.line || 0, this.chunkColumn = t.column || 0, e = this.clean(e), r = 0; this.chunk = e.slice(r);) n = this.identifierToken() || this.commentToken() || this.whitespaceToken() || this.lineToken() || this.heredocToken() || this.stringToken() || this.numberToken() || this.regexToken() || this.jsToken() || this.literalToken(), s = this.getLineAndColumnFromChunk(n), this.chunkLine = s[0], this.chunkColumn = s[1], r += n;
                            return this.closeIndentation(), (i = this.ends.pop()) && this.error("missing " + i), t.rewrite === !1 ? this.tokens : (new j).rewrite(this.tokens)
                        }, e.prototype.clean = function (e) {
                            return e.charCodeAt(0) === t && (e = e.slice(1)), e = e.replace(/\r/g, "").replace(R, ""), W.test(e) && (e = "\n" + e, this.chunkLine--), this.literate && (e = $(e)), e
                        }, e.prototype.identifierToken = function () {
                            var e, t, n, r, i, a, f, l, c, h, p, d, v, g;
                            return (f = m.exec(this.chunk)) ? (a = f[0], r = f[1], e = f[2], i = r.length, l = void 0, "own" === r && "FOR" === this.tag() ? (this.token("OWN", r), r.length) : (n = e || (c = K(this.tokens)) && ("." === (d = c[0]) || "?." === d || "::" === d || "?::" === d || !c.spaced && "@" === c[0]), h = "IDENTIFIER", !n && (nt.call(S, r) >= 0 || nt.call(u, r) >= 0) && (h = r.toUpperCase(), "WHEN" === h && (v = this.tag(), nt.call(x, v) >= 0) ? h = "LEADING_WHEN" : "FOR" === h ? this.seenFor = !0 : "UNLESS" === h ? h = "IF" : nt.call(U, h) >= 0 ? h = "UNARY" : nt.call(H, h) >= 0 && ("INSTANCEOF" !== h && this.seenFor ? (h = "FOR" + h, this.seenFor = !1) : (h = "RELATION", "!" === this.value() && (l = this.tokens.pop(), r = "!" + r)))), nt.call(E, r) >= 0 && (n ? (h = "IDENTIFIER", r = new String(r), r.reserved = !0) : nt.call(B, r) >= 0 && this.error('reserved word "' + r + '"')), n || (nt.call(s, r) >= 0 && (r = o[r]), h = function () {
                                switch (r) {
                                    case "!":
                                        return "UNARY";
                                    case "==":
                                    case "!=":
                                        return "COMPARE";
                                    case "&&":
                                    case "||":
                                        return "LOGIC";
                                    case "true":
                                    case "false":
                                        return "BOOL";
                                    case "break":
                                    case "continue":
                                        return "STATEMENT";
                                    default:
                                        return h
                                }
                            }()), p = this.token(h, r, 0, i), l && (g = [l[2].first_line, l[2].first_column], p[2].first_line = g[0], p[2].first_column = g[1]), e && (t = a.lastIndexOf(":"), this.token(":", ":", t, e.length)), a.length)) : 0
                        }, e.prototype.numberToken = function () {
                            var e, t, n, r, i;
                            return (n = _.exec(this.chunk)) ? (r = n[0], /^0[BOX]/.test(r) ? this.error("radix prefix '" + r + "' must be lowercase") : /E/.test(r) && !/^0x/.test(r) ? this.error("exponential notation '" + r + "' must be indicated with a lowercase 'e'") : /^0\d*[89]/.test(r) ? this.error("decimal literal '" + r + "' must not be prefixed with '0'") : /^0\d+/.test(r) && this.error("octal literal '" + r + "' must be prefixed with '0o'"), t = r.length, (i = /^0o([0-7]+)/.exec(r)) && (r = "0x" + parseInt(i[1], 8).toString(16)), (e = /^0b([01]+)/.exec(r)) && (r = "0x" + parseInt(e[1], 2).toString(16)), this.token("NUMBER", r, 0, t), t) : 0
                        }, e.prototype.stringToken = function () {
                            var e, t, n, r, i, s, o, u;
                            switch (s = this.chunk.charAt(0)) {
                                case "'":
                                    o = (I.exec(this.chunk) || [])[0];
                                    break;
                                case '"':
                                    o = this.balancedString(this.chunk, '"')
                            }
                            if (!o) return 0;
                            if (e = o.slice(1, -1), u = this.removeNewlines(e), '"' === s && o.indexOf("#{", 1) > 0) {
                                for (n = i = 0, t = e.length;
                                    "\n" === e.charAt(i++) && t > i;) n++;
                                this.interpolateString(u, {
                                    strOffset: 1 + n,
                                    lexedLength: o.length
                                })
                            } else this.token("STRING", s + this.escapeLines(u) + s, 0, o.length);
                            return (r = /^(?:\\.|[^\\])*\\(?:0[0-7]|[1-7])/.test(o)) && this.error("octal escape sequences " + o + " are not allowed"), o.length
                        }, e.prototype.heredocToken = function () {
                            var e, t, n, r, i;
                            return (n = c.exec(this.chunk)) ? (t = n[0], r = t.charAt(0), e = this.sanitizeHeredoc(n[2], {
                                quote: r,
                                indent: null
                            }), '"' === r && e.indexOf("#{") >= 0 ? (i = "\n" === n[2].charAt(0) ? 4 : 3, this.interpolateString(e, {
                                heredoc: !0,
                                strOffset: i,
                                lexedLength: t.length
                            })) : this.token("STRING", this.makeString(e, r, !0), 0, t.length), t.length) : 0
                        }, e.prototype.commentToken = function () {
                            var e, t, n;
                            return (n = this.chunk.match(a)) ? (e = n[0], t = n[1], t && this.token("HERECOMMENT", this.sanitizeHeredoc(t, {
                                herecomment: !0,
                                indent: G(" ", this.indent)
                            }), 0, e.length), e.length) : 0
                        }, e.prototype.jsToken = function () {
                            var e, t;
                            return "`" === this.chunk.charAt(0) && (e = w.exec(this.chunk)) ? (this.token("JS", (t = e[0]).slice(1, -1), 0, t.length), t.length) : 0
                        }, e.prototype.regexToken = function () {
                            var e, t, n, r, i, s, o;
                            return "/" !== this.chunk.charAt(0) ? 0 : (t = this.heregexToken()) ? t : (r = K(this.tokens), r && (s = r[0], nt.call(r.spaced ? O : M, s) >= 0) ? 0 : (n = P.exec(this.chunk)) ? (o = n, n = o[0], i = o[1], e = o[2], "//" === i ? 0 : ("/*" === i.slice(0, 2) && this.error("regular expressions cannot begin with `*`"), this.token("REGEX", "" + i + e, 0, n.length), n.length)) : 0)
                        }, e.prototype.heregexToken = function () {
                            var e, t, n, r, i, s, o, u, a, f, l, c, h, p, m, g, y;
                            if (!(i = d.exec(this.chunk))) return 0;
                            if (r = i[0], e = i[1], t = i[2], 0 > e.indexOf("#{")) return u = this.escapeLines(e.replace(v, "$1$2").replace(/\//g, "\\/"), !0), u.match(/^\*/) && this.error("regular expressions cannot begin with `*`"), this.token("REGEX", "/" + (u || "(?:)") + "/" + t, 0, r.length), r.length;
                            for (this.token("IDENTIFIER", "RegExp", 0, 0), this.token("CALL_START", "(", 0, 0), l = [], m = this.interpolateString(e, {
                                    regex: !0,
                                    strOffset: 3
                                }), h = 0, p = m.length; p > h; h++) {
                                if (f = m[h], a = f[0], c = f[1], "TOKENS" === a) l.push.apply(l, c);
                                else if ("NEOSTRING" === a) {
                                    if (!(c = c.replace(v, "$1$2"))) continue;
                                    c = c.replace(/\\/g, "\\\\"), f[0] = "STRING", f[1] = this.makeString(c, '"', !0), l.push(f)
                                } else this.error("Unexpected " + a);
                                o = K(this.tokens), s = ["+", "+"], s[2] = o[2], l.push(s)
                            }
                            return l.pop(), "STRING" !== (null != (g = l[0]) ? g[0] : void 0) && (this.token("STRING", '""', 0, 0), this.token("+", "+", 0, 0)), (y = this.tokens).push.apply(y, l), t && (n = r.lastIndexOf(t), this.token(",", ",", n, 0), this.token("STRING", '"' + t + '"', n, t.length)), this.token(")", ")", r.length - 1, 0), r.length
                        }, e.prototype.lineToken = function () {
                            var e, t, n, r, i;
                            if (!(n = A.exec(this.chunk))) return 0;
                            if (t = n[0], this.seenFor = !1, i = t.length - 1 - t.lastIndexOf("\n"), r = this.unfinished(), i - this.indebt === this.indent) return r ? this.suppressNewlines() : this.newlineToken(0), t.length;
                            if (i > this.indent) {
                                if (r) return this.indebt = i - this.indent, this.suppressNewlines(), t.length;
                                if (!this.tokens.length) return this.baseIndent = this.indent = i, t.length;
                                e = i - this.indent + this.outdebt, this.token("INDENT", e, t.length - i, i), this.indents.push(e), this.ends.push("OUTDENT"), this.outdebt = this.indebt = 0, this.indent = i
                            } else this.baseIndent > i ? this.error("missing indentation", t.length) : (this.indebt = 0, this.outdentToken(this.indent - i, r, t.length));
                            return t.length
                        }, e.prototype.outdentToken = function (e, t, n) {
                            var r, i, s, o;
                            for (r = this.indent - e; e > 0;) s = this.indents[this.indents.length - 1], s ? s === this.outdebt ? (e -= this.outdebt, this.outdebt = 0) : this.outdebt > s ? (this.outdebt -= s, e -= s) : (i = this.indents.pop() + this.outdebt, n && (o = this.chunk[n], nt.call(g, o) >= 0) && (r -= i - e, e = i), this.outdebt = 0, this.pair("OUTDENT"), this.token("OUTDENT", e, 0, n), e -= i) : e = 0;
                            for (i && (this.outdebt -= e);
                                ";" === this.value();) this.tokens.pop();
                            return "TERMINATOR" === this.tag() || t || this.token("TERMINATOR", "\n", n, 0), this.indent = r, this
                        }, e.prototype.whitespaceToken = function () {
                            var e, t, n;
                            return (e = W.exec(this.chunk)) || (t = "\n" === this.chunk.charAt(0)) ? (n = K(this.tokens), n && (n[e ? "spaced" : "newLine"] = !0), e ? e[0].length : 0) : 0
                        }, e.prototype.newlineToken = function (e) {
                            for (;
                                ";" === this.value();) this.tokens.pop();
                            return "TERMINATOR" !== this.tag() && this.token("TERMINATOR", "\n", e, 0), this
                        }, e.prototype.suppressNewlines = function () {
                            return "\\" === this.value() && this.tokens.pop(), this
                        }, e.prototype.literalToken = function () {
                            var e, t, n, s, o, u, a, c;
                            if ((e = D.exec(this.chunk)) ? (s = e[0], i.test(s) && this.tagParameters()) : s = this.chunk.charAt(0), n = s, t = K(this.tokens), "=" === s && t && (!t[1].reserved && (o = t[1], nt.call(E, o) >= 0) && this.error('reserved word "' + this.value() + "\" can't be assigned"), "||" === (u = t[1]) || "&&" === u)) return t[0] = "COMPOUND_ASSIGN", t[1] += "=", s.length;
                            if (";" === s) this.seenFor = !1, n = "TERMINATOR";
                            else if (nt.call(k, s) >= 0) n = "MATH";
                            else if (nt.call(f, s) >= 0) n = "COMPARE";
                            else if (nt.call(l, s) >= 0) n = "COMPOUND_ASSIGN";
                            else if (nt.call(U, s) >= 0) n = "UNARY";
                            else if (nt.call(z, s) >= 0) n = "UNARY_MATH";
                            else if (nt.call(F, s) >= 0) n = "SHIFT";
                            else if (nt.call(N, s) >= 0 || "?" === s && (null != t ? t.spaced : void 0)) n = "LOGIC";
                            else if (t && !t.spaced)
                                if ("(" === s && (a = t[0], nt.call(r, a) >= 0)) "?" === t[0] && (t[0] = "FUNC_EXIST"), n = "CALL_START";
                                else if ("[" === s && (c = t[0], nt.call(y, c) >= 0)) switch (n = "INDEX_START", t[0]) {
                                case "?":
                                    t[0] = "INDEX_SOAK"
                            }
                            switch (s) {
                                case "(":
                                case "{":
                                case "[":
                                    this.ends.push(b[s]);
                                    break;
                                case ")":
                                case "}":
                                case "]":
                                    this.pair(s)
                            }
                            return this.token(n, s), s.length
                        }, e.prototype.sanitizeHeredoc = function (e, t) {
                            var n, r, i, s, o;
                            if (i = t.indent, r = t.herecomment) {
                                if (h.test(e) && this.error('block comment cannot contain "*/", starting'), 0 > e.indexOf("\n")) return e
                            } else
                                for (; s = p.exec(e);) n = s[1], (null === i || (o = n.length) > 0 && i.length > o) && (i = n);
                            return i && (e = e.replace(RegExp("\\n" + i, "g"), "\n")), r || (e = e.replace(/^\n/, "")), e
                        }, e.prototype.tagParameters = function () {
                            var e, t, n, r;
                            if (")" !== this.tag()) return this;
                            for (t = [], r = this.tokens, e = r.length, r[--e][0] = "PARAM_END"; n = r[--e];) switch (n[0]) {
                                case ")":
                                    t.push(n);
                                    break;
                                case "(":
                                case "CALL_START":
                                    if (!t.length) return "(" === n[0] ? (n[0] = "PARAM_START", this) : this;
                                    t.pop()
                            }
                            return this
                        }, e.prototype.closeIndentation = function () {
                            return this.outdentToken(this.indent)
                        }, e.prototype.balancedString = function (e, t) {
                            var n, r, i, s, o, u, a, f;
                            for (n = 0, u = [t], r = a = 1, f = e.length; f >= 1 ? f > a : a > f; r = f >= 1 ? ++a : --a)
                                if (n) --n;
                                else {
                                    switch (i = e.charAt(r)) {
                                        case "\\":
                                            ++n;
                                            continue;
                                        case t:
                                            if (u.pop(), !u.length) return e.slice(0, +r + 1 || 9e9);
                                            t = u[u.length - 1];
                                            continue
                                    }
                                    "}" !== t || '"' !== i && "'" !== i ? "}" === t && "/" === i && (s = d.exec(e.slice(r)) || P.exec(e.slice(r))) ? n += s[0].length - 1 : "}" === t && "{" === i ? u.push(t = "}") : '"' === t && "#" === o && "{" === i && u.push(t = "}") : u.push(t = i), o = i
                                } return this.error("missing " + u.pop() + ", starting")
                        }, e.prototype.interpolateString = function (t, n) {
                            var r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M;
                            for (null == n && (n = {}), o = n.heredoc, w = n.regex, m = n.offsetInChunk, S = n.strOffset, h = n.lexedLength, m || (m = 0), S || (S = 0), h || (h = t.length), N = [], g = 0, u = -1; c = t.charAt(u += 1);) "\\" !== c ? "#" === c && "{" === t.charAt(u + 1) && (s = this.balancedString(t.slice(u + 1), "}")) && (u > g && N.push(this.makeToken("NEOSTRING", t.slice(g, u), S + g)), i || (i = this.makeToken("", "string interpolation", m + u + 1, 2)), a = s.slice(1, -1), a.length && (A = this.getLineAndColumnFromChunk(S + u + 2), p = A[0], r = A[1], v = (new e).tokenize(a, {
                                line: p,
                                column: r,
                                rewrite: !1
                            }), b = v.pop(), "TERMINATOR" === (null != (O = v[0]) ? O[0] : void 0) && (b = v.shift()), (l = v.length) && (l > 1 && (v.unshift(this.makeToken("(", "(", S + u + 1, 0)), v.push(this.makeToken(")", ")", S + u + 1 + a.length, 0))), N.push(["TOKENS", v]))), u += s.length, g = u + 1) : u += 1;
                            if (u > g && t.length > g && N.push(this.makeToken("NEOSTRING", t.slice(g), S + g)), w) return N;
                            if (!N.length) return this.token("STRING", '""', m, h);
                            for ("NEOSTRING" !== N[0][0] && N.unshift(this.makeToken("NEOSTRING", "", m)), (f = N.length > 1) && this.token("(", "(", m, 0, i), u = k = 0, L = N.length; L > k; u = ++k) T = N[u], x = T[0], C = T[1], u && (u && (y = this.token("+", "+")), d = "TOKENS" === x ? C[0] : T, y[2] = {
                                first_line: d[2].first_line,
                                first_column: d[2].first_column,
                                last_line: d[2].first_line,
                                last_column: d[2].first_column
                            }), "TOKENS" === x ? (M = this.tokens).push.apply(M, C) : "NEOSTRING" === x ? (T[0] = "STRING", T[1] = this.makeString(C, '"', o), this.tokens.push(T)) : this.error("Unexpected " + x);
                            return f && (E = this.makeToken(")", ")", m + h, 0), E.stringEnd = !0, this.tokens.push(E)), N
                        }, e.prototype.pair = function (e) {
                            var t;
                            return e !== (t = K(this.ends)) ? ("OUTDENT" !== t && this.error("unmatched " + e), this.outdentToken(K(this.indents), !0), this.pair(e)) : this.ends.pop()
                        }, e.prototype.getLineAndColumnFromChunk = function (e) {
                            var t, n, r, i;
                            return 0 === e ? [this.chunkLine, this.chunkColumn] : (i = e >= this.chunk.length ? this.chunk : this.chunk.slice(0, +(e - 1) + 1 || 9e9), n = V(i, "\n"), t = this.chunkColumn, n > 0 ? (r = i.split("\n"), t = K(r).length) : t += i.length, [this.chunkLine + n, t])
                        }, e.prototype.makeToken = function (e, t, n, r) {
                            var i, s, o, u, a;
                            return null == n && (n = 0), null == r && (r = t.length), s = {}, u = this.getLineAndColumnFromChunk(n), s.first_line = u[0], s.first_column = u[1], i = Math.max(0, r - 1), a = this.getLineAndColumnFromChunk(n + i), s.last_line = a[0], s.last_column = a[1], o = [e, t, s]
                        }, e.prototype.token = function (e, t, n, r, i) {
                            var s;
                            return s = this.makeToken(e, t, n, r), i && (s.origin = i), this.tokens.push(s), s
                        }, e.prototype.tag = function (e, t) {
                            var n;
                            return (n = K(this.tokens, e)) && (t ? n[0] = t : n[0])
                        }, e.prototype.value = function (e, t) {
                            var n;
                            return (n = K(this.tokens, e)) && (t ? n[1] = t : n[1])
                        }, e.prototype.unfinished = function () {
                            var e;
                            return T.test(this.chunk) || "\\" === (e = this.tag()) || "." === e || "?." === e || "?::" === e || "UNARY" === e || "MATH" === e || "UNARY_MATH" === e || "+" === e || "-" === e || "**" === e || "SHIFT" === e || "RELATION" === e || "COMPARE" === e || "LOGIC" === e || "THROW" === e || "EXTENDS" === e
                        }, e.prototype.removeNewlines = function (e) {
                            return e.replace(/^\s*\n\s*/, "").replace(/([^\\]|\\\\)\s*\n\s*$/, "$1")
                        }, e.prototype.escapeLines = function (e, t) {
                            return e = e.replace(/\\[^\S\n]*(\n|\\)\s*/g, function (e, t) {
                                return "\n" === t ? "" : e
                            }), t ? e.replace(L, "\\n") : e.replace(/\s*\n\s*/g, " ")
                        }, e.prototype.makeString = function (e, t, n) {
                            return e ? (e = e.replace(RegExp("\\\\(" + t + "|\\\\)", "g"), function (e, n) {
                                return n === t ? n : e
                            }), e = e.replace(RegExp("" + t, "g"), "\\$&"), t + this.escapeLines(e, n) + t) : t + t
                        }, e.prototype.error = function (e, t) {
                            var n, r, i;
                            return null == t && (t = 0), i = this.getLineAndColumnFromChunk(t), r = i[0], n = i[1], Z(e, {
                                first_line: r,
                                first_column: n
                            })
                        }, e
                    }(), S = ["true", "false", "null", "this", "new", "delete", "typeof", "in", "instanceof", "return", "throw", "break", "continue", "debugger", "if", "else", "switch", "for", "while", "do", "try", "catch", "finally", "class", "extends", "super"], u = ["undefined", "then", "unless", "until", "loop", "of", "by", "when"], o = {
                        and: "&&",
                        or: "||",
                        is: "==",
                        isnt: "!=",
                        not: "!",
                        yes: "true",
                        no: "false",
                        on: "true",
                        off: "false"
                    }, s = function () {
                        var e;
                        e = [];
                        for (J in o) e.push(J);
                        return e
                    }(), u = u.concat(s), B = ["case", "default", "function", "var", "void", "with", "const", "let", "enum", "export", "import", "native", "__hasProp", "__extends", "__slice", "__bind", "__indexOf", "implements", "interface", "package", "private", "protected", "public", "static", "yield"], q = ["arguments", "eval"], E = S.concat(B).concat(q), e.RESERVED = B.concat(S).concat(u).concat(q), e.STRICT_PROSCRIBED = q, t = 65279, m = /^([$A-Za-z_\x7f-\uffff][$\w\x7f-\uffff]*)([^\n\S]*:(?!:))?/, _ = /^0b[01]+|^0o[0-7]+|^0x[\da-f]+|^\d*\.?\d+(?:e[+-]?\d+)?/i, c = /^("""|''')((?:\\[\s\S]|[^\\])*?)(?:\n[^\n\S]*)?\1/, D = /^(?:[-=]>|[-+*\/%<>&|^!?=]=|>>>=?|([-+:])\1|([&|<>*\/%])\2=?|\?(\.|::)|\.{2,3})/, W = /^[^\n\S]+/, a = /^###([^#][\s\S]*?)(?:###[^\n\S]*|###$)|^(?:\s*#(?!##[^#]).*)+/, i = /^[-=]>/, A = /^(?:\n[^\n\S]*)+/, I = /^'[^\\']*(?:\\[\s\S][^\\']*)*'/, w = /^`[^\\`]*(?:\\.[^\\`]*)*`/, P = /^(\/(?![\s=])[^[\/\n\\]*(?:(?:\\[\s\S]|\[[^\]\n\\]*(?:\\[\s\S][^\]\n\\]*)*])[^[\/\n\\]*)*\/)([imgy]{0,4})(?!\w)/, d = /^\/{3}((?:\\?[\s\S])+?)\/{3}([imgy]{0,4})(?!\w)/, v = /((?:\\\\)+)|\\(\s|\/)|\s+(?:#.*)?/g, L = /\n/g, p = /\n+([^\n\S]*)/g, h = /\*\//, T = /^\s*(?:,|\??\.(?![.\d])|::)/, R = /\s+$/, l = ["-=", "+=", "/=", "*=", "%=", "||=", "&&=", "?=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "//=", "%%="], U = ["NEW", "TYPEOF", "DELETE", "DO"], z = ["!", "~"], N = ["&&", "||", "&", "|", "^"], F = ["<<", ">>", ">>>"], f = ["==", "!=", "<", ">", "<=", ">="], k = ["*", "/", "%", "//", "%%"], H = ["IN", "OF", "INSTANCEOF"], n = ["TRUE", "FALSE"], O = ["NUMBER", "REGEX", "BOOL", "NULL", "UNDEFINED", "++", "--"], M = O.concat(")", "}", "THIS", "IDENTIFIER", "STRING", "]"), r = ["IDENTIFIER", "STRING", "REGEX", ")", "]", "}", "?", "::", "@", "THIS", "SUPER"], y = r.concat("NUMBER", "BOOL", "NULL", "UNDEFINED"), x = ["INDENT", "OUTDENT", "TERMINATOR"], g = [")", "}", "]"]
                }.call(this), t.exports
            }(), require["./parser"] = function () {
                var e = {},
                    t = {
                        exports: e
                    },
                    n = function () {
                        function e() {
                            this.yy = {}
                        }
                        var t = {
                            trace: function () {},
                            yy: {},
                            symbols_: {
                                error: 2,
                                Root: 3,
                                Body: 4,
                                Line: 5,
                                TERMINATOR: 6,
                                Expression: 7,
                                Statement: 8,
                                Return: 9,
                                Comment: 10,
                                STATEMENT: 11,
                                Value: 12,
                                Invocation: 13,
                                Code: 14,
                                Operation: 15,
                                Assign: 16,
                                If: 17,
                                Try: 18,
                                While: 19,
                                For: 20,
                                Switch: 21,
                                Class: 22,
                                Throw: 23,
                                Block: 24,
                                INDENT: 25,
                                OUTDENT: 26,
                                Identifier: 27,
                                IDENTIFIER: 28,
                                AlphaNumeric: 29,
                                NUMBER: 30,
                                STRING: 31,
                                Literal: 32,
                                JS: 33,
                                REGEX: 34,
                                DEBUGGER: 35,
                                UNDEFINED: 36,
                                NULL: 37,
                                BOOL: 38,
                                Assignable: 39,
                                "=": 40,
                                AssignObj: 41,
                                ObjAssignable: 42,
                                ":": 43,
                                ThisProperty: 44,
                                RETURN: 45,
                                HERECOMMENT: 46,
                                PARAM_START: 47,
                                ParamList: 48,
                                PARAM_END: 49,
                                FuncGlyph: 50,
                                "->": 51,
                                "=>": 52,
                                OptComma: 53,
                                ",": 54,
                                Param: 55,
                                ParamVar: 56,
                                "...": 57,
                                Array: 58,
                                Object: 59,
                                Splat: 60,
                                SimpleAssignable: 61,
                                Accessor: 62,
                                Parenthetical: 63,
                                Range: 64,
                                This: 65,
                                ".": 66,
                                "?.": 67,
                                "::": 68,
                                "?::": 69,
                                Index: 70,
                                INDEX_START: 71,
                                IndexValue: 72,
                                INDEX_END: 73,
                                INDEX_SOAK: 74,
                                Slice: 75,
                                "{": 76,
                                AssignList: 77,
                                "}": 78,
                                CLASS: 79,
                                EXTENDS: 80,
                                OptFuncExist: 81,
                                Arguments: 82,
                                SUPER: 83,
                                FUNC_EXIST: 84,
                                CALL_START: 85,
                                CALL_END: 86,
                                ArgList: 87,
                                THIS: 88,
                                "@": 89,
                                "[": 90,
                                "]": 91,
                                RangeDots: 92,
                                "..": 93,
                                Arg: 94,
                                SimpleArgs: 95,
                                TRY: 96,
                                Catch: 97,
                                FINALLY: 98,
                                CATCH: 99,
                                THROW: 100,
                                "(": 101,
                                ")": 102,
                                WhileSource: 103,
                                WHILE: 104,
                                WHEN: 105,
                                UNTIL: 106,
                                Loop: 107,
                                LOOP: 108,
                                ForBody: 109,
                                FOR: 110,
                                ForStart: 111,
                                ForSource: 112,
                                ForVariables: 113,
                                OWN: 114,
                                ForValue: 115,
                                FORIN: 116,
                                FOROF: 117,
                                BY: 118,
                                SWITCH: 119,
                                Whens: 120,
                                ELSE: 121,
                                When: 122,
                                LEADING_WHEN: 123,
                                IfBlock: 124,
                                IF: 125,
                                POST_IF: 126,
                                UNARY: 127,
                                UNARY_MATH: 128,
                                "-": 129,
                                "+": 130,
                                "--": 131,
                                "++": 132,
                                "?": 133,
                                MATH: 134,
                                "**": 135,
                                SHIFT: 136,
                                COMPARE: 137,
                                LOGIC: 138,
                                RELATION: 139,
                                COMPOUND_ASSIGN: 140,
                                $accept: 0,
                                $end: 1
                            },
                            terminals_: {
                                2: "error",
                                6: "TERMINATOR",
                                11: "STATEMENT",
                                25: "INDENT",
                                26: "OUTDENT",
                                28: "IDENTIFIER",
                                30: "NUMBER",
                                31: "STRING",
                                33: "JS",
                                34: "REGEX",
                                35: "DEBUGGER",
                                36: "UNDEFINED",
                                37: "NULL",
                                38: "BOOL",
                                40: "=",
                                43: ":",
                                45: "RETURN",
                                46: "HERECOMMENT",
                                47: "PARAM_START",
                                49: "PARAM_END",
                                51: "->",
                                52: "=>",
                                54: ",",
                                57: "...",
                                66: ".",
                                67: "?.",
                                68: "::",
                                69: "?::",
                                71: "INDEX_START",
                                73: "INDEX_END",
                                74: "INDEX_SOAK",
                                76: "{",
                                78: "}",
                                79: "CLASS",
                                80: "EXTENDS",
                                83: "SUPER",
                                84: "FUNC_EXIST",
                                85: "CALL_START",
                                86: "CALL_END",
                                88: "THIS",
                                89: "@",
                                90: "[",
                                91: "]",
                                93: "..",
                                96: "TRY",
                                98: "FINALLY",
                                99: "CATCH",
                                100: "THROW",
                                101: "(",
                                102: ")",
                                104: "WHILE",
                                105: "WHEN",
                                106: "UNTIL",
                                108: "LOOP",
                                110: "FOR",
                                114: "OWN",
                                116: "FORIN",
                                117: "FOROF",
                                118: "BY",
                                119: "SWITCH",
                                121: "ELSE",
                                123: "LEADING_WHEN",
                                125: "IF",
                                126: "POST_IF",
                                127: "UNARY",
                                128: "UNARY_MATH",
                                129: "-",
                                130: "+",
                                131: "--",
                                132: "++",
                                133: "?",
                                134: "MATH",
                                135: "**",
                                136: "SHIFT",
                                137: "COMPARE",
                                138: "LOGIC",
                                139: "RELATION",
                                140: "COMPOUND_ASSIGN"
                            },
                            productions_: [0, [3, 0], [3, 1], [4, 1], [4, 3], [4, 2], [5, 1], [5, 1], [8, 1], [8, 1], [8, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [24, 2], [24, 3], [27, 1], [29, 1], [29, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [16, 3], [16, 4], [16, 5], [41, 1], [41, 3], [41, 5], [41, 1], [42, 1], [42, 1], [42, 1], [9, 2], [9, 1], [10, 1], [14, 5], [14, 2], [50, 1], [50, 1], [53, 0], [53, 1], [48, 0], [48, 1], [48, 3], [48, 4], [48, 6], [55, 1], [55, 2], [55, 3], [55, 1], [56, 1], [56, 1], [56, 1], [56, 1], [60, 2], [61, 1], [61, 2], [61, 2], [61, 1], [39, 1], [39, 1], [39, 1], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [62, 2], [62, 2], [62, 2], [62, 2], [62, 1], [62, 1], [70, 3], [70, 2], [72, 1], [72, 1], [59, 4], [77, 0], [77, 1], [77, 3], [77, 4], [77, 6], [22, 1], [22, 2], [22, 3], [22, 4], [22, 2], [22, 3], [22, 4], [22, 5], [13, 3], [13, 3], [13, 1], [13, 2], [81, 0], [81, 1], [82, 2], [82, 4], [65, 1], [65, 1], [44, 2], [58, 2], [58, 4], [92, 1], [92, 1], [64, 5], [75, 3], [75, 2], [75, 2], [75, 1], [87, 1], [87, 3], [87, 4], [87, 4], [87, 6], [94, 1], [94, 1], [94, 1], [95, 1], [95, 3], [18, 2], [18, 3], [18, 4], [18, 5], [97, 3], [97, 3], [97, 2], [23, 2], [63, 3], [63, 5], [103, 2], [103, 4], [103, 2], [103, 4], [19, 2], [19, 2], [19, 2], [19, 1], [107, 2], [107, 2], [20, 2], [20, 2], [20, 2], [109, 2], [109, 2], [111, 2], [111, 3], [115, 1], [115, 1], [115, 1], [115, 1], [113, 1], [113, 3], [112, 2], [112, 2], [112, 4], [112, 4], [112, 4], [112, 6], [112, 6], [21, 5], [21, 7], [21, 4], [21, 6], [120, 1], [120, 2], [122, 3], [122, 4], [124, 3], [124, 5], [17, 1], [17, 3], [17, 3], [17, 3], [15, 2], [15, 2], [15, 2], [15, 2], [15, 2], [15, 2], [15, 2], [15, 2], [15, 2], [15, 3], [15, 3], [15, 3], [15, 3], [15, 3], [15, 3], [15, 3], [15, 3], [15, 3], [15, 5], [15, 4], [15, 3]],
                            performAction: function (e, t, n, r, i, s, o) {
                                var u = s.length - 1;
                                switch (i) {
                                    case 1:
                                        return this.$ = r.addLocationDataFn(o[u], o[u])(new r.Block);
                                    case 2:
                                        return this.$ = s[u];
                                    case 3:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(r.Block.wrap([s[u]]));
                                        break;
                                    case 4:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 2].push(s[u]));
                                        break;
                                    case 5:
                                        this.$ = s[u - 1];
                                        break;
                                    case 6:
                                        this.$ = s[u];
                                        break;
                                    case 7:
                                        this.$ = s[u];
                                        break;
                                    case 8:
                                        this.$ = s[u];
                                        break;
                                    case 9:
                                        this.$ = s[u];
                                        break;
                                    case 10:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 11:
                                        this.$ = s[u];
                                        break;
                                    case 12:
                                        this.$ = s[u];
                                        break;
                                    case 13:
                                        this.$ = s[u];
                                        break;
                                    case 14:
                                        this.$ = s[u];
                                        break;
                                    case 15:
                                        this.$ = s[u];
                                        break;
                                    case 16:
                                        this.$ = s[u];
                                        break;
                                    case 17:
                                        this.$ = s[u];
                                        break;
                                    case 18:
                                        this.$ = s[u];
                                        break;
                                    case 19:
                                        this.$ = s[u];
                                        break;
                                    case 20:
                                        this.$ = s[u];
                                        break;
                                    case 21:
                                        this.$ = s[u];
                                        break;
                                    case 22:
                                        this.$ = s[u];
                                        break;
                                    case 23:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Block);
                                        break;
                                    case 24:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 1]);
                                        break;
                                    case 25:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 26:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 27:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 28:
                                        this.$ = s[u];
                                        break;
                                    case 29:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 30:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 31:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Literal(s[u]));
                                        break;
                                    case 32:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Undefined);
                                        break;
                                    case 33:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Null);
                                        break;
                                    case 34:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Bool(s[u]));
                                        break;
                                    case 35:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Assign(s[u - 2], s[u]));
                                        break;
                                    case 36:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Assign(s[u - 3], s[u]));
                                        break;
                                    case 37:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Assign(s[u - 4], s[u - 1]));
                                        break;
                                    case 38:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 39:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Assign(r.addLocationDataFn(o[u - 2])(new r.Value(s[u - 2])), s[u], "object"));
                                        break;
                                    case 40:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Assign(r.addLocationDataFn(o[u - 4])(new r.Value(s[u - 4])), s[u - 1], "object"));
                                        break;
                                    case 41:
                                        this.$ = s[u];
                                        break;
                                    case 42:
                                        this.$ = s[u];
                                        break;
                                    case 43:
                                        this.$ = s[u];
                                        break;
                                    case 44:
                                        this.$ = s[u];
                                        break;
                                    case 45:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Return(s[u]));
                                        break;
                                    case 46:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Return);
                                        break;
                                    case 47:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Comment(s[u]));
                                        break;
                                    case 48:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Code(s[u - 3], s[u], s[u - 1]));
                                        break;
                                    case 49:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Code([], s[u], s[u - 1]));
                                        break;
                                    case 50:
                                        this.$ = r.addLocationDataFn(o[u], o[u])("func");
                                        break;
                                    case 51:
                                        this.$ = r.addLocationDataFn(o[u], o[u])("boundfunc");
                                        break;
                                    case 52:
                                        this.$ = s[u];
                                        break;
                                    case 53:
                                        this.$ = s[u];
                                        break;
                                    case 54:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([]);
                                        break;
                                    case 55:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([s[u]]);
                                        break;
                                    case 56:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 2].concat(s[u]));
                                        break;
                                    case 57:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(s[u - 3].concat(s[u]));
                                        break;
                                    case 58:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])(s[u - 5].concat(s[u - 2]));
                                        break;
                                    case 59:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Param(s[u]));
                                        break;
                                    case 60:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Param(s[u - 1], null, !0));
                                        break;
                                    case 61:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Param(s[u - 2], s[u]));
                                        break;
                                    case 62:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Expansion);
                                        break;
                                    case 63:
                                        this.$ = s[u];
                                        break;
                                    case 64:
                                        this.$ = s[u];
                                        break;
                                    case 65:
                                        this.$ = s[u];
                                        break;
                                    case 66:
                                        this.$ = s[u];
                                        break;
                                    case 67:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Splat(s[u - 1]));
                                        break;
                                    case 68:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 69:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u - 1].add(s[u]));
                                        break;
                                    case 70:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Value(s[u - 1], [].concat(s[u])));
                                        break;
                                    case 71:
                                        this.$ = s[u];
                                        break;
                                    case 72:
                                        this.$ = s[u];
                                        break;
                                    case 73:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 74:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 75:
                                        this.$ = s[u];
                                        break;
                                    case 76:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 77:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 78:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 79:
                                        this.$ = s[u];
                                        break;
                                    case 80:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Access(s[u]));
                                        break;
                                    case 81:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Access(s[u], "soak"));
                                        break;
                                    case 82:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])([r.addLocationDataFn(o[u - 1])(new r.Access(new r.Literal("prototype"))), r.addLocationDataFn(o[u])(new r.Access(s[u]))]);
                                        break;
                                    case 83:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])([r.addLocationDataFn(o[u - 1])(new r.Access(new r.Literal("prototype"), "soak")), r.addLocationDataFn(o[u])(new r.Access(s[u]))]);
                                        break;
                                    case 84:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Access(new r.Literal("prototype")));
                                        break;
                                    case 85:
                                        this.$ = s[u];
                                        break;
                                    case 86:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 1]);
                                        break;
                                    case 87:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(r.extend(s[u], {
                                            soak: !0
                                        }));
                                        break;
                                    case 88:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Index(s[u]));
                                        break;
                                    case 89:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Slice(s[u]));
                                        break;
                                    case 90:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Obj(s[u - 2], s[u - 3].generated));
                                        break;
                                    case 91:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([]);
                                        break;
                                    case 92:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([s[u]]);
                                        break;
                                    case 93:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 2].concat(s[u]));
                                        break;
                                    case 94:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(s[u - 3].concat(s[u]));
                                        break;
                                    case 95:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])(s[u - 5].concat(s[u - 2]));
                                        break;
                                    case 96:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Class);
                                        break;
                                    case 97:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Class(null, null, s[u]));
                                        break;
                                    case 98:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Class(null, s[u]));
                                        break;
                                    case 99:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Class(null, s[u - 1], s[u]));
                                        break;
                                    case 100:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Class(s[u]));
                                        break;
                                    case 101:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Class(s[u - 1], null, s[u]));
                                        break;
                                    case 102:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Class(s[u - 2], s[u]));
                                        break;
                                    case 103:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Class(s[u - 3], s[u - 1], s[u]));
                                        break;
                                    case 104:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Call(s[u - 2], s[u], s[u - 1]));
                                        break;
                                    case 105:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Call(s[u - 2], s[u], s[u - 1]));
                                        break;
                                    case 106:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Call("super", [new r.Splat(new r.Literal("arguments"))]));
                                        break;
                                    case 107:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Call("super", s[u]));
                                        break;
                                    case 108:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(!1);
                                        break;
                                    case 109:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(!0);
                                        break;
                                    case 110:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])([]);
                                        break;
                                    case 111:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(s[u - 2]);
                                        break;
                                    case 112:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(new r.Literal("this")));
                                        break;
                                    case 113:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(new r.Literal("this")));
                                        break;
                                    case 114:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Value(r.addLocationDataFn(o[u - 1])(new r.Literal("this")), [r.addLocationDataFn(o[u])(new r.Access(s[u]))], "this"));
                                        break;
                                    case 115:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Arr([]));
                                        break;
                                    case 116:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Arr(s[u - 2]));
                                        break;
                                    case 117:
                                        this.$ = r.addLocationDataFn(o[u], o[u])("inclusive");
                                        break;
                                    case 118:
                                        this.$ = r.addLocationDataFn(o[u], o[u])("exclusive");
                                        break;
                                    case 119:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Range(s[u - 3], s[u - 1], s[u - 2]));
                                        break;
                                    case 120:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Range(s[u - 2], s[u], s[u - 1]));
                                        break;
                                    case 121:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Range(s[u - 1], null, s[u]));
                                        break;
                                    case 122:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Range(null, s[u], s[u - 1]));
                                        break;
                                    case 123:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Range(null, null, s[u]));
                                        break;
                                    case 124:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([s[u]]);
                                        break;
                                    case 125:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 2].concat(s[u]));
                                        break;
                                    case 126:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(s[u - 3].concat(s[u]));
                                        break;
                                    case 127:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(s[u - 2]);
                                        break;
                                    case 128:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])(s[u - 5].concat(s[u - 2]));
                                        break;
                                    case 129:
                                        this.$ = s[u];
                                        break;
                                    case 130:
                                        this.$ = s[u];
                                        break;
                                    case 131:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Expansion);
                                        break;
                                    case 132:
                                        this.$ = s[u];
                                        break;
                                    case 133:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])([].concat(s[u - 2], s[u]));
                                        break;
                                    case 134:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Try(s[u]));
                                        break;
                                    case 135:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Try(s[u - 1], s[u][0], s[u][1]));
                                        break;
                                    case 136:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Try(s[u - 2], null, null, s[u]));
                                        break;
                                    case 137:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Try(s[u - 3], s[u - 2][0], s[u - 2][1], s[u]));
                                        break;
                                    case 138:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])([s[u - 1], s[u]]);
                                        break;
                                    case 139:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])([r.addLocationDataFn(o[u - 1])(new r.Value(s[u - 1])), s[u]]);
                                        break;
                                    case 140:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])([null, s[u]]);
                                        break;
                                    case 141:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Throw(s[u]));
                                        break;
                                    case 142:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Parens(s[u - 1]));
                                        break;
                                    case 143:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Parens(s[u - 2]));
                                        break;
                                    case 144:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.While(s[u]));
                                        break;
                                    case 145:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.While(s[u - 2], {
                                            guard: s[u]
                                        }));
                                        break;
                                    case 146:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.While(s[u], {
                                            invert: !0
                                        }));
                                        break;
                                    case 147:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.While(s[u - 2], {
                                            invert: !0,
                                            guard: s[u]
                                        }));
                                        break;
                                    case 148:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u - 1].addBody(s[u]));
                                        break;
                                    case 149:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u].addBody(r.addLocationDataFn(o[u - 1])(r.Block.wrap([s[u - 1]]))));
                                        break;
                                    case 150:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u].addBody(r.addLocationDataFn(o[u - 1])(r.Block.wrap([s[u - 1]]))));
                                        break;
                                    case 151:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(s[u]);
                                        break;
                                    case 152:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])((new r.While(r.addLocationDataFn(o[u - 1])(new r.Literal("true")))).addBody(s[u]));
                                        break;
                                    case 153:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])((new r.While(r.addLocationDataFn(o[u - 1])(new r.Literal("true")))).addBody(r.addLocationDataFn(o[u])(r.Block.wrap([s[u]]))));
                                        break;
                                    case 154:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.For(s[u - 1], s[u]));
                                        break;
                                    case 155:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.For(s[u - 1], s[u]));
                                        break;
                                    case 156:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.For(s[u], s[u - 1]));
                                        break;
                                    case 157:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])({
                                            source: r.addLocationDataFn(o[u])(new r.Value(s[u]))
                                        });
                                        break;
                                    case 158:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(function () {
                                            return s[u].own = s[u - 1].own, s[u].name = s[u - 1][0], s[u].index = s[u - 1][1], s[u]
                                        }());
                                        break;
                                    case 159:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u]);
                                        break;
                                    case 160:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(function () {
                                            return s[u].own = !0, s[u]
                                        }());
                                        break;
                                    case 161:
                                        this.$ = s[u];
                                        break;
                                    case 162:
                                        this.$ = s[u];
                                        break;
                                    case 163:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 164:
                                        this.$ = r.addLocationDataFn(o[u], o[u])(new r.Value(s[u]));
                                        break;
                                    case 165:
                                        this.$ = r.addLocationDataFn(o[u], o[u])([s[u]]);
                                        break;
                                    case 166:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])([s[u - 2], s[u]]);
                                        break;
                                    case 167:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])({
                                            source: s[u]
                                        });
                                        break;
                                    case 168:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])({
                                            source: s[u],
                                            object: !0
                                        });
                                        break;
                                    case 169:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])({
                                            source: s[u - 2],
                                            guard: s[u]
                                        });
                                        break;
                                    case 170:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])({
                                            source: s[u - 2],
                                            guard: s[u],
                                            object: !0
                                        });
                                        break;
                                    case 171:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])({
                                            source: s[u - 2],
                                            step: s[u]
                                        });
                                        break;
                                    case 172:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])({
                                            source: s[u - 4],
                                            guard: s[u - 2],
                                            step: s[u]
                                        });
                                        break;
                                    case 173:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])({
                                            source: s[u - 4],
                                            step: s[u - 2],
                                            guard: s[u]
                                        });
                                        break;
                                    case 174:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Switch(s[u - 3], s[u - 1]));
                                        break;
                                    case 175:
                                        this.$ = r.addLocationDataFn(o[u - 6], o[u])(new r.Switch(s[u - 5], s[u - 3], s[u - 1]));
                                        break;
                                    case 176:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Switch(null, s[u - 1]));
                                        break;
                                    case 177:
                                        this.$ = r.addLocationDataFn(o[u - 5], o[u])(new r.Switch(null, s[u - 3], s[u - 1]));
                                        break;
                                    case 178:
                                        this.$ = s[u];
                                        break;
                                    case 179:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(s[u - 1].concat(s[u]));
                                        break;
                                    case 180:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])([[s[u - 1], s[u]]]);
                                        break;
                                    case 181:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])([[s[u - 2], s[u - 1]]]);
                                        break;
                                    case 182:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.If(s[u - 1], s[u], {
                                            type: s[u - 2]
                                        }));
                                        break;
                                    case 183:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(s[u - 4].addElse(r.addLocationDataFn(o[u - 2], o[u])(new r.If(s[u - 1], s[u], {
                                            type: s[u - 2]
                                        }))));
                                        break;
                                    case 184:
                                        this.$ = s[u];
                                        break;
                                    case 185:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(s[u - 2].addElse(s[u]));
                                        break;
                                    case 186:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.If(s[u], r.addLocationDataFn(o[u - 2])(r.Block.wrap([s[u - 2]])), {
                                            type: s[u - 1],
                                            statement: !0
                                        }));
                                        break;
                                    case 187:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.If(s[u], r.addLocationDataFn(o[u - 2])(r.Block.wrap([s[u - 2]])), {
                                            type: s[u - 1],
                                            statement: !0
                                        }));
                                        break;
                                    case 188:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op(s[u - 1], s[u]));
                                        break;
                                    case 189:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op(s[u - 1], s[u]));
                                        break;
                                    case 190:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("-", s[u]));
                                        break;
                                    case 191:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("+", s[u]));
                                        break;
                                    case 192:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("--", s[u]));
                                        break;
                                    case 193:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("++", s[u]));
                                        break;
                                    case 194:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("--", s[u - 1], null, !0));
                                        break;
                                    case 195:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Op("++", s[u - 1], null, !0));
                                        break;
                                    case 196:
                                        this.$ = r.addLocationDataFn(o[u - 1], o[u])(new r.Existence(s[u - 1]));
                                        break;
                                    case 197:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op("+", s[u - 2], s[u]));
                                        break;
                                    case 198:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op("-", s[u - 2], s[u]));
                                        break;
                                    case 199:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op(s[u - 1], s[u - 2], s[u]));
                                        break;
                                    case 200:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op(s[u - 1], s[u - 2], s[u]));
                                        break;
                                    case 201:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op(s[u - 1], s[u - 2], s[u]));
                                        break;
                                    case 202:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op(s[u - 1], s[u - 2], s[u]));
                                        break;
                                    case 203:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Op(s[u - 1], s[u - 2], s[u]));
                                        break;
                                    case 204:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(function () {
                                            return "!" === s[u - 1].charAt(0) ? (new r.Op(s[u - 1].slice(1), s[u - 2], s[u])).invert() : new r.Op(s[u - 1], s[u - 2], s[u])
                                        }());
                                        break;
                                    case 205:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Assign(s[u - 2], s[u], s[u - 1]));
                                        break;
                                    case 206:
                                        this.$ = r.addLocationDataFn(o[u - 4], o[u])(new r.Assign(s[u - 4], s[u - 1], s[u - 3]));
                                        break;
                                    case 207:
                                        this.$ = r.addLocationDataFn(o[u - 3], o[u])(new r.Assign(s[u - 3], s[u], s[u - 2]));
                                        break;
                                    case 208:
                                        this.$ = r.addLocationDataFn(o[u - 2], o[u])(new r.Extends(s[u - 2], s[u]))
                                }
                            },
                            table: [{
                                1: [2, 1],
                                3: 1,
                                4: 2,
                                5: 3,
                                7: 4,
                                8: 5,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [3]
                            }, {
                                1: [2, 2],
                                6: [1, 73]
                            }, {
                                1: [2, 3],
                                6: [2, 3],
                                26: [2, 3],
                                102: [2, 3]
                            }, {
                                1: [2, 6],
                                6: [2, 6],
                                26: [2, 6],
                                102: [2, 6],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 7],
                                6: [2, 7],
                                26: [2, 7],
                                102: [2, 7],
                                103: 87,
                                104: [1, 64],
                                106: [1, 65],
                                109: 88,
                                110: [1, 67],
                                111: 68,
                                126: [1, 86]
                            }, {
                                1: [2, 11],
                                6: [2, 11],
                                25: [2, 11],
                                26: [2, 11],
                                49: [2, 11],
                                54: [2, 11],
                                57: [2, 11],
                                62: 90,
                                66: [1, 92],
                                67: [1, 93],
                                68: [1, 94],
                                69: [1, 95],
                                70: 96,
                                71: [1, 97],
                                73: [2, 11],
                                74: [1, 98],
                                78: [2, 11],
                                81: 89,
                                84: [1, 91],
                                85: [2, 108],
                                86: [2, 11],
                                91: [2, 11],
                                93: [2, 11],
                                102: [2, 11],
                                104: [2, 11],
                                105: [2, 11],
                                106: [2, 11],
                                110: [2, 11],
                                118: [2, 11],
                                126: [2, 11],
                                129: [2, 11],
                                130: [2, 11],
                                133: [2, 11],
                                134: [2, 11],
                                135: [2, 11],
                                136: [2, 11],
                                137: [2, 11],
                                138: [2, 11],
                                139: [2, 11]
                            }, {
                                1: [2, 12],
                                6: [2, 12],
                                25: [2, 12],
                                26: [2, 12],
                                49: [2, 12],
                                54: [2, 12],
                                57: [2, 12],
                                62: 100,
                                66: [1, 92],
                                67: [1, 93],
                                68: [1, 94],
                                69: [1, 95],
                                70: 96,
                                71: [1, 97],
                                73: [2, 12],
                                74: [1, 98],
                                78: [2, 12],
                                81: 99,
                                84: [1, 91],
                                85: [2, 108],
                                86: [2, 12],
                                91: [2, 12],
                                93: [2, 12],
                                102: [2, 12],
                                104: [2, 12],
                                105: [2, 12],
                                106: [2, 12],
                                110: [2, 12],
                                118: [2, 12],
                                126: [2, 12],
                                129: [2, 12],
                                130: [2, 12],
                                133: [2, 12],
                                134: [2, 12],
                                135: [2, 12],
                                136: [2, 12],
                                137: [2, 12],
                                138: [2, 12],
                                139: [2, 12]
                            }, {
                                1: [2, 13],
                                6: [2, 13],
                                25: [2, 13],
                                26: [2, 13],
                                49: [2, 13],
                                54: [2, 13],
                                57: [2, 13],
                                73: [2, 13],
                                78: [2, 13],
                                86: [2, 13],
                                91: [2, 13],
                                93: [2, 13],
                                102: [2, 13],
                                104: [2, 13],
                                105: [2, 13],
                                106: [2, 13],
                                110: [2, 13],
                                118: [2, 13],
                                126: [2, 13],
                                129: [2, 13],
                                130: [2, 13],
                                133: [2, 13],
                                134: [2, 13],
                                135: [2, 13],
                                136: [2, 13],
                                137: [2, 13],
                                138: [2, 13],
                                139: [2, 13]
                            }, {
                                1: [2, 14],
                                6: [2, 14],
                                25: [2, 14],
                                26: [2, 14],
                                49: [2, 14],
                                54: [2, 14],
                                57: [2, 14],
                                73: [2, 14],
                                78: [2, 14],
                                86: [2, 14],
                                91: [2, 14],
                                93: [2, 14],
                                102: [2, 14],
                                104: [2, 14],
                                105: [2, 14],
                                106: [2, 14],
                                110: [2, 14],
                                118: [2, 14],
                                126: [2, 14],
                                129: [2, 14],
                                130: [2, 14],
                                133: [2, 14],
                                134: [2, 14],
                                135: [2, 14],
                                136: [2, 14],
                                137: [2, 14],
                                138: [2, 14],
                                139: [2, 14]
                            }, {
                                1: [2, 15],
                                6: [2, 15],
                                25: [2, 15],
                                26: [2, 15],
                                49: [2, 15],
                                54: [2, 15],
                                57: [2, 15],
                                73: [2, 15],
                                78: [2, 15],
                                86: [2, 15],
                                91: [2, 15],
                                93: [2, 15],
                                102: [2, 15],
                                104: [2, 15],
                                105: [2, 15],
                                106: [2, 15],
                                110: [2, 15],
                                118: [2, 15],
                                126: [2, 15],
                                129: [2, 15],
                                130: [2, 15],
                                133: [2, 15],
                                134: [2, 15],
                                135: [2, 15],
                                136: [2, 15],
                                137: [2, 15],
                                138: [2, 15],
                                139: [2, 15]
                            }, {
                                1: [2, 16],
                                6: [2, 16],
                                25: [2, 16],
                                26: [2, 16],
                                49: [2, 16],
                                54: [2, 16],
                                57: [2, 16],
                                73: [2, 16],
                                78: [2, 16],
                                86: [2, 16],
                                91: [2, 16],
                                93: [2, 16],
                                102: [2, 16],
                                104: [2, 16],
                                105: [2, 16],
                                106: [2, 16],
                                110: [2, 16],
                                118: [2, 16],
                                126: [2, 16],
                                129: [2, 16],
                                130: [2, 16],
                                133: [2, 16],
                                134: [2, 16],
                                135: [2, 16],
                                136: [2, 16],
                                137: [2, 16],
                                138: [2, 16],
                                139: [2, 16]
                            }, {
                                1: [2, 17],
                                6: [2, 17],
                                25: [2, 17],
                                26: [2, 17],
                                49: [2, 17],
                                54: [2, 17],
                                57: [2, 17],
                                73: [2, 17],
                                78: [2, 17],
                                86: [2, 17],
                                91: [2, 17],
                                93: [2, 17],
                                102: [2, 17],
                                104: [2, 17],
                                105: [2, 17],
                                106: [2, 17],
                                110: [2, 17],
                                118: [2, 17],
                                126: [2, 17],
                                129: [2, 17],
                                130: [2, 17],
                                133: [2, 17],
                                134: [2, 17],
                                135: [2, 17],
                                136: [2, 17],
                                137: [2, 17],
                                138: [2, 17],
                                139: [2, 17]
                            }, {
                                1: [2, 18],
                                6: [2, 18],
                                25: [2, 18],
                                26: [2, 18],
                                49: [2, 18],
                                54: [2, 18],
                                57: [2, 18],
                                73: [2, 18],
                                78: [2, 18],
                                86: [2, 18],
                                91: [2, 18],
                                93: [2, 18],
                                102: [2, 18],
                                104: [2, 18],
                                105: [2, 18],
                                106: [2, 18],
                                110: [2, 18],
                                118: [2, 18],
                                126: [2, 18],
                                129: [2, 18],
                                130: [2, 18],
                                133: [2, 18],
                                134: [2, 18],
                                135: [2, 18],
                                136: [2, 18],
                                137: [2, 18],
                                138: [2, 18],
                                139: [2, 18]
                            }, {
                                1: [2, 19],
                                6: [2, 19],
                                25: [2, 19],
                                26: [2, 19],
                                49: [2, 19],
                                54: [2, 19],
                                57: [2, 19],
                                73: [2, 19],
                                78: [2, 19],
                                86: [2, 19],
                                91: [2, 19],
                                93: [2, 19],
                                102: [2, 19],
                                104: [2, 19],
                                105: [2, 19],
                                106: [2, 19],
                                110: [2, 19],
                                118: [2, 19],
                                126: [2, 19],
                                129: [2, 19],
                                130: [2, 19],
                                133: [2, 19],
                                134: [2, 19],
                                135: [2, 19],
                                136: [2, 19],
                                137: [2, 19],
                                138: [2, 19],
                                139: [2, 19]
                            }, {
                                1: [2, 20],
                                6: [2, 20],
                                25: [2, 20],
                                26: [2, 20],
                                49: [2, 20],
                                54: [2, 20],
                                57: [2, 20],
                                73: [2, 20],
                                78: [2, 20],
                                86: [2, 20],
                                91: [2, 20],
                                93: [2, 20],
                                102: [2, 20],
                                104: [2, 20],
                                105: [2, 20],
                                106: [2, 20],
                                110: [2, 20],
                                118: [2, 20],
                                126: [2, 20],
                                129: [2, 20],
                                130: [2, 20],
                                133: [2, 20],
                                134: [2, 20],
                                135: [2, 20],
                                136: [2, 20],
                                137: [2, 20],
                                138: [2, 20],
                                139: [2, 20]
                            }, {
                                1: [2, 21],
                                6: [2, 21],
                                25: [2, 21],
                                26: [2, 21],
                                49: [2, 21],
                                54: [2, 21],
                                57: [2, 21],
                                73: [2, 21],
                                78: [2, 21],
                                86: [2, 21],
                                91: [2, 21],
                                93: [2, 21],
                                102: [2, 21],
                                104: [2, 21],
                                105: [2, 21],
                                106: [2, 21],
                                110: [2, 21],
                                118: [2, 21],
                                126: [2, 21],
                                129: [2, 21],
                                130: [2, 21],
                                133: [2, 21],
                                134: [2, 21],
                                135: [2, 21],
                                136: [2, 21],
                                137: [2, 21],
                                138: [2, 21],
                                139: [2, 21]
                            }, {
                                1: [2, 22],
                                6: [2, 22],
                                25: [2, 22],
                                26: [2, 22],
                                49: [2, 22],
                                54: [2, 22],
                                57: [2, 22],
                                73: [2, 22],
                                78: [2, 22],
                                86: [2, 22],
                                91: [2, 22],
                                93: [2, 22],
                                102: [2, 22],
                                104: [2, 22],
                                105: [2, 22],
                                106: [2, 22],
                                110: [2, 22],
                                118: [2, 22],
                                126: [2, 22],
                                129: [2, 22],
                                130: [2, 22],
                                133: [2, 22],
                                134: [2, 22],
                                135: [2, 22],
                                136: [2, 22],
                                137: [2, 22],
                                138: [2, 22],
                                139: [2, 22]
                            }, {
                                1: [2, 8],
                                6: [2, 8],
                                26: [2, 8],
                                102: [2, 8],
                                104: [2, 8],
                                106: [2, 8],
                                110: [2, 8],
                                126: [2, 8]
                            }, {
                                1: [2, 9],
                                6: [2, 9],
                                26: [2, 9],
                                102: [2, 9],
                                104: [2, 9],
                                106: [2, 9],
                                110: [2, 9],
                                126: [2, 9]
                            }, {
                                1: [2, 10],
                                6: [2, 10],
                                26: [2, 10],
                                102: [2, 10],
                                104: [2, 10],
                                106: [2, 10],
                                110: [2, 10],
                                126: [2, 10]
                            }, {
                                1: [2, 75],
                                6: [2, 75],
                                25: [2, 75],
                                26: [2, 75],
                                40: [1, 101],
                                49: [2, 75],
                                54: [2, 75],
                                57: [2, 75],
                                66: [2, 75],
                                67: [2, 75],
                                68: [2, 75],
                                69: [2, 75],
                                71: [2, 75],
                                73: [2, 75],
                                74: [2, 75],
                                78: [2, 75],
                                84: [2, 75],
                                85: [2, 75],
                                86: [2, 75],
                                91: [2, 75],
                                93: [2, 75],
                                102: [2, 75],
                                104: [2, 75],
                                105: [2, 75],
                                106: [2, 75],
                                110: [2, 75],
                                118: [2, 75],
                                126: [2, 75],
                                129: [2, 75],
                                130: [2, 75],
                                133: [2, 75],
                                134: [2, 75],
                                135: [2, 75],
                                136: [2, 75],
                                137: [2, 75],
                                138: [2, 75],
                                139: [2, 75]
                            }, {
                                1: [2, 76],
                                6: [2, 76],
                                25: [2, 76],
                                26: [2, 76],
                                49: [2, 76],
                                54: [2, 76],
                                57: [2, 76],
                                66: [2, 76],
                                67: [2, 76],
                                68: [2, 76],
                                69: [2, 76],
                                71: [2, 76],
                                73: [2, 76],
                                74: [2, 76],
                                78: [2, 76],
                                84: [2, 76],
                                85: [2, 76],
                                86: [2, 76],
                                91: [2, 76],
                                93: [2, 76],
                                102: [2, 76],
                                104: [2, 76],
                                105: [2, 76],
                                106: [2, 76],
                                110: [2, 76],
                                118: [2, 76],
                                126: [2, 76],
                                129: [2, 76],
                                130: [2, 76],
                                133: [2, 76],
                                134: [2, 76],
                                135: [2, 76],
                                136: [2, 76],
                                137: [2, 76],
                                138: [2, 76],
                                139: [2, 76]
                            }, {
                                1: [2, 77],
                                6: [2, 77],
                                25: [2, 77],
                                26: [2, 77],
                                49: [2, 77],
                                54: [2, 77],
                                57: [2, 77],
                                66: [2, 77],
                                67: [2, 77],
                                68: [2, 77],
                                69: [2, 77],
                                71: [2, 77],
                                73: [2, 77],
                                74: [2, 77],
                                78: [2, 77],
                                84: [2, 77],
                                85: [2, 77],
                                86: [2, 77],
                                91: [2, 77],
                                93: [2, 77],
                                102: [2, 77],
                                104: [2, 77],
                                105: [2, 77],
                                106: [2, 77],
                                110: [2, 77],
                                118: [2, 77],
                                126: [2, 77],
                                129: [2, 77],
                                130: [2, 77],
                                133: [2, 77],
                                134: [2, 77],
                                135: [2, 77],
                                136: [2, 77],
                                137: [2, 77],
                                138: [2, 77],
                                139: [2, 77]
                            }, {
                                1: [2, 78],
                                6: [2, 78],
                                25: [2, 78],
                                26: [2, 78],
                                49: [2, 78],
                                54: [2, 78],
                                57: [2, 78],
                                66: [2, 78],
                                67: [2, 78],
                                68: [2, 78],
                                69: [2, 78],
                                71: [2, 78],
                                73: [2, 78],
                                74: [2, 78],
                                78: [2, 78],
                                84: [2, 78],
                                85: [2, 78],
                                86: [2, 78],
                                91: [2, 78],
                                93: [2, 78],
                                102: [2, 78],
                                104: [2, 78],
                                105: [2, 78],
                                106: [2, 78],
                                110: [2, 78],
                                118: [2, 78],
                                126: [2, 78],
                                129: [2, 78],
                                130: [2, 78],
                                133: [2, 78],
                                134: [2, 78],
                                135: [2, 78],
                                136: [2, 78],
                                137: [2, 78],
                                138: [2, 78],
                                139: [2, 78]
                            }, {
                                1: [2, 79],
                                6: [2, 79],
                                25: [2, 79],
                                26: [2, 79],
                                49: [2, 79],
                                54: [2, 79],
                                57: [2, 79],
                                66: [2, 79],
                                67: [2, 79],
                                68: [2, 79],
                                69: [2, 79],
                                71: [2, 79],
                                73: [2, 79],
                                74: [2, 79],
                                78: [2, 79],
                                84: [2, 79],
                                85: [2, 79],
                                86: [2, 79],
                                91: [2, 79],
                                93: [2, 79],
                                102: [2, 79],
                                104: [2, 79],
                                105: [2, 79],
                                106: [2, 79],
                                110: [2, 79],
                                118: [2, 79],
                                126: [2, 79],
                                129: [2, 79],
                                130: [2, 79],
                                133: [2, 79],
                                134: [2, 79],
                                135: [2, 79],
                                136: [2, 79],
                                137: [2, 79],
                                138: [2, 79],
                                139: [2, 79]
                            }, {
                                1: [2, 106],
                                6: [2, 106],
                                25: [2, 106],
                                26: [2, 106],
                                49: [2, 106],
                                54: [2, 106],
                                57: [2, 106],
                                66: [2, 106],
                                67: [2, 106],
                                68: [2, 106],
                                69: [2, 106],
                                71: [2, 106],
                                73: [2, 106],
                                74: [2, 106],
                                78: [2, 106],
                                82: 102,
                                84: [2, 106],
                                85: [1, 103],
                                86: [2, 106],
                                91: [2, 106],
                                93: [2, 106],
                                102: [2, 106],
                                104: [2, 106],
                                105: [2, 106],
                                106: [2, 106],
                                110: [2, 106],
                                118: [2, 106],
                                126: [2, 106],
                                129: [2, 106],
                                130: [2, 106],
                                133: [2, 106],
                                134: [2, 106],
                                135: [2, 106],
                                136: [2, 106],
                                137: [2, 106],
                                138: [2, 106],
                                139: [2, 106]
                            }, {
                                6: [2, 54],
                                25: [2, 54],
                                27: 108,
                                28: [1, 72],
                                44: 109,
                                48: 104,
                                49: [2, 54],
                                54: [2, 54],
                                55: 105,
                                56: 106,
                                57: [1, 107],
                                58: 110,
                                59: 111,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113]
                            }, {
                                24: 114,
                                25: [1, 115]
                            }, {
                                7: 116,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 118,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 119,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 120,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                12: 122,
                                13: 123,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 124,
                                44: 62,
                                58: 46,
                                59: 47,
                                61: 121,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                101: [1, 55]
                            }, {
                                12: 122,
                                13: 123,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 124,
                                44: 62,
                                58: 46,
                                59: 47,
                                61: 125,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                101: [1, 55]
                            }, {
                                1: [2, 72],
                                6: [2, 72],
                                25: [2, 72],
                                26: [2, 72],
                                40: [2, 72],
                                49: [2, 72],
                                54: [2, 72],
                                57: [2, 72],
                                66: [2, 72],
                                67: [2, 72],
                                68: [2, 72],
                                69: [2, 72],
                                71: [2, 72],
                                73: [2, 72],
                                74: [2, 72],
                                78: [2, 72],
                                80: [1, 129],
                                84: [2, 72],
                                85: [2, 72],
                                86: [2, 72],
                                91: [2, 72],
                                93: [2, 72],
                                102: [2, 72],
                                104: [2, 72],
                                105: [2, 72],
                                106: [2, 72],
                                110: [2, 72],
                                118: [2, 72],
                                126: [2, 72],
                                129: [2, 72],
                                130: [2, 72],
                                131: [1, 126],
                                132: [1, 127],
                                133: [2, 72],
                                134: [2, 72],
                                135: [2, 72],
                                136: [2, 72],
                                137: [2, 72],
                                138: [2, 72],
                                139: [2, 72],
                                140: [1, 128]
                            }, {
                                1: [2, 184],
                                6: [2, 184],
                                25: [2, 184],
                                26: [2, 184],
                                49: [2, 184],
                                54: [2, 184],
                                57: [2, 184],
                                73: [2, 184],
                                78: [2, 184],
                                86: [2, 184],
                                91: [2, 184],
                                93: [2, 184],
                                102: [2, 184],
                                104: [2, 184],
                                105: [2, 184],
                                106: [2, 184],
                                110: [2, 184],
                                118: [2, 184],
                                121: [1, 130],
                                126: [2, 184],
                                129: [2, 184],
                                130: [2, 184],
                                133: [2, 184],
                                134: [2, 184],
                                135: [2, 184],
                                136: [2, 184],
                                137: [2, 184],
                                138: [2, 184],
                                139: [2, 184]
                            }, {
                                24: 131,
                                25: [1, 115]
                            }, {
                                24: 132,
                                25: [1, 115]
                            }, {
                                1: [2, 151],
                                6: [2, 151],
                                25: [2, 151],
                                26: [2, 151],
                                49: [2, 151],
                                54: [2, 151],
                                57: [2, 151],
                                73: [2, 151],
                                78: [2, 151],
                                86: [2, 151],
                                91: [2, 151],
                                93: [2, 151],
                                102: [2, 151],
                                104: [2, 151],
                                105: [2, 151],
                                106: [2, 151],
                                110: [2, 151],
                                118: [2, 151],
                                126: [2, 151],
                                129: [2, 151],
                                130: [2, 151],
                                133: [2, 151],
                                134: [2, 151],
                                135: [2, 151],
                                136: [2, 151],
                                137: [2, 151],
                                138: [2, 151],
                                139: [2, 151]
                            }, {
                                24: 133,
                                25: [1, 115]
                            }, {
                                7: 134,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 135],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 96],
                                6: [2, 96],
                                12: 122,
                                13: 123,
                                24: 136,
                                25: [1, 115],
                                26: [2, 96],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 124,
                                44: 62,
                                49: [2, 96],
                                54: [2, 96],
                                57: [2, 96],
                                58: 46,
                                59: 47,
                                61: 138,
                                63: 23,
                                64: 24,
                                65: 25,
                                73: [2, 96],
                                76: [1, 69],
                                78: [2, 96],
                                80: [1, 137],
                                83: [1, 26],
                                86: [2, 96],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                91: [2, 96],
                                93: [2, 96],
                                101: [1, 55],
                                102: [2, 96],
                                104: [2, 96],
                                105: [2, 96],
                                106: [2, 96],
                                110: [2, 96],
                                118: [2, 96],
                                126: [2, 96],
                                129: [2, 96],
                                130: [2, 96],
                                133: [2, 96],
                                134: [2, 96],
                                135: [2, 96],
                                136: [2, 96],
                                137: [2, 96],
                                138: [2, 96],
                                139: [2, 96]
                            }, {
                                7: 139,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 46],
                                6: [2, 46],
                                7: 140,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                26: [2, 46],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                102: [2, 46],
                                103: 38,
                                104: [2, 46],
                                106: [2, 46],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [2, 46],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                126: [2, 46],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 47],
                                6: [2, 47],
                                25: [2, 47],
                                26: [2, 47],
                                54: [2, 47],
                                78: [2, 47],
                                102: [2, 47],
                                104: [2, 47],
                                106: [2, 47],
                                110: [2, 47],
                                126: [2, 47]
                            }, {
                                1: [2, 73],
                                6: [2, 73],
                                25: [2, 73],
                                26: [2, 73],
                                40: [2, 73],
                                49: [2, 73],
                                54: [2, 73],
                                57: [2, 73],
                                66: [2, 73],
                                67: [2, 73],
                                68: [2, 73],
                                69: [2, 73],
                                71: [2, 73],
                                73: [2, 73],
                                74: [2, 73],
                                78: [2, 73],
                                84: [2, 73],
                                85: [2, 73],
                                86: [2, 73],
                                91: [2, 73],
                                93: [2, 73],
                                102: [2, 73],
                                104: [2, 73],
                                105: [2, 73],
                                106: [2, 73],
                                110: [2, 73],
                                118: [2, 73],
                                126: [2, 73],
                                129: [2, 73],
                                130: [2, 73],
                                133: [2, 73],
                                134: [2, 73],
                                135: [2, 73],
                                136: [2, 73],
                                137: [2, 73],
                                138: [2, 73],
                                139: [2, 73]
                            }, {
                                1: [2, 74],
                                6: [2, 74],
                                25: [2, 74],
                                26: [2, 74],
                                40: [2, 74],
                                49: [2, 74],
                                54: [2, 74],
                                57: [2, 74],
                                66: [2, 74],
                                67: [2, 74],
                                68: [2, 74],
                                69: [2, 74],
                                71: [2, 74],
                                73: [2, 74],
                                74: [2, 74],
                                78: [2, 74],
                                84: [2, 74],
                                85: [2, 74],
                                86: [2, 74],
                                91: [2, 74],
                                93: [2, 74],
                                102: [2, 74],
                                104: [2, 74],
                                105: [2, 74],
                                106: [2, 74],
                                110: [2, 74],
                                118: [2, 74],
                                126: [2, 74],
                                129: [2, 74],
                                130: [2, 74],
                                133: [2, 74],
                                134: [2, 74],
                                135: [2, 74],
                                136: [2, 74],
                                137: [2, 74],
                                138: [2, 74],
                                139: [2, 74]
                            }, {
                                1: [2, 28],
                                6: [2, 28],
                                25: [2, 28],
                                26: [2, 28],
                                49: [2, 28],
                                54: [2, 28],
                                57: [2, 28],
                                66: [2, 28],
                                67: [2, 28],
                                68: [2, 28],
                                69: [2, 28],
                                71: [2, 28],
                                73: [2, 28],
                                74: [2, 28],
                                78: [2, 28],
                                84: [2, 28],
                                85: [2, 28],
                                86: [2, 28],
                                91: [2, 28],
                                93: [2, 28],
                                102: [2, 28],
                                104: [2, 28],
                                105: [2, 28],
                                106: [2, 28],
                                110: [2, 28],
                                118: [2, 28],
                                126: [2, 28],
                                129: [2, 28],
                                130: [2, 28],
                                133: [2, 28],
                                134: [2, 28],
                                135: [2, 28],
                                136: [2, 28],
                                137: [2, 28],
                                138: [2, 28],
                                139: [2, 28]
                            }, {
                                1: [2, 29],
                                6: [2, 29],
                                25: [2, 29],
                                26: [2, 29],
                                49: [2, 29],
                                54: [2, 29],
                                57: [2, 29],
                                66: [2, 29],
                                67: [2, 29],
                                68: [2, 29],
                                69: [2, 29],
                                71: [2, 29],
                                73: [2, 29],
                                74: [2, 29],
                                78: [2, 29],
                                84: [2, 29],
                                85: [2, 29],
                                86: [2, 29],
                                91: [2, 29],
                                93: [2, 29],
                                102: [2, 29],
                                104: [2, 29],
                                105: [2, 29],
                                106: [2, 29],
                                110: [2, 29],
                                118: [2, 29],
                                126: [2, 29],
                                129: [2, 29],
                                130: [2, 29],
                                133: [2, 29],
                                134: [2, 29],
                                135: [2, 29],
                                136: [2, 29],
                                137: [2, 29],
                                138: [2, 29],
                                139: [2, 29]
                            }, {
                                1: [2, 30],
                                6: [2, 30],
                                25: [2, 30],
                                26: [2, 30],
                                49: [2, 30],
                                54: [2, 30],
                                57: [2, 30],
                                66: [2, 30],
                                67: [2, 30],
                                68: [2, 30],
                                69: [2, 30],
                                71: [2, 30],
                                73: [2, 30],
                                74: [2, 30],
                                78: [2, 30],
                                84: [2, 30],
                                85: [2, 30],
                                86: [2, 30],
                                91: [2, 30],
                                93: [2, 30],
                                102: [2, 30],
                                104: [2, 30],
                                105: [2, 30],
                                106: [2, 30],
                                110: [2, 30],
                                118: [2, 30],
                                126: [2, 30],
                                129: [2, 30],
                                130: [2, 30],
                                133: [2, 30],
                                134: [2, 30],
                                135: [2, 30],
                                136: [2, 30],
                                137: [2, 30],
                                138: [2, 30],
                                139: [2, 30]
                            }, {
                                1: [2, 31],
                                6: [2, 31],
                                25: [2, 31],
                                26: [2, 31],
                                49: [2, 31],
                                54: [2, 31],
                                57: [2, 31],
                                66: [2, 31],
                                67: [2, 31],
                                68: [2, 31],
                                69: [2, 31],
                                71: [2, 31],
                                73: [2, 31],
                                74: [2, 31],
                                78: [2, 31],
                                84: [2, 31],
                                85: [2, 31],
                                86: [2, 31],
                                91: [2, 31],
                                93: [2, 31],
                                102: [2, 31],
                                104: [2, 31],
                                105: [2, 31],
                                106: [2, 31],
                                110: [2, 31],
                                118: [2, 31],
                                126: [2, 31],
                                129: [2, 31],
                                130: [2, 31],
                                133: [2, 31],
                                134: [2, 31],
                                135: [2, 31],
                                136: [2, 31],
                                137: [2, 31],
                                138: [2, 31],
                                139: [2, 31]
                            }, {
                                1: [2, 32],
                                6: [2, 32],
                                25: [2, 32],
                                26: [2, 32],
                                49: [2, 32],
                                54: [2, 32],
                                57: [2, 32],
                                66: [2, 32],
                                67: [2, 32],
                                68: [2, 32],
                                69: [2, 32],
                                71: [2, 32],
                                73: [2, 32],
                                74: [2, 32],
                                78: [2, 32],
                                84: [2, 32],
                                85: [2, 32],
                                86: [2, 32],
                                91: [2, 32],
                                93: [2, 32],
                                102: [2, 32],
                                104: [2, 32],
                                105: [2, 32],
                                106: [2, 32],
                                110: [2, 32],
                                118: [2, 32],
                                126: [2, 32],
                                129: [2, 32],
                                130: [2, 32],
                                133: [2, 32],
                                134: [2, 32],
                                135: [2, 32],
                                136: [2, 32],
                                137: [2, 32],
                                138: [2, 32],
                                139: [2, 32]
                            }, {
                                1: [2, 33],
                                6: [2, 33],
                                25: [2, 33],
                                26: [2, 33],
                                49: [2, 33],
                                54: [2, 33],
                                57: [2, 33],
                                66: [2, 33],
                                67: [2, 33],
                                68: [2, 33],
                                69: [2, 33],
                                71: [2, 33],
                                73: [2, 33],
                                74: [2, 33],
                                78: [2, 33],
                                84: [2, 33],
                                85: [2, 33],
                                86: [2, 33],
                                91: [2, 33],
                                93: [2, 33],
                                102: [2, 33],
                                104: [2, 33],
                                105: [2, 33],
                                106: [2, 33],
                                110: [2, 33],
                                118: [2, 33],
                                126: [2, 33],
                                129: [2, 33],
                                130: [2, 33],
                                133: [2, 33],
                                134: [2, 33],
                                135: [2, 33],
                                136: [2, 33],
                                137: [2, 33],
                                138: [2, 33],
                                139: [2, 33]
                            }, {
                                1: [2, 34],
                                6: [2, 34],
                                25: [2, 34],
                                26: [2, 34],
                                49: [2, 34],
                                54: [2, 34],
                                57: [2, 34],
                                66: [2, 34],
                                67: [2, 34],
                                68: [2, 34],
                                69: [2, 34],
                                71: [2, 34],
                                73: [2, 34],
                                74: [2, 34],
                                78: [2, 34],
                                84: [2, 34],
                                85: [2, 34],
                                86: [2, 34],
                                91: [2, 34],
                                93: [2, 34],
                                102: [2, 34],
                                104: [2, 34],
                                105: [2, 34],
                                106: [2, 34],
                                110: [2, 34],
                                118: [2, 34],
                                126: [2, 34],
                                129: [2, 34],
                                130: [2, 34],
                                133: [2, 34],
                                134: [2, 34],
                                135: [2, 34],
                                136: [2, 34],
                                137: [2, 34],
                                138: [2, 34],
                                139: [2, 34]
                            }, {
                                4: 141,
                                5: 3,
                                7: 4,
                                8: 5,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 142],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 143,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 147],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                87: 145,
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                91: [1, 144],
                                94: 146,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 112],
                                6: [2, 112],
                                25: [2, 112],
                                26: [2, 112],
                                49: [2, 112],
                                54: [2, 112],
                                57: [2, 112],
                                66: [2, 112],
                                67: [2, 112],
                                68: [2, 112],
                                69: [2, 112],
                                71: [2, 112],
                                73: [2, 112],
                                74: [2, 112],
                                78: [2, 112],
                                84: [2, 112],
                                85: [2, 112],
                                86: [2, 112],
                                91: [2, 112],
                                93: [2, 112],
                                102: [2, 112],
                                104: [2, 112],
                                105: [2, 112],
                                106: [2, 112],
                                110: [2, 112],
                                118: [2, 112],
                                126: [2, 112],
                                129: [2, 112],
                                130: [2, 112],
                                133: [2, 112],
                                134: [2, 112],
                                135: [2, 112],
                                136: [2, 112],
                                137: [2, 112],
                                138: [2, 112],
                                139: [2, 112]
                            }, {
                                1: [2, 113],
                                6: [2, 113],
                                25: [2, 113],
                                26: [2, 113],
                                27: 150,
                                28: [1, 72],
                                49: [2, 113],
                                54: [2, 113],
                                57: [2, 113],
                                66: [2, 113],
                                67: [2, 113],
                                68: [2, 113],
                                69: [2, 113],
                                71: [2, 113],
                                73: [2, 113],
                                74: [2, 113],
                                78: [2, 113],
                                84: [2, 113],
                                85: [2, 113],
                                86: [2, 113],
                                91: [2, 113],
                                93: [2, 113],
                                102: [2, 113],
                                104: [2, 113],
                                105: [2, 113],
                                106: [2, 113],
                                110: [2, 113],
                                118: [2, 113],
                                126: [2, 113],
                                129: [2, 113],
                                130: [2, 113],
                                133: [2, 113],
                                134: [2, 113],
                                135: [2, 113],
                                136: [2, 113],
                                137: [2, 113],
                                138: [2, 113],
                                139: [2, 113]
                            }, {
                                25: [2, 50]
                            }, {
                                25: [2, 51]
                            }, {
                                1: [2, 68],
                                6: [2, 68],
                                25: [2, 68],
                                26: [2, 68],
                                40: [2, 68],
                                49: [2, 68],
                                54: [2, 68],
                                57: [2, 68],
                                66: [2, 68],
                                67: [2, 68],
                                68: [2, 68],
                                69: [2, 68],
                                71: [2, 68],
                                73: [2, 68],
                                74: [2, 68],
                                78: [2, 68],
                                80: [2, 68],
                                84: [2, 68],
                                85: [2, 68],
                                86: [2, 68],
                                91: [2, 68],
                                93: [2, 68],
                                102: [2, 68],
                                104: [2, 68],
                                105: [2, 68],
                                106: [2, 68],
                                110: [2, 68],
                                118: [2, 68],
                                126: [2, 68],
                                129: [2, 68],
                                130: [2, 68],
                                131: [2, 68],
                                132: [2, 68],
                                133: [2, 68],
                                134: [2, 68],
                                135: [2, 68],
                                136: [2, 68],
                                137: [2, 68],
                                138: [2, 68],
                                139: [2, 68],
                                140: [2, 68]
                            }, {
                                1: [2, 71],
                                6: [2, 71],
                                25: [2, 71],
                                26: [2, 71],
                                40: [2, 71],
                                49: [2, 71],
                                54: [2, 71],
                                57: [2, 71],
                                66: [2, 71],
                                67: [2, 71],
                                68: [2, 71],
                                69: [2, 71],
                                71: [2, 71],
                                73: [2, 71],
                                74: [2, 71],
                                78: [2, 71],
                                80: [2, 71],
                                84: [2, 71],
                                85: [2, 71],
                                86: [2, 71],
                                91: [2, 71],
                                93: [2, 71],
                                102: [2, 71],
                                104: [2, 71],
                                105: [2, 71],
                                106: [2, 71],
                                110: [2, 71],
                                118: [2, 71],
                                126: [2, 71],
                                129: [2, 71],
                                130: [2, 71],
                                131: [2, 71],
                                132: [2, 71],
                                133: [2, 71],
                                134: [2, 71],
                                135: [2, 71],
                                136: [2, 71],
                                137: [2, 71],
                                138: [2, 71],
                                139: [2, 71],
                                140: [2, 71]
                            }, {
                                7: 151,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 152,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 153,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 155,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                24: 154,
                                25: [1, 115],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                27: 160,
                                28: [1, 72],
                                44: 161,
                                58: 162,
                                59: 163,
                                64: 156,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 56],
                                113: 157,
                                114: [1, 158],
                                115: 159
                            }, {
                                112: 164,
                                116: [1, 165],
                                117: [1, 166]
                            }, {
                                6: [2, 91],
                                10: 170,
                                25: [2, 91],
                                27: 171,
                                28: [1, 72],
                                29: 172,
                                30: [1, 70],
                                31: [1, 71],
                                41: 168,
                                42: 169,
                                44: 173,
                                46: [1, 45],
                                54: [2, 91],
                                77: 167,
                                78: [2, 91],
                                89: [1, 112]
                            }, {
                                1: [2, 26],
                                6: [2, 26],
                                25: [2, 26],
                                26: [2, 26],
                                43: [2, 26],
                                49: [2, 26],
                                54: [2, 26],
                                57: [2, 26],
                                66: [2, 26],
                                67: [2, 26],
                                68: [2, 26],
                                69: [2, 26],
                                71: [2, 26],
                                73: [2, 26],
                                74: [2, 26],
                                78: [2, 26],
                                84: [2, 26],
                                85: [2, 26],
                                86: [2, 26],
                                91: [2, 26],
                                93: [2, 26],
                                102: [2, 26],
                                104: [2, 26],
                                105: [2, 26],
                                106: [2, 26],
                                110: [2, 26],
                                118: [2, 26],
                                126: [2, 26],
                                129: [2, 26],
                                130: [2, 26],
                                133: [2, 26],
                                134: [2, 26],
                                135: [2, 26],
                                136: [2, 26],
                                137: [2, 26],
                                138: [2, 26],
                                139: [2, 26]
                            }, {
                                1: [2, 27],
                                6: [2, 27],
                                25: [2, 27],
                                26: [2, 27],
                                43: [2, 27],
                                49: [2, 27],
                                54: [2, 27],
                                57: [2, 27],
                                66: [2, 27],
                                67: [2, 27],
                                68: [2, 27],
                                69: [2, 27],
                                71: [2, 27],
                                73: [2, 27],
                                74: [2, 27],
                                78: [2, 27],
                                84: [2, 27],
                                85: [2, 27],
                                86: [2, 27],
                                91: [2, 27],
                                93: [2, 27],
                                102: [2, 27],
                                104: [2, 27],
                                105: [2, 27],
                                106: [2, 27],
                                110: [2, 27],
                                118: [2, 27],
                                126: [2, 27],
                                129: [2, 27],
                                130: [2, 27],
                                133: [2, 27],
                                134: [2, 27],
                                135: [2, 27],
                                136: [2, 27],
                                137: [2, 27],
                                138: [2, 27],
                                139: [2, 27]
                            }, {
                                1: [2, 25],
                                6: [2, 25],
                                25: [2, 25],
                                26: [2, 25],
                                40: [2, 25],
                                43: [2, 25],
                                49: [2, 25],
                                54: [2, 25],
                                57: [2, 25],
                                66: [2, 25],
                                67: [2, 25],
                                68: [2, 25],
                                69: [2, 25],
                                71: [2, 25],
                                73: [2, 25],
                                74: [2, 25],
                                78: [2, 25],
                                80: [2, 25],
                                84: [2, 25],
                                85: [2, 25],
                                86: [2, 25],
                                91: [2, 25],
                                93: [2, 25],
                                102: [2, 25],
                                104: [2, 25],
                                105: [2, 25],
                                106: [2, 25],
                                110: [2, 25],
                                116: [2, 25],
                                117: [2, 25],
                                118: [2, 25],
                                126: [2, 25],
                                129: [2, 25],
                                130: [2, 25],
                                131: [2, 25],
                                132: [2, 25],
                                133: [2, 25],
                                134: [2, 25],
                                135: [2, 25],
                                136: [2, 25],
                                137: [2, 25],
                                138: [2, 25],
                                139: [2, 25],
                                140: [2, 25]
                            }, {
                                1: [2, 5],
                                5: 174,
                                6: [2, 5],
                                7: 4,
                                8: 5,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                26: [2, 5],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                102: [2, 5],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 196],
                                6: [2, 196],
                                25: [2, 196],
                                26: [2, 196],
                                49: [2, 196],
                                54: [2, 196],
                                57: [2, 196],
                                73: [2, 196],
                                78: [2, 196],
                                86: [2, 196],
                                91: [2, 196],
                                93: [2, 196],
                                102: [2, 196],
                                104: [2, 196],
                                105: [2, 196],
                                106: [2, 196],
                                110: [2, 196],
                                118: [2, 196],
                                126: [2, 196],
                                129: [2, 196],
                                130: [2, 196],
                                133: [2, 196],
                                134: [2, 196],
                                135: [2, 196],
                                136: [2, 196],
                                137: [2, 196],
                                138: [2, 196],
                                139: [2, 196]
                            }, {
                                7: 175,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 176,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 177,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 178,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 179,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 180,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 181,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 182,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 183,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 150],
                                6: [2, 150],
                                25: [2, 150],
                                26: [2, 150],
                                49: [2, 150],
                                54: [2, 150],
                                57: [2, 150],
                                73: [2, 150],
                                78: [2, 150],
                                86: [2, 150],
                                91: [2, 150],
                                93: [2, 150],
                                102: [2, 150],
                                104: [2, 150],
                                105: [2, 150],
                                106: [2, 150],
                                110: [2, 150],
                                118: [2, 150],
                                126: [2, 150],
                                129: [2, 150],
                                130: [2, 150],
                                133: [2, 150],
                                134: [2, 150],
                                135: [2, 150],
                                136: [2, 150],
                                137: [2, 150],
                                138: [2, 150],
                                139: [2, 150]
                            }, {
                                1: [2, 155],
                                6: [2, 155],
                                25: [2, 155],
                                26: [2, 155],
                                49: [2, 155],
                                54: [2, 155],
                                57: [2, 155],
                                73: [2, 155],
                                78: [2, 155],
                                86: [2, 155],
                                91: [2, 155],
                                93: [2, 155],
                                102: [2, 155],
                                104: [2, 155],
                                105: [2, 155],
                                106: [2, 155],
                                110: [2, 155],
                                118: [2, 155],
                                126: [2, 155],
                                129: [2, 155],
                                130: [2, 155],
                                133: [2, 155],
                                134: [2, 155],
                                135: [2, 155],
                                136: [2, 155],
                                137: [2, 155],
                                138: [2, 155],
                                139: [2, 155]
                            }, {
                                7: 184,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 149],
                                6: [2, 149],
                                25: [2, 149],
                                26: [2, 149],
                                49: [2, 149],
                                54: [2, 149],
                                57: [2, 149],
                                73: [2, 149],
                                78: [2, 149],
                                86: [2, 149],
                                91: [2, 149],
                                93: [2, 149],
                                102: [2, 149],
                                104: [2, 149],
                                105: [2, 149],
                                106: [2, 149],
                                110: [2, 149],
                                118: [2, 149],
                                126: [2, 149],
                                129: [2, 149],
                                130: [2, 149],
                                133: [2, 149],
                                134: [2, 149],
                                135: [2, 149],
                                136: [2, 149],
                                137: [2, 149],
                                138: [2, 149],
                                139: [2, 149]
                            }, {
                                1: [2, 154],
                                6: [2, 154],
                                25: [2, 154],
                                26: [2, 154],
                                49: [2, 154],
                                54: [2, 154],
                                57: [2, 154],
                                73: [2, 154],
                                78: [2, 154],
                                86: [2, 154],
                                91: [2, 154],
                                93: [2, 154],
                                102: [2, 154],
                                104: [2, 154],
                                105: [2, 154],
                                106: [2, 154],
                                110: [2, 154],
                                118: [2, 154],
                                126: [2, 154],
                                129: [2, 154],
                                130: [2, 154],
                                133: [2, 154],
                                134: [2, 154],
                                135: [2, 154],
                                136: [2, 154],
                                137: [2, 154],
                                138: [2, 154],
                                139: [2, 154]
                            }, {
                                82: 185,
                                85: [1, 103]
                            }, {
                                1: [2, 69],
                                6: [2, 69],
                                25: [2, 69],
                                26: [2, 69],
                                40: [2, 69],
                                49: [2, 69],
                                54: [2, 69],
                                57: [2, 69],
                                66: [2, 69],
                                67: [2, 69],
                                68: [2, 69],
                                69: [2, 69],
                                71: [2, 69],
                                73: [2, 69],
                                74: [2, 69],
                                78: [2, 69],
                                80: [2, 69],
                                84: [2, 69],
                                85: [2, 69],
                                86: [2, 69],
                                91: [2, 69],
                                93: [2, 69],
                                102: [2, 69],
                                104: [2, 69],
                                105: [2, 69],
                                106: [2, 69],
                                110: [2, 69],
                                118: [2, 69],
                                126: [2, 69],
                                129: [2, 69],
                                130: [2, 69],
                                131: [2, 69],
                                132: [2, 69],
                                133: [2, 69],
                                134: [2, 69],
                                135: [2, 69],
                                136: [2, 69],
                                137: [2, 69],
                                138: [2, 69],
                                139: [2, 69],
                                140: [2, 69]
                            }, {
                                85: [2, 109]
                            }, {
                                27: 186,
                                28: [1, 72]
                            }, {
                                27: 187,
                                28: [1, 72]
                            }, {
                                1: [2, 84],
                                6: [2, 84],
                                25: [2, 84],
                                26: [2, 84],
                                27: 188,
                                28: [1, 72],
                                40: [2, 84],
                                49: [2, 84],
                                54: [2, 84],
                                57: [2, 84],
                                66: [2, 84],
                                67: [2, 84],
                                68: [2, 84],
                                69: [2, 84],
                                71: [2, 84],
                                73: [2, 84],
                                74: [2, 84],
                                78: [2, 84],
                                80: [2, 84],
                                84: [2, 84],
                                85: [2, 84],
                                86: [2, 84],
                                91: [2, 84],
                                93: [2, 84],
                                102: [2, 84],
                                104: [2, 84],
                                105: [2, 84],
                                106: [2, 84],
                                110: [2, 84],
                                118: [2, 84],
                                126: [2, 84],
                                129: [2, 84],
                                130: [2, 84],
                                131: [2, 84],
                                132: [2, 84],
                                133: [2, 84],
                                134: [2, 84],
                                135: [2, 84],
                                136: [2, 84],
                                137: [2, 84],
                                138: [2, 84],
                                139: [2, 84],
                                140: [2, 84]
                            }, {
                                27: 189,
                                28: [1, 72]
                            }, {
                                1: [2, 85],
                                6: [2, 85],
                                25: [2, 85],
                                26: [2, 85],
                                40: [2, 85],
                                49: [2, 85],
                                54: [2, 85],
                                57: [2, 85],
                                66: [2, 85],
                                67: [2, 85],
                                68: [2, 85],
                                69: [2, 85],
                                71: [2, 85],
                                73: [2, 85],
                                74: [2, 85],
                                78: [2, 85],
                                80: [2, 85],
                                84: [2, 85],
                                85: [2, 85],
                                86: [2, 85],
                                91: [2, 85],
                                93: [2, 85],
                                102: [2, 85],
                                104: [2, 85],
                                105: [2, 85],
                                106: [2, 85],
                                110: [2, 85],
                                118: [2, 85],
                                126: [2, 85],
                                129: [2, 85],
                                130: [2, 85],
                                131: [2, 85],
                                132: [2, 85],
                                133: [2, 85],
                                134: [2, 85],
                                135: [2, 85],
                                136: [2, 85],
                                137: [2, 85],
                                138: [2, 85],
                                139: [2, 85],
                                140: [2, 85]
                            }, {
                                7: 191,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 195],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                72: 190,
                                75: 192,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                92: 193,
                                93: [1, 194],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                70: 196,
                                71: [1, 97],
                                74: [1, 98]
                            }, {
                                82: 197,
                                85: [1, 103]
                            }, {
                                1: [2, 70],
                                6: [2, 70],
                                25: [2, 70],
                                26: [2, 70],
                                40: [2, 70],
                                49: [2, 70],
                                54: [2, 70],
                                57: [2, 70],
                                66: [2, 70],
                                67: [2, 70],
                                68: [2, 70],
                                69: [2, 70],
                                71: [2, 70],
                                73: [2, 70],
                                74: [2, 70],
                                78: [2, 70],
                                80: [2, 70],
                                84: [2, 70],
                                85: [2, 70],
                                86: [2, 70],
                                91: [2, 70],
                                93: [2, 70],
                                102: [2, 70],
                                104: [2, 70],
                                105: [2, 70],
                                106: [2, 70],
                                110: [2, 70],
                                118: [2, 70],
                                126: [2, 70],
                                129: [2, 70],
                                130: [2, 70],
                                131: [2, 70],
                                132: [2, 70],
                                133: [2, 70],
                                134: [2, 70],
                                135: [2, 70],
                                136: [2, 70],
                                137: [2, 70],
                                138: [2, 70],
                                139: [2, 70],
                                140: [2, 70]
                            }, {
                                6: [1, 199],
                                7: 198,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 200],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 107],
                                6: [2, 107],
                                25: [2, 107],
                                26: [2, 107],
                                49: [2, 107],
                                54: [2, 107],
                                57: [2, 107],
                                66: [2, 107],
                                67: [2, 107],
                                68: [2, 107],
                                69: [2, 107],
                                71: [2, 107],
                                73: [2, 107],
                                74: [2, 107],
                                78: [2, 107],
                                84: [2, 107],
                                85: [2, 107],
                                86: [2, 107],
                                91: [2, 107],
                                93: [2, 107],
                                102: [2, 107],
                                104: [2, 107],
                                105: [2, 107],
                                106: [2, 107],
                                110: [2, 107],
                                118: [2, 107],
                                126: [2, 107],
                                129: [2, 107],
                                130: [2, 107],
                                133: [2, 107],
                                134: [2, 107],
                                135: [2, 107],
                                136: [2, 107],
                                137: [2, 107],
                                138: [2, 107],
                                139: [2, 107]
                            }, {
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 147],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                86: [1, 201],
                                87: 202,
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                94: 146,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                49: [1, 204],
                                53: 206,
                                54: [1, 205]
                            }, {
                                6: [2, 55],
                                25: [2, 55],
                                26: [2, 55],
                                49: [2, 55],
                                54: [2, 55]
                            }, {
                                6: [2, 59],
                                25: [2, 59],
                                26: [2, 59],
                                40: [1, 208],
                                49: [2, 59],
                                54: [2, 59],
                                57: [1, 207]
                            }, {
                                6: [2, 62],
                                25: [2, 62],
                                26: [2, 62],
                                49: [2, 62],
                                54: [2, 62]
                            }, {
                                6: [2, 63],
                                25: [2, 63],
                                26: [2, 63],
                                40: [2, 63],
                                49: [2, 63],
                                54: [2, 63],
                                57: [2, 63]
                            }, {
                                6: [2, 64],
                                25: [2, 64],
                                26: [2, 64],
                                40: [2, 64],
                                49: [2, 64],
                                54: [2, 64],
                                57: [2, 64]
                            }, {
                                6: [2, 65],
                                25: [2, 65],
                                26: [2, 65],
                                40: [2, 65],
                                49: [2, 65],
                                54: [2, 65],
                                57: [2, 65]
                            }, {
                                6: [2, 66],
                                25: [2, 66],
                                26: [2, 66],
                                40: [2, 66],
                                49: [2, 66],
                                54: [2, 66],
                                57: [2, 66]
                            }, {
                                27: 150,
                                28: [1, 72]
                            }, {
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 147],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                87: 145,
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                91: [1, 144],
                                94: 146,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 49],
                                6: [2, 49],
                                25: [2, 49],
                                26: [2, 49],
                                49: [2, 49],
                                54: [2, 49],
                                57: [2, 49],
                                73: [2, 49],
                                78: [2, 49],
                                86: [2, 49],
                                91: [2, 49],
                                93: [2, 49],
                                102: [2, 49],
                                104: [2, 49],
                                105: [2, 49],
                                106: [2, 49],
                                110: [2, 49],
                                118: [2, 49],
                                126: [2, 49],
                                129: [2, 49],
                                130: [2, 49],
                                133: [2, 49],
                                134: [2, 49],
                                135: [2, 49],
                                136: [2, 49],
                                137: [2, 49],
                                138: [2, 49],
                                139: [2, 49]
                            }, {
                                4: 210,
                                5: 3,
                                7: 4,
                                8: 5,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                26: [1, 209],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 188],
                                6: [2, 188],
                                25: [2, 188],
                                26: [2, 188],
                                49: [2, 188],
                                54: [2, 188],
                                57: [2, 188],
                                73: [2, 188],
                                78: [2, 188],
                                86: [2, 188],
                                91: [2, 188],
                                93: [2, 188],
                                102: [2, 188],
                                103: 84,
                                104: [2, 188],
                                105: [2, 188],
                                106: [2, 188],
                                109: 85,
                                110: [2, 188],
                                111: 68,
                                118: [2, 188],
                                126: [2, 188],
                                129: [2, 188],
                                130: [2, 188],
                                133: [1, 74],
                                134: [2, 188],
                                135: [2, 188],
                                136: [2, 188],
                                137: [2, 188],
                                138: [2, 188],
                                139: [2, 188]
                            }, {
                                103: 87,
                                104: [1, 64],
                                106: [1, 65],
                                109: 88,
                                110: [1, 67],
                                111: 68,
                                126: [1, 86]
                            }, {
                                1: [2, 189],
                                6: [2, 189],
                                25: [2, 189],
                                26: [2, 189],
                                49: [2, 189],
                                54: [2, 189],
                                57: [2, 189],
                                73: [2, 189],
                                78: [2, 189],
                                86: [2, 189],
                                91: [2, 189],
                                93: [2, 189],
                                102: [2, 189],
                                103: 84,
                                104: [2, 189],
                                105: [2, 189],
                                106: [2, 189],
                                109: 85,
                                110: [2, 189],
                                111: 68,
                                118: [2, 189],
                                126: [2, 189],
                                129: [2, 189],
                                130: [2, 189],
                                133: [1, 74],
                                134: [2, 189],
                                135: [1, 78],
                                136: [2, 189],
                                137: [2, 189],
                                138: [2, 189],
                                139: [2, 189]
                            }, {
                                1: [2, 190],
                                6: [2, 190],
                                25: [2, 190],
                                26: [2, 190],
                                49: [2, 190],
                                54: [2, 190],
                                57: [2, 190],
                                73: [2, 190],
                                78: [2, 190],
                                86: [2, 190],
                                91: [2, 190],
                                93: [2, 190],
                                102: [2, 190],
                                103: 84,
                                104: [2, 190],
                                105: [2, 190],
                                106: [2, 190],
                                109: 85,
                                110: [2, 190],
                                111: 68,
                                118: [2, 190],
                                126: [2, 190],
                                129: [2, 190],
                                130: [2, 190],
                                133: [1, 74],
                                134: [2, 190],
                                135: [1, 78],
                                136: [2, 190],
                                137: [2, 190],
                                138: [2, 190],
                                139: [2, 190]
                            }, {
                                1: [2, 191],
                                6: [2, 191],
                                25: [2, 191],
                                26: [2, 191],
                                49: [2, 191],
                                54: [2, 191],
                                57: [2, 191],
                                73: [2, 191],
                                78: [2, 191],
                                86: [2, 191],
                                91: [2, 191],
                                93: [2, 191],
                                102: [2, 191],
                                103: 84,
                                104: [2, 191],
                                105: [2, 191],
                                106: [2, 191],
                                109: 85,
                                110: [2, 191],
                                111: 68,
                                118: [2, 191],
                                126: [2, 191],
                                129: [2, 191],
                                130: [2, 191],
                                133: [1, 74],
                                134: [2, 191],
                                135: [1, 78],
                                136: [2, 191],
                                137: [2, 191],
                                138: [2, 191],
                                139: [2, 191]
                            }, {
                                1: [2, 192],
                                6: [2, 192],
                                25: [2, 192],
                                26: [2, 192],
                                49: [2, 192],
                                54: [2, 192],
                                57: [2, 192],
                                66: [2, 72],
                                67: [2, 72],
                                68: [2, 72],
                                69: [2, 72],
                                71: [2, 72],
                                73: [2, 192],
                                74: [2, 72],
                                78: [2, 192],
                                84: [2, 72],
                                85: [2, 72],
                                86: [2, 192],
                                91: [2, 192],
                                93: [2, 192],
                                102: [2, 192],
                                104: [2, 192],
                                105: [2, 192],
                                106: [2, 192],
                                110: [2, 192],
                                118: [2, 192],
                                126: [2, 192],
                                129: [2, 192],
                                130: [2, 192],
                                133: [2, 192],
                                134: [2, 192],
                                135: [2, 192],
                                136: [2, 192],
                                137: [2, 192],
                                138: [2, 192],
                                139: [2, 192]
                            }, {
                                62: 90,
                                66: [1, 92],
                                67: [1, 93],
                                68: [1, 94],
                                69: [1, 95],
                                70: 96,
                                71: [1, 97],
                                74: [1, 98],
                                81: 89,
                                84: [1, 91],
                                85: [2, 108]
                            }, {
                                62: 100,
                                66: [1, 92],
                                67: [1, 93],
                                68: [1, 94],
                                69: [1, 95],
                                70: 96,
                                71: [1, 97],
                                74: [1, 98],
                                81: 99,
                                84: [1, 91],
                                85: [2, 108]
                            }, {
                                66: [2, 75],
                                67: [2, 75],
                                68: [2, 75],
                                69: [2, 75],
                                71: [2, 75],
                                74: [2, 75],
                                84: [2, 75],
                                85: [2, 75]
                            }, {
                                1: [2, 193],
                                6: [2, 193],
                                25: [2, 193],
                                26: [2, 193],
                                49: [2, 193],
                                54: [2, 193],
                                57: [2, 193],
                                66: [2, 72],
                                67: [2, 72],
                                68: [2, 72],
                                69: [2, 72],
                                71: [2, 72],
                                73: [2, 193],
                                74: [2, 72],
                                78: [2, 193],
                                84: [2, 72],
                                85: [2, 72],
                                86: [2, 193],
                                91: [2, 193],
                                93: [2, 193],
                                102: [2, 193],
                                104: [2, 193],
                                105: [2, 193],
                                106: [2, 193],
                                110: [2, 193],
                                118: [2, 193],
                                126: [2, 193],
                                129: [2, 193],
                                130: [2, 193],
                                133: [2, 193],
                                134: [2, 193],
                                135: [2, 193],
                                136: [2, 193],
                                137: [2, 193],
                                138: [2, 193],
                                139: [2, 193]
                            }, {
                                1: [2, 194],
                                6: [2, 194],
                                25: [2, 194],
                                26: [2, 194],
                                49: [2, 194],
                                54: [2, 194],
                                57: [2, 194],
                                73: [2, 194],
                                78: [2, 194],
                                86: [2, 194],
                                91: [2, 194],
                                93: [2, 194],
                                102: [2, 194],
                                104: [2, 194],
                                105: [2, 194],
                                106: [2, 194],
                                110: [2, 194],
                                118: [2, 194],
                                126: [2, 194],
                                129: [2, 194],
                                130: [2, 194],
                                133: [2, 194],
                                134: [2, 194],
                                135: [2, 194],
                                136: [2, 194],
                                137: [2, 194],
                                138: [2, 194],
                                139: [2, 194]
                            }, {
                                1: [2, 195],
                                6: [2, 195],
                                25: [2, 195],
                                26: [2, 195],
                                49: [2, 195],
                                54: [2, 195],
                                57: [2, 195],
                                73: [2, 195],
                                78: [2, 195],
                                86: [2, 195],
                                91: [2, 195],
                                93: [2, 195],
                                102: [2, 195],
                                104: [2, 195],
                                105: [2, 195],
                                106: [2, 195],
                                110: [2, 195],
                                118: [2, 195],
                                126: [2, 195],
                                129: [2, 195],
                                130: [2, 195],
                                133: [2, 195],
                                134: [2, 195],
                                135: [2, 195],
                                136: [2, 195],
                                137: [2, 195],
                                138: [2, 195],
                                139: [2, 195]
                            }, {
                                6: [1, 213],
                                7: 211,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 212],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 214,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                24: 215,
                                25: [1, 115],
                                125: [1, 216]
                            }, {
                                1: [2, 134],
                                6: [2, 134],
                                25: [2, 134],
                                26: [2, 134],
                                49: [2, 134],
                                54: [2, 134],
                                57: [2, 134],
                                73: [2, 134],
                                78: [2, 134],
                                86: [2, 134],
                                91: [2, 134],
                                93: [2, 134],
                                97: 217,
                                98: [1, 218],
                                99: [1, 219],
                                102: [2, 134],
                                104: [2, 134],
                                105: [2, 134],
                                106: [2, 134],
                                110: [2, 134],
                                118: [2, 134],
                                126: [2, 134],
                                129: [2, 134],
                                130: [2, 134],
                                133: [2, 134],
                                134: [2, 134],
                                135: [2, 134],
                                136: [2, 134],
                                137: [2, 134],
                                138: [2, 134],
                                139: [2, 134]
                            }, {
                                1: [2, 148],
                                6: [2, 148],
                                25: [2, 148],
                                26: [2, 148],
                                49: [2, 148],
                                54: [2, 148],
                                57: [2, 148],
                                73: [2, 148],
                                78: [2, 148],
                                86: [2, 148],
                                91: [2, 148],
                                93: [2, 148],
                                102: [2, 148],
                                104: [2, 148],
                                105: [2, 148],
                                106: [2, 148],
                                110: [2, 148],
                                118: [2, 148],
                                126: [2, 148],
                                129: [2, 148],
                                130: [2, 148],
                                133: [2, 148],
                                134: [2, 148],
                                135: [2, 148],
                                136: [2, 148],
                                137: [2, 148],
                                138: [2, 148],
                                139: [2, 148]
                            }, {
                                1: [2, 156],
                                6: [2, 156],
                                25: [2, 156],
                                26: [2, 156],
                                49: [2, 156],
                                54: [2, 156],
                                57: [2, 156],
                                73: [2, 156],
                                78: [2, 156],
                                86: [2, 156],
                                91: [2, 156],
                                93: [2, 156],
                                102: [2, 156],
                                104: [2, 156],
                                105: [2, 156],
                                106: [2, 156],
                                110: [2, 156],
                                118: [2, 156],
                                126: [2, 156],
                                129: [2, 156],
                                130: [2, 156],
                                133: [2, 156],
                                134: [2, 156],
                                135: [2, 156],
                                136: [2, 156],
                                137: [2, 156],
                                138: [2, 156],
                                139: [2, 156]
                            }, {
                                25: [1, 220],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                120: 221,
                                122: 222,
                                123: [1, 223]
                            }, {
                                1: [2, 97],
                                6: [2, 97],
                                25: [2, 97],
                                26: [2, 97],
                                49: [2, 97],
                                54: [2, 97],
                                57: [2, 97],
                                73: [2, 97],
                                78: [2, 97],
                                86: [2, 97],
                                91: [2, 97],
                                93: [2, 97],
                                102: [2, 97],
                                104: [2, 97],
                                105: [2, 97],
                                106: [2, 97],
                                110: [2, 97],
                                118: [2, 97],
                                126: [2, 97],
                                129: [2, 97],
                                130: [2, 97],
                                133: [2, 97],
                                134: [2, 97],
                                135: [2, 97],
                                136: [2, 97],
                                137: [2, 97],
                                138: [2, 97],
                                139: [2, 97]
                            }, {
                                7: 224,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 100],
                                6: [2, 100],
                                24: 225,
                                25: [1, 115],
                                26: [2, 100],
                                49: [2, 100],
                                54: [2, 100],
                                57: [2, 100],
                                66: [2, 72],
                                67: [2, 72],
                                68: [2, 72],
                                69: [2, 72],
                                71: [2, 72],
                                73: [2, 100],
                                74: [2, 72],
                                78: [2, 100],
                                80: [1, 226],
                                84: [2, 72],
                                85: [2, 72],
                                86: [2, 100],
                                91: [2, 100],
                                93: [2, 100],
                                102: [2, 100],
                                104: [2, 100],
                                105: [2, 100],
                                106: [2, 100],
                                110: [2, 100],
                                118: [2, 100],
                                126: [2, 100],
                                129: [2, 100],
                                130: [2, 100],
                                133: [2, 100],
                                134: [2, 100],
                                135: [2, 100],
                                136: [2, 100],
                                137: [2, 100],
                                138: [2, 100],
                                139: [2, 100]
                            }, {
                                1: [2, 141],
                                6: [2, 141],
                                25: [2, 141],
                                26: [2, 141],
                                49: [2, 141],
                                54: [2, 141],
                                57: [2, 141],
                                73: [2, 141],
                                78: [2, 141],
                                86: [2, 141],
                                91: [2, 141],
                                93: [2, 141],
                                102: [2, 141],
                                103: 84,
                                104: [2, 141],
                                105: [2, 141],
                                106: [2, 141],
                                109: 85,
                                110: [2, 141],
                                111: 68,
                                118: [2, 141],
                                126: [2, 141],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 45],
                                6: [2, 45],
                                26: [2, 45],
                                102: [2, 45],
                                103: 84,
                                104: [2, 45],
                                106: [2, 45],
                                109: 85,
                                110: [2, 45],
                                111: 68,
                                126: [2, 45],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [1, 73],
                                102: [1, 227]
                            }, {
                                4: 228,
                                5: 3,
                                7: 4,
                                8: 5,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 129],
                                25: [2, 129],
                                54: [2, 129],
                                57: [1, 230],
                                91: [2, 129],
                                92: 229,
                                93: [1, 194],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 115],
                                6: [2, 115],
                                25: [2, 115],
                                26: [2, 115],
                                40: [2, 115],
                                49: [2, 115],
                                54: [2, 115],
                                57: [2, 115],
                                66: [2, 115],
                                67: [2, 115],
                                68: [2, 115],
                                69: [2, 115],
                                71: [2, 115],
                                73: [2, 115],
                                74: [2, 115],
                                78: [2, 115],
                                84: [2, 115],
                                85: [2, 115],
                                86: [2, 115],
                                91: [2, 115],
                                93: [2, 115],
                                102: [2, 115],
                                104: [2, 115],
                                105: [2, 115],
                                106: [2, 115],
                                110: [2, 115],
                                116: [2, 115],
                                117: [2, 115],
                                118: [2, 115],
                                126: [2, 115],
                                129: [2, 115],
                                130: [2, 115],
                                133: [2, 115],
                                134: [2, 115],
                                135: [2, 115],
                                136: [2, 115],
                                137: [2, 115],
                                138: [2, 115],
                                139: [2, 115]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                53: 231,
                                54: [1, 232],
                                91: [2, 52]
                            }, {
                                6: [2, 124],
                                25: [2, 124],
                                26: [2, 124],
                                54: [2, 124],
                                86: [2, 124],
                                91: [2, 124]
                            }, {
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 147],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                87: 233,
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                94: 146,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 130],
                                25: [2, 130],
                                26: [2, 130],
                                54: [2, 130],
                                86: [2, 130],
                                91: [2, 130]
                            }, {
                                6: [2, 131],
                                25: [2, 131],
                                26: [2, 131],
                                54: [2, 131],
                                86: [2, 131],
                                91: [2, 131]
                            }, {
                                1: [2, 114],
                                6: [2, 114],
                                25: [2, 114],
                                26: [2, 114],
                                40: [2, 114],
                                43: [2, 114],
                                49: [2, 114],
                                54: [2, 114],
                                57: [2, 114],
                                66: [2, 114],
                                67: [2, 114],
                                68: [2, 114],
                                69: [2, 114],
                                71: [2, 114],
                                73: [2, 114],
                                74: [2, 114],
                                78: [2, 114],
                                80: [2, 114],
                                84: [2, 114],
                                85: [2, 114],
                                86: [2, 114],
                                91: [2, 114],
                                93: [2, 114],
                                102: [2, 114],
                                104: [2, 114],
                                105: [2, 114],
                                106: [2, 114],
                                110: [2, 114],
                                116: [2, 114],
                                117: [2, 114],
                                118: [2, 114],
                                126: [2, 114],
                                129: [2, 114],
                                130: [2, 114],
                                131: [2, 114],
                                132: [2, 114],
                                133: [2, 114],
                                134: [2, 114],
                                135: [2, 114],
                                136: [2, 114],
                                137: [2, 114],
                                138: [2, 114],
                                139: [2, 114],
                                140: [2, 114]
                            }, {
                                24: 234,
                                25: [1, 115],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 144],
                                6: [2, 144],
                                25: [2, 144],
                                26: [2, 144],
                                49: [2, 144],
                                54: [2, 144],
                                57: [2, 144],
                                73: [2, 144],
                                78: [2, 144],
                                86: [2, 144],
                                91: [2, 144],
                                93: [2, 144],
                                102: [2, 144],
                                103: 84,
                                104: [1, 64],
                                105: [1, 235],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 144],
                                126: [2, 144],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 146],
                                6: [2, 146],
                                25: [2, 146],
                                26: [2, 146],
                                49: [2, 146],
                                54: [2, 146],
                                57: [2, 146],
                                73: [2, 146],
                                78: [2, 146],
                                86: [2, 146],
                                91: [2, 146],
                                93: [2, 146],
                                102: [2, 146],
                                103: 84,
                                104: [1, 64],
                                105: [1, 236],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 146],
                                126: [2, 146],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 152],
                                6: [2, 152],
                                25: [2, 152],
                                26: [2, 152],
                                49: [2, 152],
                                54: [2, 152],
                                57: [2, 152],
                                73: [2, 152],
                                78: [2, 152],
                                86: [2, 152],
                                91: [2, 152],
                                93: [2, 152],
                                102: [2, 152],
                                104: [2, 152],
                                105: [2, 152],
                                106: [2, 152],
                                110: [2, 152],
                                118: [2, 152],
                                126: [2, 152],
                                129: [2, 152],
                                130: [2, 152],
                                133: [2, 152],
                                134: [2, 152],
                                135: [2, 152],
                                136: [2, 152],
                                137: [2, 152],
                                138: [2, 152],
                                139: [2, 152]
                            }, {
                                1: [2, 153],
                                6: [2, 153],
                                25: [2, 153],
                                26: [2, 153],
                                49: [2, 153],
                                54: [2, 153],
                                57: [2, 153],
                                73: [2, 153],
                                78: [2, 153],
                                86: [2, 153],
                                91: [2, 153],
                                93: [2, 153],
                                102: [2, 153],
                                103: 84,
                                104: [1, 64],
                                105: [2, 153],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 153],
                                126: [2, 153],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 157],
                                6: [2, 157],
                                25: [2, 157],
                                26: [2, 157],
                                49: [2, 157],
                                54: [2, 157],
                                57: [2, 157],
                                73: [2, 157],
                                78: [2, 157],
                                86: [2, 157],
                                91: [2, 157],
                                93: [2, 157],
                                102: [2, 157],
                                104: [2, 157],
                                105: [2, 157],
                                106: [2, 157],
                                110: [2, 157],
                                118: [2, 157],
                                126: [2, 157],
                                129: [2, 157],
                                130: [2, 157],
                                133: [2, 157],
                                134: [2, 157],
                                135: [2, 157],
                                136: [2, 157],
                                137: [2, 157],
                                138: [2, 157],
                                139: [2, 157]
                            }, {
                                116: [2, 159],
                                117: [2, 159]
                            }, {
                                27: 160,
                                28: [1, 72],
                                44: 161,
                                58: 162,
                                59: 163,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113],
                                113: 237,
                                115: 159
                            }, {
                                54: [1, 238],
                                116: [2, 165],
                                117: [2, 165]
                            }, {
                                54: [2, 161],
                                116: [2, 161],
                                117: [2, 161]
                            }, {
                                54: [2, 162],
                                116: [2, 162],
                                117: [2, 162]
                            }, {
                                54: [2, 163],
                                116: [2, 163],
                                117: [2, 163]
                            }, {
                                54: [2, 164],
                                116: [2, 164],
                                117: [2, 164]
                            }, {
                                1: [2, 158],
                                6: [2, 158],
                                25: [2, 158],
                                26: [2, 158],
                                49: [2, 158],
                                54: [2, 158],
                                57: [2, 158],
                                73: [2, 158],
                                78: [2, 158],
                                86: [2, 158],
                                91: [2, 158],
                                93: [2, 158],
                                102: [2, 158],
                                104: [2, 158],
                                105: [2, 158],
                                106: [2, 158],
                                110: [2, 158],
                                118: [2, 158],
                                126: [2, 158],
                                129: [2, 158],
                                130: [2, 158],
                                133: [2, 158],
                                134: [2, 158],
                                135: [2, 158],
                                136: [2, 158],
                                137: [2, 158],
                                138: [2, 158],
                                139: [2, 158]
                            }, {
                                7: 239,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 240,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                53: 241,
                                54: [1, 242],
                                78: [2, 52]
                            }, {
                                6: [2, 92],
                                25: [2, 92],
                                26: [2, 92],
                                54: [2, 92],
                                78: [2, 92]
                            }, {
                                6: [2, 38],
                                25: [2, 38],
                                26: [2, 38],
                                43: [1, 243],
                                54: [2, 38],
                                78: [2, 38]
                            }, {
                                6: [2, 41],
                                25: [2, 41],
                                26: [2, 41],
                                54: [2, 41],
                                78: [2, 41]
                            }, {
                                6: [2, 42],
                                25: [2, 42],
                                26: [2, 42],
                                43: [2, 42],
                                54: [2, 42],
                                78: [2, 42]
                            }, {
                                6: [2, 43],
                                25: [2, 43],
                                26: [2, 43],
                                43: [2, 43],
                                54: [2, 43],
                                78: [2, 43]
                            }, {
                                6: [2, 44],
                                25: [2, 44],
                                26: [2, 44],
                                43: [2, 44],
                                54: [2, 44],
                                78: [2, 44]
                            }, {
                                1: [2, 4],
                                6: [2, 4],
                                26: [2, 4],
                                102: [2, 4]
                            }, {
                                1: [2, 197],
                                6: [2, 197],
                                25: [2, 197],
                                26: [2, 197],
                                49: [2, 197],
                                54: [2, 197],
                                57: [2, 197],
                                73: [2, 197],
                                78: [2, 197],
                                86: [2, 197],
                                91: [2, 197],
                                93: [2, 197],
                                102: [2, 197],
                                103: 84,
                                104: [2, 197],
                                105: [2, 197],
                                106: [2, 197],
                                109: 85,
                                110: [2, 197],
                                111: 68,
                                118: [2, 197],
                                126: [2, 197],
                                129: [2, 197],
                                130: [2, 197],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [2, 197],
                                137: [2, 197],
                                138: [2, 197],
                                139: [2, 197]
                            }, {
                                1: [2, 198],
                                6: [2, 198],
                                25: [2, 198],
                                26: [2, 198],
                                49: [2, 198],
                                54: [2, 198],
                                57: [2, 198],
                                73: [2, 198],
                                78: [2, 198],
                                86: [2, 198],
                                91: [2, 198],
                                93: [2, 198],
                                102: [2, 198],
                                103: 84,
                                104: [2, 198],
                                105: [2, 198],
                                106: [2, 198],
                                109: 85,
                                110: [2, 198],
                                111: 68,
                                118: [2, 198],
                                126: [2, 198],
                                129: [2, 198],
                                130: [2, 198],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [2, 198],
                                137: [2, 198],
                                138: [2, 198],
                                139: [2, 198]
                            }, {
                                1: [2, 199],
                                6: [2, 199],
                                25: [2, 199],
                                26: [2, 199],
                                49: [2, 199],
                                54: [2, 199],
                                57: [2, 199],
                                73: [2, 199],
                                78: [2, 199],
                                86: [2, 199],
                                91: [2, 199],
                                93: [2, 199],
                                102: [2, 199],
                                103: 84,
                                104: [2, 199],
                                105: [2, 199],
                                106: [2, 199],
                                109: 85,
                                110: [2, 199],
                                111: 68,
                                118: [2, 199],
                                126: [2, 199],
                                129: [2, 199],
                                130: [2, 199],
                                133: [1, 74],
                                134: [2, 199],
                                135: [1, 78],
                                136: [2, 199],
                                137: [2, 199],
                                138: [2, 199],
                                139: [2, 199]
                            }, {
                                1: [2, 200],
                                6: [2, 200],
                                25: [2, 200],
                                26: [2, 200],
                                49: [2, 200],
                                54: [2, 200],
                                57: [2, 200],
                                73: [2, 200],
                                78: [2, 200],
                                86: [2, 200],
                                91: [2, 200],
                                93: [2, 200],
                                102: [2, 200],
                                103: 84,
                                104: [2, 200],
                                105: [2, 200],
                                106: [2, 200],
                                109: 85,
                                110: [2, 200],
                                111: 68,
                                118: [2, 200],
                                126: [2, 200],
                                129: [2, 200],
                                130: [2, 200],
                                133: [1, 74],
                                134: [2, 200],
                                135: [1, 78],
                                136: [2, 200],
                                137: [2, 200],
                                138: [2, 200],
                                139: [2, 200]
                            }, {
                                1: [2, 201],
                                6: [2, 201],
                                25: [2, 201],
                                26: [2, 201],
                                49: [2, 201],
                                54: [2, 201],
                                57: [2, 201],
                                73: [2, 201],
                                78: [2, 201],
                                86: [2, 201],
                                91: [2, 201],
                                93: [2, 201],
                                102: [2, 201],
                                103: 84,
                                104: [2, 201],
                                105: [2, 201],
                                106: [2, 201],
                                109: 85,
                                110: [2, 201],
                                111: 68,
                                118: [2, 201],
                                126: [2, 201],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [2, 201],
                                137: [2, 201],
                                138: [2, 201],
                                139: [2, 201]
                            }, {
                                1: [2, 202],
                                6: [2, 202],
                                25: [2, 202],
                                26: [2, 202],
                                49: [2, 202],
                                54: [2, 202],
                                57: [2, 202],
                                73: [2, 202],
                                78: [2, 202],
                                86: [2, 202],
                                91: [2, 202],
                                93: [2, 202],
                                102: [2, 202],
                                103: 84,
                                104: [2, 202],
                                105: [2, 202],
                                106: [2, 202],
                                109: 85,
                                110: [2, 202],
                                111: 68,
                                118: [2, 202],
                                126: [2, 202],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [2, 202],
                                138: [2, 202],
                                139: [1, 82]
                            }, {
                                1: [2, 203],
                                6: [2, 203],
                                25: [2, 203],
                                26: [2, 203],
                                49: [2, 203],
                                54: [2, 203],
                                57: [2, 203],
                                73: [2, 203],
                                78: [2, 203],
                                86: [2, 203],
                                91: [2, 203],
                                93: [2, 203],
                                102: [2, 203],
                                103: 84,
                                104: [2, 203],
                                105: [2, 203],
                                106: [2, 203],
                                109: 85,
                                110: [2, 203],
                                111: 68,
                                118: [2, 203],
                                126: [2, 203],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [2, 203],
                                139: [1, 82]
                            }, {
                                1: [2, 204],
                                6: [2, 204],
                                25: [2, 204],
                                26: [2, 204],
                                49: [2, 204],
                                54: [2, 204],
                                57: [2, 204],
                                73: [2, 204],
                                78: [2, 204],
                                86: [2, 204],
                                91: [2, 204],
                                93: [2, 204],
                                102: [2, 204],
                                103: 84,
                                104: [2, 204],
                                105: [2, 204],
                                106: [2, 204],
                                109: 85,
                                110: [2, 204],
                                111: 68,
                                118: [2, 204],
                                126: [2, 204],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [2, 204],
                                138: [2, 204],
                                139: [2, 204]
                            }, {
                                1: [2, 187],
                                6: [2, 187],
                                25: [2, 187],
                                26: [2, 187],
                                49: [2, 187],
                                54: [2, 187],
                                57: [2, 187],
                                73: [2, 187],
                                78: [2, 187],
                                86: [2, 187],
                                91: [2, 187],
                                93: [2, 187],
                                102: [2, 187],
                                103: 84,
                                104: [1, 64],
                                105: [2, 187],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 187],
                                126: [2, 187],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 186],
                                6: [2, 186],
                                25: [2, 186],
                                26: [2, 186],
                                49: [2, 186],
                                54: [2, 186],
                                57: [2, 186],
                                73: [2, 186],
                                78: [2, 186],
                                86: [2, 186],
                                91: [2, 186],
                                93: [2, 186],
                                102: [2, 186],
                                103: 84,
                                104: [1, 64],
                                105: [2, 186],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 186],
                                126: [2, 186],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 104],
                                6: [2, 104],
                                25: [2, 104],
                                26: [2, 104],
                                49: [2, 104],
                                54: [2, 104],
                                57: [2, 104],
                                66: [2, 104],
                                67: [2, 104],
                                68: [2, 104],
                                69: [2, 104],
                                71: [2, 104],
                                73: [2, 104],
                                74: [2, 104],
                                78: [2, 104],
                                84: [2, 104],
                                85: [2, 104],
                                86: [2, 104],
                                91: [2, 104],
                                93: [2, 104],
                                102: [2, 104],
                                104: [2, 104],
                                105: [2, 104],
                                106: [2, 104],
                                110: [2, 104],
                                118: [2, 104],
                                126: [2, 104],
                                129: [2, 104],
                                130: [2, 104],
                                133: [2, 104],
                                134: [2, 104],
                                135: [2, 104],
                                136: [2, 104],
                                137: [2, 104],
                                138: [2, 104],
                                139: [2, 104]
                            }, {
                                1: [2, 80],
                                6: [2, 80],
                                25: [2, 80],
                                26: [2, 80],
                                40: [2, 80],
                                49: [2, 80],
                                54: [2, 80],
                                57: [2, 80],
                                66: [2, 80],
                                67: [2, 80],
                                68: [2, 80],
                                69: [2, 80],
                                71: [2, 80],
                                73: [2, 80],
                                74: [2, 80],
                                78: [2, 80],
                                80: [2, 80],
                                84: [2, 80],
                                85: [2, 80],
                                86: [2, 80],
                                91: [2, 80],
                                93: [2, 80],
                                102: [2, 80],
                                104: [2, 80],
                                105: [2, 80],
                                106: [2, 80],
                                110: [2, 80],
                                118: [2, 80],
                                126: [2, 80],
                                129: [2, 80],
                                130: [2, 80],
                                131: [2, 80],
                                132: [2, 80],
                                133: [2, 80],
                                134: [2, 80],
                                135: [2, 80],
                                136: [2, 80],
                                137: [2, 80],
                                138: [2, 80],
                                139: [2, 80],
                                140: [2, 80]
                            }, {
                                1: [2, 81],
                                6: [2, 81],
                                25: [2, 81],
                                26: [2, 81],
                                40: [2, 81],
                                49: [2, 81],
                                54: [2, 81],
                                57: [2, 81],
                                66: [2, 81],
                                67: [2, 81],
                                68: [2, 81],
                                69: [2, 81],
                                71: [2, 81],
                                73: [2, 81],
                                74: [2, 81],
                                78: [2, 81],
                                80: [2, 81],
                                84: [2, 81],
                                85: [2, 81],
                                86: [2, 81],
                                91: [2, 81],
                                93: [2, 81],
                                102: [2, 81],
                                104: [2, 81],
                                105: [2, 81],
                                106: [2, 81],
                                110: [2, 81],
                                118: [2, 81],
                                126: [2, 81],
                                129: [2, 81],
                                130: [2, 81],
                                131: [2, 81],
                                132: [2, 81],
                                133: [2, 81],
                                134: [2, 81],
                                135: [2, 81],
                                136: [2, 81],
                                137: [2, 81],
                                138: [2, 81],
                                139: [2, 81],
                                140: [2, 81]
                            }, {
                                1: [2, 82],
                                6: [2, 82],
                                25: [2, 82],
                                26: [2, 82],
                                40: [2, 82],
                                49: [2, 82],
                                54: [2, 82],
                                57: [2, 82],
                                66: [2, 82],
                                67: [2, 82],
                                68: [2, 82],
                                69: [2, 82],
                                71: [2, 82],
                                73: [2, 82],
                                74: [2, 82],
                                78: [2, 82],
                                80: [2, 82],
                                84: [2, 82],
                                85: [2, 82],
                                86: [2, 82],
                                91: [2, 82],
                                93: [2, 82],
                                102: [2, 82],
                                104: [2, 82],
                                105: [2, 82],
                                106: [2, 82],
                                110: [2, 82],
                                118: [2, 82],
                                126: [2, 82],
                                129: [2, 82],
                                130: [2, 82],
                                131: [2, 82],
                                132: [2, 82],
                                133: [2, 82],
                                134: [2, 82],
                                135: [2, 82],
                                136: [2, 82],
                                137: [2, 82],
                                138: [2, 82],
                                139: [2, 82],
                                140: [2, 82]
                            }, {
                                1: [2, 83],
                                6: [2, 83],
                                25: [2, 83],
                                26: [2, 83],
                                40: [2, 83],
                                49: [2, 83],
                                54: [2, 83],
                                57: [2, 83],
                                66: [2, 83],
                                67: [2, 83],
                                68: [2, 83],
                                69: [2, 83],
                                71: [2, 83],
                                73: [2, 83],
                                74: [2, 83],
                                78: [2, 83],
                                80: [2, 83],
                                84: [2, 83],
                                85: [2, 83],
                                86: [2, 83],
                                91: [2, 83],
                                93: [2, 83],
                                102: [2, 83],
                                104: [2, 83],
                                105: [2, 83],
                                106: [2, 83],
                                110: [2, 83],
                                118: [2, 83],
                                126: [2, 83],
                                129: [2, 83],
                                130: [2, 83],
                                131: [2, 83],
                                132: [2, 83],
                                133: [2, 83],
                                134: [2, 83],
                                135: [2, 83],
                                136: [2, 83],
                                137: [2, 83],
                                138: [2, 83],
                                139: [2, 83],
                                140: [2, 83]
                            }, {
                                73: [1, 244]
                            }, {
                                57: [1, 195],
                                73: [2, 88],
                                92: 245,
                                93: [1, 194],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                73: [2, 89]
                            }, {
                                7: 246,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                73: [2, 123],
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                11: [2, 117],
                                28: [2, 117],
                                30: [2, 117],
                                31: [2, 117],
                                33: [2, 117],
                                34: [2, 117],
                                35: [2, 117],
                                36: [2, 117],
                                37: [2, 117],
                                38: [2, 117],
                                45: [2, 117],
                                46: [2, 117],
                                47: [2, 117],
                                51: [2, 117],
                                52: [2, 117],
                                73: [2, 117],
                                76: [2, 117],
                                79: [2, 117],
                                83: [2, 117],
                                88: [2, 117],
                                89: [2, 117],
                                90: [2, 117],
                                96: [2, 117],
                                100: [2, 117],
                                101: [2, 117],
                                104: [2, 117],
                                106: [2, 117],
                                108: [2, 117],
                                110: [2, 117],
                                119: [2, 117],
                                125: [2, 117],
                                127: [2, 117],
                                128: [2, 117],
                                129: [2, 117],
                                130: [2, 117],
                                131: [2, 117],
                                132: [2, 117]
                            }, {
                                11: [2, 118],
                                28: [2, 118],
                                30: [2, 118],
                                31: [2, 118],
                                33: [2, 118],
                                34: [2, 118],
                                35: [2, 118],
                                36: [2, 118],
                                37: [2, 118],
                                38: [2, 118],
                                45: [2, 118],
                                46: [2, 118],
                                47: [2, 118],
                                51: [2, 118],
                                52: [2, 118],
                                73: [2, 118],
                                76: [2, 118],
                                79: [2, 118],
                                83: [2, 118],
                                88: [2, 118],
                                89: [2, 118],
                                90: [2, 118],
                                96: [2, 118],
                                100: [2, 118],
                                101: [2, 118],
                                104: [2, 118],
                                106: [2, 118],
                                108: [2, 118],
                                110: [2, 118],
                                119: [2, 118],
                                125: [2, 118],
                                127: [2, 118],
                                128: [2, 118],
                                129: [2, 118],
                                130: [2, 118],
                                131: [2, 118],
                                132: [2, 118]
                            }, {
                                1: [2, 87],
                                6: [2, 87],
                                25: [2, 87],
                                26: [2, 87],
                                40: [2, 87],
                                49: [2, 87],
                                54: [2, 87],
                                57: [2, 87],
                                66: [2, 87],
                                67: [2, 87],
                                68: [2, 87],
                                69: [2, 87],
                                71: [2, 87],
                                73: [2, 87],
                                74: [2, 87],
                                78: [2, 87],
                                80: [2, 87],
                                84: [2, 87],
                                85: [2, 87],
                                86: [2, 87],
                                91: [2, 87],
                                93: [2, 87],
                                102: [2, 87],
                                104: [2, 87],
                                105: [2, 87],
                                106: [2, 87],
                                110: [2, 87],
                                118: [2, 87],
                                126: [2, 87],
                                129: [2, 87],
                                130: [2, 87],
                                131: [2, 87],
                                132: [2, 87],
                                133: [2, 87],
                                134: [2, 87],
                                135: [2, 87],
                                136: [2, 87],
                                137: [2, 87],
                                138: [2, 87],
                                139: [2, 87],
                                140: [2, 87]
                            }, {
                                1: [2, 105],
                                6: [2, 105],
                                25: [2, 105],
                                26: [2, 105],
                                49: [2, 105],
                                54: [2, 105],
                                57: [2, 105],
                                66: [2, 105],
                                67: [2, 105],
                                68: [2, 105],
                                69: [2, 105],
                                71: [2, 105],
                                73: [2, 105],
                                74: [2, 105],
                                78: [2, 105],
                                84: [2, 105],
                                85: [2, 105],
                                86: [2, 105],
                                91: [2, 105],
                                93: [2, 105],
                                102: [2, 105],
                                104: [2, 105],
                                105: [2, 105],
                                106: [2, 105],
                                110: [2, 105],
                                118: [2, 105],
                                126: [2, 105],
                                129: [2, 105],
                                130: [2, 105],
                                133: [2, 105],
                                134: [2, 105],
                                135: [2, 105],
                                136: [2, 105],
                                137: [2, 105],
                                138: [2, 105],
                                139: [2, 105]
                            }, {
                                1: [2, 35],
                                6: [2, 35],
                                25: [2, 35],
                                26: [2, 35],
                                49: [2, 35],
                                54: [2, 35],
                                57: [2, 35],
                                73: [2, 35],
                                78: [2, 35],
                                86: [2, 35],
                                91: [2, 35],
                                93: [2, 35],
                                102: [2, 35],
                                103: 84,
                                104: [2, 35],
                                105: [2, 35],
                                106: [2, 35],
                                109: 85,
                                110: [2, 35],
                                111: 68,
                                118: [2, 35],
                                126: [2, 35],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                7: 247,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 248,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 110],
                                6: [2, 110],
                                25: [2, 110],
                                26: [2, 110],
                                49: [2, 110],
                                54: [2, 110],
                                57: [2, 110],
                                66: [2, 110],
                                67: [2, 110],
                                68: [2, 110],
                                69: [2, 110],
                                71: [2, 110],
                                73: [2, 110],
                                74: [2, 110],
                                78: [2, 110],
                                84: [2, 110],
                                85: [2, 110],
                                86: [2, 110],
                                91: [2, 110],
                                93: [2, 110],
                                102: [2, 110],
                                104: [2, 110],
                                105: [2, 110],
                                106: [2, 110],
                                110: [2, 110],
                                118: [2, 110],
                                126: [2, 110],
                                129: [2, 110],
                                130: [2, 110],
                                133: [2, 110],
                                134: [2, 110],
                                135: [2, 110],
                                136: [2, 110],
                                137: [2, 110],
                                138: [2, 110],
                                139: [2, 110]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                53: 249,
                                54: [1, 232],
                                86: [2, 52]
                            }, {
                                6: [2, 129],
                                25: [2, 129],
                                26: [2, 129],
                                54: [2, 129],
                                57: [1, 250],
                                86: [2, 129],
                                91: [2, 129],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                50: 251,
                                51: [1, 59],
                                52: [1, 60]
                            }, {
                                6: [2, 53],
                                25: [2, 53],
                                26: [2, 53],
                                27: 108,
                                28: [1, 72],
                                44: 109,
                                55: 252,
                                56: 106,
                                57: [1, 107],
                                58: 110,
                                59: 111,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113]
                            }, {
                                6: [1, 253],
                                25: [1, 254]
                            }, {
                                6: [2, 60],
                                25: [2, 60],
                                26: [2, 60],
                                49: [2, 60],
                                54: [2, 60]
                            }, {
                                7: 255,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 23],
                                6: [2, 23],
                                25: [2, 23],
                                26: [2, 23],
                                49: [2, 23],
                                54: [2, 23],
                                57: [2, 23],
                                73: [2, 23],
                                78: [2, 23],
                                86: [2, 23],
                                91: [2, 23],
                                93: [2, 23],
                                98: [2, 23],
                                99: [2, 23],
                                102: [2, 23],
                                104: [2, 23],
                                105: [2, 23],
                                106: [2, 23],
                                110: [2, 23],
                                118: [2, 23],
                                121: [2, 23],
                                123: [2, 23],
                                126: [2, 23],
                                129: [2, 23],
                                130: [2, 23],
                                133: [2, 23],
                                134: [2, 23],
                                135: [2, 23],
                                136: [2, 23],
                                137: [2, 23],
                                138: [2, 23],
                                139: [2, 23]
                            }, {
                                6: [1, 73],
                                26: [1, 256]
                            }, {
                                1: [2, 205],
                                6: [2, 205],
                                25: [2, 205],
                                26: [2, 205],
                                49: [2, 205],
                                54: [2, 205],
                                57: [2, 205],
                                73: [2, 205],
                                78: [2, 205],
                                86: [2, 205],
                                91: [2, 205],
                                93: [2, 205],
                                102: [2, 205],
                                103: 84,
                                104: [2, 205],
                                105: [2, 205],
                                106: [2, 205],
                                109: 85,
                                110: [2, 205],
                                111: 68,
                                118: [2, 205],
                                126: [2, 205],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                7: 257,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 258,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 208],
                                6: [2, 208],
                                25: [2, 208],
                                26: [2, 208],
                                49: [2, 208],
                                54: [2, 208],
                                57: [2, 208],
                                73: [2, 208],
                                78: [2, 208],
                                86: [2, 208],
                                91: [2, 208],
                                93: [2, 208],
                                102: [2, 208],
                                103: 84,
                                104: [2, 208],
                                105: [2, 208],
                                106: [2, 208],
                                109: 85,
                                110: [2, 208],
                                111: 68,
                                118: [2, 208],
                                126: [2, 208],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 185],
                                6: [2, 185],
                                25: [2, 185],
                                26: [2, 185],
                                49: [2, 185],
                                54: [2, 185],
                                57: [2, 185],
                                73: [2, 185],
                                78: [2, 185],
                                86: [2, 185],
                                91: [2, 185],
                                93: [2, 185],
                                102: [2, 185],
                                104: [2, 185],
                                105: [2, 185],
                                106: [2, 185],
                                110: [2, 185],
                                118: [2, 185],
                                126: [2, 185],
                                129: [2, 185],
                                130: [2, 185],
                                133: [2, 185],
                                134: [2, 185],
                                135: [2, 185],
                                136: [2, 185],
                                137: [2, 185],
                                138: [2, 185],
                                139: [2, 185]
                            }, {
                                7: 259,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 135],
                                6: [2, 135],
                                25: [2, 135],
                                26: [2, 135],
                                49: [2, 135],
                                54: [2, 135],
                                57: [2, 135],
                                73: [2, 135],
                                78: [2, 135],
                                86: [2, 135],
                                91: [2, 135],
                                93: [2, 135],
                                98: [1, 260],
                                102: [2, 135],
                                104: [2, 135],
                                105: [2, 135],
                                106: [2, 135],
                                110: [2, 135],
                                118: [2, 135],
                                126: [2, 135],
                                129: [2, 135],
                                130: [2, 135],
                                133: [2, 135],
                                134: [2, 135],
                                135: [2, 135],
                                136: [2, 135],
                                137: [2, 135],
                                138: [2, 135],
                                139: [2, 135]
                            }, {
                                24: 261,
                                25: [1, 115]
                            }, {
                                24: 264,
                                25: [1, 115],
                                27: 262,
                                28: [1, 72],
                                59: 263,
                                76: [1, 69]
                            }, {
                                120: 265,
                                122: 222,
                                123: [1, 223]
                            }, {
                                26: [1, 266],
                                121: [1, 267],
                                122: 268,
                                123: [1, 223]
                            }, {
                                26: [2, 178],
                                121: [2, 178],
                                123: [2, 178]
                            }, {
                                7: 270,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                95: 269,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 98],
                                6: [2, 98],
                                24: 271,
                                25: [1, 115],
                                26: [2, 98],
                                49: [2, 98],
                                54: [2, 98],
                                57: [2, 98],
                                73: [2, 98],
                                78: [2, 98],
                                86: [2, 98],
                                91: [2, 98],
                                93: [2, 98],
                                102: [2, 98],
                                103: 84,
                                104: [1, 64],
                                105: [2, 98],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 98],
                                126: [2, 98],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 101],
                                6: [2, 101],
                                25: [2, 101],
                                26: [2, 101],
                                49: [2, 101],
                                54: [2, 101],
                                57: [2, 101],
                                73: [2, 101],
                                78: [2, 101],
                                86: [2, 101],
                                91: [2, 101],
                                93: [2, 101],
                                102: [2, 101],
                                104: [2, 101],
                                105: [2, 101],
                                106: [2, 101],
                                110: [2, 101],
                                118: [2, 101],
                                126: [2, 101],
                                129: [2, 101],
                                130: [2, 101],
                                133: [2, 101],
                                134: [2, 101],
                                135: [2, 101],
                                136: [2, 101],
                                137: [2, 101],
                                138: [2, 101],
                                139: [2, 101]
                            }, {
                                7: 272,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 142],
                                6: [2, 142],
                                25: [2, 142],
                                26: [2, 142],
                                49: [2, 142],
                                54: [2, 142],
                                57: [2, 142],
                                66: [2, 142],
                                67: [2, 142],
                                68: [2, 142],
                                69: [2, 142],
                                71: [2, 142],
                                73: [2, 142],
                                74: [2, 142],
                                78: [2, 142],
                                84: [2, 142],
                                85: [2, 142],
                                86: [2, 142],
                                91: [2, 142],
                                93: [2, 142],
                                102: [2, 142],
                                104: [2, 142],
                                105: [2, 142],
                                106: [2, 142],
                                110: [2, 142],
                                118: [2, 142],
                                126: [2, 142],
                                129: [2, 142],
                                130: [2, 142],
                                133: [2, 142],
                                134: [2, 142],
                                135: [2, 142],
                                136: [2, 142],
                                137: [2, 142],
                                138: [2, 142],
                                139: [2, 142]
                            }, {
                                6: [1, 73],
                                26: [1, 273]
                            }, {
                                7: 274,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 67],
                                11: [2, 118],
                                25: [2, 67],
                                28: [2, 118],
                                30: [2, 118],
                                31: [2, 118],
                                33: [2, 118],
                                34: [2, 118],
                                35: [2, 118],
                                36: [2, 118],
                                37: [2, 118],
                                38: [2, 118],
                                45: [2, 118],
                                46: [2, 118],
                                47: [2, 118],
                                51: [2, 118],
                                52: [2, 118],
                                54: [2, 67],
                                76: [2, 118],
                                79: [2, 118],
                                83: [2, 118],
                                88: [2, 118],
                                89: [2, 118],
                                90: [2, 118],
                                91: [2, 67],
                                96: [2, 118],
                                100: [2, 118],
                                101: [2, 118],
                                104: [2, 118],
                                106: [2, 118],
                                108: [2, 118],
                                110: [2, 118],
                                119: [2, 118],
                                125: [2, 118],
                                127: [2, 118],
                                128: [2, 118],
                                129: [2, 118],
                                130: [2, 118],
                                131: [2, 118],
                                132: [2, 118]
                            }, {
                                6: [1, 276],
                                25: [1, 277],
                                91: [1, 275]
                            }, {
                                6: [2, 53],
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [2, 53],
                                26: [2, 53],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                86: [2, 53],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                91: [2, 53],
                                94: 278,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                26: [2, 52],
                                53: 279,
                                54: [1, 232]
                            }, {
                                1: [2, 182],
                                6: [2, 182],
                                25: [2, 182],
                                26: [2, 182],
                                49: [2, 182],
                                54: [2, 182],
                                57: [2, 182],
                                73: [2, 182],
                                78: [2, 182],
                                86: [2, 182],
                                91: [2, 182],
                                93: [2, 182],
                                102: [2, 182],
                                104: [2, 182],
                                105: [2, 182],
                                106: [2, 182],
                                110: [2, 182],
                                118: [2, 182],
                                121: [2, 182],
                                126: [2, 182],
                                129: [2, 182],
                                130: [2, 182],
                                133: [2, 182],
                                134: [2, 182],
                                135: [2, 182],
                                136: [2, 182],
                                137: [2, 182],
                                138: [2, 182],
                                139: [2, 182]
                            }, {
                                7: 280,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 281,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                116: [2, 160],
                                117: [2, 160]
                            }, {
                                27: 160,
                                28: [1, 72],
                                44: 161,
                                58: 162,
                                59: 163,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113],
                                115: 282
                            }, {
                                1: [2, 167],
                                6: [2, 167],
                                25: [2, 167],
                                26: [2, 167],
                                49: [2, 167],
                                54: [2, 167],
                                57: [2, 167],
                                73: [2, 167],
                                78: [2, 167],
                                86: [2, 167],
                                91: [2, 167],
                                93: [2, 167],
                                102: [2, 167],
                                103: 84,
                                104: [2, 167],
                                105: [1, 283],
                                106: [2, 167],
                                109: 85,
                                110: [2, 167],
                                111: 68,
                                118: [1, 284],
                                126: [2, 167],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 168],
                                6: [2, 168],
                                25: [2, 168],
                                26: [2, 168],
                                49: [2, 168],
                                54: [2, 168],
                                57: [2, 168],
                                73: [2, 168],
                                78: [2, 168],
                                86: [2, 168],
                                91: [2, 168],
                                93: [2, 168],
                                102: [2, 168],
                                103: 84,
                                104: [2, 168],
                                105: [1, 285],
                                106: [2, 168],
                                109: 85,
                                110: [2, 168],
                                111: 68,
                                118: [2, 168],
                                126: [2, 168],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [1, 287],
                                25: [1, 288],
                                78: [1, 286]
                            }, {
                                6: [2, 53],
                                10: 170,
                                25: [2, 53],
                                26: [2, 53],
                                27: 171,
                                28: [1, 72],
                                29: 172,
                                30: [1, 70],
                                31: [1, 71],
                                41: 289,
                                42: 169,
                                44: 173,
                                46: [1, 45],
                                78: [2, 53],
                                89: [1, 112]
                            }, {
                                7: 290,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 291],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 86],
                                6: [2, 86],
                                25: [2, 86],
                                26: [2, 86],
                                40: [2, 86],
                                49: [2, 86],
                                54: [2, 86],
                                57: [2, 86],
                                66: [2, 86],
                                67: [2, 86],
                                68: [2, 86],
                                69: [2, 86],
                                71: [2, 86],
                                73: [2, 86],
                                74: [2, 86],
                                78: [2, 86],
                                80: [2, 86],
                                84: [2, 86],
                                85: [2, 86],
                                86: [2, 86],
                                91: [2, 86],
                                93: [2, 86],
                                102: [2, 86],
                                104: [2, 86],
                                105: [2, 86],
                                106: [2, 86],
                                110: [2, 86],
                                118: [2, 86],
                                126: [2, 86],
                                129: [2, 86],
                                130: [2, 86],
                                131: [2, 86],
                                132: [2, 86],
                                133: [2, 86],
                                134: [2, 86],
                                135: [2, 86],
                                136: [2, 86],
                                137: [2, 86],
                                138: [2, 86],
                                139: [2, 86],
                                140: [2, 86]
                            }, {
                                7: 292,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                73: [2, 121],
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                73: [2, 122],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 36],
                                6: [2, 36],
                                25: [2, 36],
                                26: [2, 36],
                                49: [2, 36],
                                54: [2, 36],
                                57: [2, 36],
                                73: [2, 36],
                                78: [2, 36],
                                86: [2, 36],
                                91: [2, 36],
                                93: [2, 36],
                                102: [2, 36],
                                103: 84,
                                104: [2, 36],
                                105: [2, 36],
                                106: [2, 36],
                                109: 85,
                                110: [2, 36],
                                111: 68,
                                118: [2, 36],
                                126: [2, 36],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                26: [1, 293],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [1, 276],
                                25: [1, 277],
                                86: [1, 294]
                            }, {
                                6: [2, 67],
                                25: [2, 67],
                                26: [2, 67],
                                54: [2, 67],
                                86: [2, 67],
                                91: [2, 67]
                            }, {
                                24: 295,
                                25: [1, 115]
                            }, {
                                6: [2, 56],
                                25: [2, 56],
                                26: [2, 56],
                                49: [2, 56],
                                54: [2, 56]
                            }, {
                                27: 108,
                                28: [1, 72],
                                44: 109,
                                55: 296,
                                56: 106,
                                57: [1, 107],
                                58: 110,
                                59: 111,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113]
                            }, {
                                6: [2, 54],
                                25: [2, 54],
                                26: [2, 54],
                                27: 108,
                                28: [1, 72],
                                44: 109,
                                48: 297,
                                54: [2, 54],
                                55: 105,
                                56: 106,
                                57: [1, 107],
                                58: 110,
                                59: 111,
                                76: [1, 69],
                                89: [1, 112],
                                90: [1, 113]
                            }, {
                                6: [2, 61],
                                25: [2, 61],
                                26: [2, 61],
                                49: [2, 61],
                                54: [2, 61],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 24],
                                6: [2, 24],
                                25: [2, 24],
                                26: [2, 24],
                                49: [2, 24],
                                54: [2, 24],
                                57: [2, 24],
                                73: [2, 24],
                                78: [2, 24],
                                86: [2, 24],
                                91: [2, 24],
                                93: [2, 24],
                                98: [2, 24],
                                99: [2, 24],
                                102: [2, 24],
                                104: [2, 24],
                                105: [2, 24],
                                106: [2, 24],
                                110: [2, 24],
                                118: [2, 24],
                                121: [2, 24],
                                123: [2, 24],
                                126: [2, 24],
                                129: [2, 24],
                                130: [2, 24],
                                133: [2, 24],
                                134: [2, 24],
                                135: [2, 24],
                                136: [2, 24],
                                137: [2, 24],
                                138: [2, 24],
                                139: [2, 24]
                            }, {
                                26: [1, 298],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 207],
                                6: [2, 207],
                                25: [2, 207],
                                26: [2, 207],
                                49: [2, 207],
                                54: [2, 207],
                                57: [2, 207],
                                73: [2, 207],
                                78: [2, 207],
                                86: [2, 207],
                                91: [2, 207],
                                93: [2, 207],
                                102: [2, 207],
                                103: 84,
                                104: [2, 207],
                                105: [2, 207],
                                106: [2, 207],
                                109: 85,
                                110: [2, 207],
                                111: 68,
                                118: [2, 207],
                                126: [2, 207],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                24: 299,
                                25: [1, 115],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                24: 300,
                                25: [1, 115]
                            }, {
                                1: [2, 136],
                                6: [2, 136],
                                25: [2, 136],
                                26: [2, 136],
                                49: [2, 136],
                                54: [2, 136],
                                57: [2, 136],
                                73: [2, 136],
                                78: [2, 136],
                                86: [2, 136],
                                91: [2, 136],
                                93: [2, 136],
                                102: [2, 136],
                                104: [2, 136],
                                105: [2, 136],
                                106: [2, 136],
                                110: [2, 136],
                                118: [2, 136],
                                126: [2, 136],
                                129: [2, 136],
                                130: [2, 136],
                                133: [2, 136],
                                134: [2, 136],
                                135: [2, 136],
                                136: [2, 136],
                                137: [2, 136],
                                138: [2, 136],
                                139: [2, 136]
                            }, {
                                24: 301,
                                25: [1, 115]
                            }, {
                                24: 302,
                                25: [1, 115]
                            }, {
                                1: [2, 140],
                                6: [2, 140],
                                25: [2, 140],
                                26: [2, 140],
                                49: [2, 140],
                                54: [2, 140],
                                57: [2, 140],
                                73: [2, 140],
                                78: [2, 140],
                                86: [2, 140],
                                91: [2, 140],
                                93: [2, 140],
                                98: [2, 140],
                                102: [2, 140],
                                104: [2, 140],
                                105: [2, 140],
                                106: [2, 140],
                                110: [2, 140],
                                118: [2, 140],
                                126: [2, 140],
                                129: [2, 140],
                                130: [2, 140],
                                133: [2, 140],
                                134: [2, 140],
                                135: [2, 140],
                                136: [2, 140],
                                137: [2, 140],
                                138: [2, 140],
                                139: [2, 140]
                            }, {
                                26: [1, 303],
                                121: [1, 304],
                                122: 268,
                                123: [1, 223]
                            }, {
                                1: [2, 176],
                                6: [2, 176],
                                25: [2, 176],
                                26: [2, 176],
                                49: [2, 176],
                                54: [2, 176],
                                57: [2, 176],
                                73: [2, 176],
                                78: [2, 176],
                                86: [2, 176],
                                91: [2, 176],
                                93: [2, 176],
                                102: [2, 176],
                                104: [2, 176],
                                105: [2, 176],
                                106: [2, 176],
                                110: [2, 176],
                                118: [2, 176],
                                126: [2, 176],
                                129: [2, 176],
                                130: [2, 176],
                                133: [2, 176],
                                134: [2, 176],
                                135: [2, 176],
                                136: [2, 176],
                                137: [2, 176],
                                138: [2, 176],
                                139: [2, 176]
                            }, {
                                24: 305,
                                25: [1, 115]
                            }, {
                                26: [2, 179],
                                121: [2, 179],
                                123: [2, 179]
                            }, {
                                24: 306,
                                25: [1, 115],
                                54: [1, 307]
                            }, {
                                25: [2, 132],
                                54: [2, 132],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 99],
                                6: [2, 99],
                                25: [2, 99],
                                26: [2, 99],
                                49: [2, 99],
                                54: [2, 99],
                                57: [2, 99],
                                73: [2, 99],
                                78: [2, 99],
                                86: [2, 99],
                                91: [2, 99],
                                93: [2, 99],
                                102: [2, 99],
                                104: [2, 99],
                                105: [2, 99],
                                106: [2, 99],
                                110: [2, 99],
                                118: [2, 99],
                                126: [2, 99],
                                129: [2, 99],
                                130: [2, 99],
                                133: [2, 99],
                                134: [2, 99],
                                135: [2, 99],
                                136: [2, 99],
                                137: [2, 99],
                                138: [2, 99],
                                139: [2, 99]
                            }, {
                                1: [2, 102],
                                6: [2, 102],
                                24: 308,
                                25: [1, 115],
                                26: [2, 102],
                                49: [2, 102],
                                54: [2, 102],
                                57: [2, 102],
                                73: [2, 102],
                                78: [2, 102],
                                86: [2, 102],
                                91: [2, 102],
                                93: [2, 102],
                                102: [2, 102],
                                103: 84,
                                104: [1, 64],
                                105: [2, 102],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 102],
                                126: [2, 102],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                102: [1, 309]
                            }, {
                                91: [1, 310],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 116],
                                6: [2, 116],
                                25: [2, 116],
                                26: [2, 116],
                                40: [2, 116],
                                49: [2, 116],
                                54: [2, 116],
                                57: [2, 116],
                                66: [2, 116],
                                67: [2, 116],
                                68: [2, 116],
                                69: [2, 116],
                                71: [2, 116],
                                73: [2, 116],
                                74: [2, 116],
                                78: [2, 116],
                                84: [2, 116],
                                85: [2, 116],
                                86: [2, 116],
                                91: [2, 116],
                                93: [2, 116],
                                102: [2, 116],
                                104: [2, 116],
                                105: [2, 116],
                                106: [2, 116],
                                110: [2, 116],
                                116: [2, 116],
                                117: [2, 116],
                                118: [2, 116],
                                126: [2, 116],
                                129: [2, 116],
                                130: [2, 116],
                                133: [2, 116],
                                134: [2, 116],
                                135: [2, 116],
                                136: [2, 116],
                                137: [2, 116],
                                138: [2, 116],
                                139: [2, 116]
                            }, {
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                94: 311,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 203,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                25: [1, 147],
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                57: [1, 149],
                                58: 46,
                                59: 47,
                                60: 148,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                87: 312,
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                94: 146,
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [2, 125],
                                25: [2, 125],
                                26: [2, 125],
                                54: [2, 125],
                                86: [2, 125],
                                91: [2, 125]
                            }, {
                                6: [1, 276],
                                25: [1, 277],
                                26: [1, 313]
                            }, {
                                1: [2, 145],
                                6: [2, 145],
                                25: [2, 145],
                                26: [2, 145],
                                49: [2, 145],
                                54: [2, 145],
                                57: [2, 145],
                                73: [2, 145],
                                78: [2, 145],
                                86: [2, 145],
                                91: [2, 145],
                                93: [2, 145],
                                102: [2, 145],
                                103: 84,
                                104: [1, 64],
                                105: [2, 145],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 145],
                                126: [2, 145],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 147],
                                6: [2, 147],
                                25: [2, 147],
                                26: [2, 147],
                                49: [2, 147],
                                54: [2, 147],
                                57: [2, 147],
                                73: [2, 147],
                                78: [2, 147],
                                86: [2, 147],
                                91: [2, 147],
                                93: [2, 147],
                                102: [2, 147],
                                103: 84,
                                104: [1, 64],
                                105: [2, 147],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                118: [2, 147],
                                126: [2, 147],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                116: [2, 166],
                                117: [2, 166]
                            }, {
                                7: 314,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 315,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 316,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 90],
                                6: [2, 90],
                                25: [2, 90],
                                26: [2, 90],
                                40: [2, 90],
                                49: [2, 90],
                                54: [2, 90],
                                57: [2, 90],
                                66: [2, 90],
                                67: [2, 90],
                                68: [2, 90],
                                69: [2, 90],
                                71: [2, 90],
                                73: [2, 90],
                                74: [2, 90],
                                78: [2, 90],
                                84: [2, 90],
                                85: [2, 90],
                                86: [2, 90],
                                91: [2, 90],
                                93: [2, 90],
                                102: [2, 90],
                                104: [2, 90],
                                105: [2, 90],
                                106: [2, 90],
                                110: [2, 90],
                                116: [2, 90],
                                117: [2, 90],
                                118: [2, 90],
                                126: [2, 90],
                                129: [2, 90],
                                130: [2, 90],
                                133: [2, 90],
                                134: [2, 90],
                                135: [2, 90],
                                136: [2, 90],
                                137: [2, 90],
                                138: [2, 90],
                                139: [2, 90]
                            }, {
                                10: 170,
                                27: 171,
                                28: [1, 72],
                                29: 172,
                                30: [1, 70],
                                31: [1, 71],
                                41: 317,
                                42: 169,
                                44: 173,
                                46: [1, 45],
                                89: [1, 112]
                            }, {
                                6: [2, 91],
                                10: 170,
                                25: [2, 91],
                                26: [2, 91],
                                27: 171,
                                28: [1, 72],
                                29: 172,
                                30: [1, 70],
                                31: [1, 71],
                                41: 168,
                                42: 169,
                                44: 173,
                                46: [1, 45],
                                54: [2, 91],
                                77: 318,
                                89: [1, 112]
                            }, {
                                6: [2, 93],
                                25: [2, 93],
                                26: [2, 93],
                                54: [2, 93],
                                78: [2, 93]
                            }, {
                                6: [2, 39],
                                25: [2, 39],
                                26: [2, 39],
                                54: [2, 39],
                                78: [2, 39],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                7: 319,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                73: [2, 120],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 37],
                                6: [2, 37],
                                25: [2, 37],
                                26: [2, 37],
                                49: [2, 37],
                                54: [2, 37],
                                57: [2, 37],
                                73: [2, 37],
                                78: [2, 37],
                                86: [2, 37],
                                91: [2, 37],
                                93: [2, 37],
                                102: [2, 37],
                                104: [2, 37],
                                105: [2, 37],
                                106: [2, 37],
                                110: [2, 37],
                                118: [2, 37],
                                126: [2, 37],
                                129: [2, 37],
                                130: [2, 37],
                                133: [2, 37],
                                134: [2, 37],
                                135: [2, 37],
                                136: [2, 37],
                                137: [2, 37],
                                138: [2, 37],
                                139: [2, 37]
                            }, {
                                1: [2, 111],
                                6: [2, 111],
                                25: [2, 111],
                                26: [2, 111],
                                49: [2, 111],
                                54: [2, 111],
                                57: [2, 111],
                                66: [2, 111],
                                67: [2, 111],
                                68: [2, 111],
                                69: [2, 111],
                                71: [2, 111],
                                73: [2, 111],
                                74: [2, 111],
                                78: [2, 111],
                                84: [2, 111],
                                85: [2, 111],
                                86: [2, 111],
                                91: [2, 111],
                                93: [2, 111],
                                102: [2, 111],
                                104: [2, 111],
                                105: [2, 111],
                                106: [2, 111],
                                110: [2, 111],
                                118: [2, 111],
                                126: [2, 111],
                                129: [2, 111],
                                130: [2, 111],
                                133: [2, 111],
                                134: [2, 111],
                                135: [2, 111],
                                136: [2, 111],
                                137: [2, 111],
                                138: [2, 111],
                                139: [2, 111]
                            }, {
                                1: [2, 48],
                                6: [2, 48],
                                25: [2, 48],
                                26: [2, 48],
                                49: [2, 48],
                                54: [2, 48],
                                57: [2, 48],
                                73: [2, 48],
                                78: [2, 48],
                                86: [2, 48],
                                91: [2, 48],
                                93: [2, 48],
                                102: [2, 48],
                                104: [2, 48],
                                105: [2, 48],
                                106: [2, 48],
                                110: [2, 48],
                                118: [2, 48],
                                126: [2, 48],
                                129: [2, 48],
                                130: [2, 48],
                                133: [2, 48],
                                134: [2, 48],
                                135: [2, 48],
                                136: [2, 48],
                                137: [2, 48],
                                138: [2, 48],
                                139: [2, 48]
                            }, {
                                6: [2, 57],
                                25: [2, 57],
                                26: [2, 57],
                                49: [2, 57],
                                54: [2, 57]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                26: [2, 52],
                                53: 320,
                                54: [1, 205]
                            }, {
                                1: [2, 206],
                                6: [2, 206],
                                25: [2, 206],
                                26: [2, 206],
                                49: [2, 206],
                                54: [2, 206],
                                57: [2, 206],
                                73: [2, 206],
                                78: [2, 206],
                                86: [2, 206],
                                91: [2, 206],
                                93: [2, 206],
                                102: [2, 206],
                                104: [2, 206],
                                105: [2, 206],
                                106: [2, 206],
                                110: [2, 206],
                                118: [2, 206],
                                126: [2, 206],
                                129: [2, 206],
                                130: [2, 206],
                                133: [2, 206],
                                134: [2, 206],
                                135: [2, 206],
                                136: [2, 206],
                                137: [2, 206],
                                138: [2, 206],
                                139: [2, 206]
                            }, {
                                1: [2, 183],
                                6: [2, 183],
                                25: [2, 183],
                                26: [2, 183],
                                49: [2, 183],
                                54: [2, 183],
                                57: [2, 183],
                                73: [2, 183],
                                78: [2, 183],
                                86: [2, 183],
                                91: [2, 183],
                                93: [2, 183],
                                102: [2, 183],
                                104: [2, 183],
                                105: [2, 183],
                                106: [2, 183],
                                110: [2, 183],
                                118: [2, 183],
                                121: [2, 183],
                                126: [2, 183],
                                129: [2, 183],
                                130: [2, 183],
                                133: [2, 183],
                                134: [2, 183],
                                135: [2, 183],
                                136: [2, 183],
                                137: [2, 183],
                                138: [2, 183],
                                139: [2, 183]
                            }, {
                                1: [2, 137],
                                6: [2, 137],
                                25: [2, 137],
                                26: [2, 137],
                                49: [2, 137],
                                54: [2, 137],
                                57: [2, 137],
                                73: [2, 137],
                                78: [2, 137],
                                86: [2, 137],
                                91: [2, 137],
                                93: [2, 137],
                                102: [2, 137],
                                104: [2, 137],
                                105: [2, 137],
                                106: [2, 137],
                                110: [2, 137],
                                118: [2, 137],
                                126: [2, 137],
                                129: [2, 137],
                                130: [2, 137],
                                133: [2, 137],
                                134: [2, 137],
                                135: [2, 137],
                                136: [2, 137],
                                137: [2, 137],
                                138: [2, 137],
                                139: [2, 137]
                            }, {
                                1: [2, 138],
                                6: [2, 138],
                                25: [2, 138],
                                26: [2, 138],
                                49: [2, 138],
                                54: [2, 138],
                                57: [2, 138],
                                73: [2, 138],
                                78: [2, 138],
                                86: [2, 138],
                                91: [2, 138],
                                93: [2, 138],
                                98: [2, 138],
                                102: [2, 138],
                                104: [2, 138],
                                105: [2, 138],
                                106: [2, 138],
                                110: [2, 138],
                                118: [2, 138],
                                126: [2, 138],
                                129: [2, 138],
                                130: [2, 138],
                                133: [2, 138],
                                134: [2, 138],
                                135: [2, 138],
                                136: [2, 138],
                                137: [2, 138],
                                138: [2, 138],
                                139: [2, 138]
                            }, {
                                1: [2, 139],
                                6: [2, 139],
                                25: [2, 139],
                                26: [2, 139],
                                49: [2, 139],
                                54: [2, 139],
                                57: [2, 139],
                                73: [2, 139],
                                78: [2, 139],
                                86: [2, 139],
                                91: [2, 139],
                                93: [2, 139],
                                98: [2, 139],
                                102: [2, 139],
                                104: [2, 139],
                                105: [2, 139],
                                106: [2, 139],
                                110: [2, 139],
                                118: [2, 139],
                                126: [2, 139],
                                129: [2, 139],
                                130: [2, 139],
                                133: [2, 139],
                                134: [2, 139],
                                135: [2, 139],
                                136: [2, 139],
                                137: [2, 139],
                                138: [2, 139],
                                139: [2, 139]
                            }, {
                                1: [2, 174],
                                6: [2, 174],
                                25: [2, 174],
                                26: [2, 174],
                                49: [2, 174],
                                54: [2, 174],
                                57: [2, 174],
                                73: [2, 174],
                                78: [2, 174],
                                86: [2, 174],
                                91: [2, 174],
                                93: [2, 174],
                                102: [2, 174],
                                104: [2, 174],
                                105: [2, 174],
                                106: [2, 174],
                                110: [2, 174],
                                118: [2, 174],
                                126: [2, 174],
                                129: [2, 174],
                                130: [2, 174],
                                133: [2, 174],
                                134: [2, 174],
                                135: [2, 174],
                                136: [2, 174],
                                137: [2, 174],
                                138: [2, 174],
                                139: [2, 174]
                            }, {
                                24: 321,
                                25: [1, 115]
                            }, {
                                26: [1, 322]
                            }, {
                                6: [1, 323],
                                26: [2, 180],
                                121: [2, 180],
                                123: [2, 180]
                            }, {
                                7: 324,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                1: [2, 103],
                                6: [2, 103],
                                25: [2, 103],
                                26: [2, 103],
                                49: [2, 103],
                                54: [2, 103],
                                57: [2, 103],
                                73: [2, 103],
                                78: [2, 103],
                                86: [2, 103],
                                91: [2, 103],
                                93: [2, 103],
                                102: [2, 103],
                                104: [2, 103],
                                105: [2, 103],
                                106: [2, 103],
                                110: [2, 103],
                                118: [2, 103],
                                126: [2, 103],
                                129: [2, 103],
                                130: [2, 103],
                                133: [2, 103],
                                134: [2, 103],
                                135: [2, 103],
                                136: [2, 103],
                                137: [2, 103],
                                138: [2, 103],
                                139: [2, 103]
                            }, {
                                1: [2, 143],
                                6: [2, 143],
                                25: [2, 143],
                                26: [2, 143],
                                49: [2, 143],
                                54: [2, 143],
                                57: [2, 143],
                                66: [2, 143],
                                67: [2, 143],
                                68: [2, 143],
                                69: [2, 143],
                                71: [2, 143],
                                73: [2, 143],
                                74: [2, 143],
                                78: [2, 143],
                                84: [2, 143],
                                85: [2, 143],
                                86: [2, 143],
                                91: [2, 143],
                                93: [2, 143],
                                102: [2, 143],
                                104: [2, 143],
                                105: [2, 143],
                                106: [2, 143],
                                110: [2, 143],
                                118: [2, 143],
                                126: [2, 143],
                                129: [2, 143],
                                130: [2, 143],
                                133: [2, 143],
                                134: [2, 143],
                                135: [2, 143],
                                136: [2, 143],
                                137: [2, 143],
                                138: [2, 143],
                                139: [2, 143]
                            }, {
                                1: [2, 119],
                                6: [2, 119],
                                25: [2, 119],
                                26: [2, 119],
                                49: [2, 119],
                                54: [2, 119],
                                57: [2, 119],
                                66: [2, 119],
                                67: [2, 119],
                                68: [2, 119],
                                69: [2, 119],
                                71: [2, 119],
                                73: [2, 119],
                                74: [2, 119],
                                78: [2, 119],
                                84: [2, 119],
                                85: [2, 119],
                                86: [2, 119],
                                91: [2, 119],
                                93: [2, 119],
                                102: [2, 119],
                                104: [2, 119],
                                105: [2, 119],
                                106: [2, 119],
                                110: [2, 119],
                                118: [2, 119],
                                126: [2, 119],
                                129: [2, 119],
                                130: [2, 119],
                                133: [2, 119],
                                134: [2, 119],
                                135: [2, 119],
                                136: [2, 119],
                                137: [2, 119],
                                138: [2, 119],
                                139: [2, 119]
                            }, {
                                6: [2, 126],
                                25: [2, 126],
                                26: [2, 126],
                                54: [2, 126],
                                86: [2, 126],
                                91: [2, 126]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                26: [2, 52],
                                53: 325,
                                54: [1, 232]
                            }, {
                                6: [2, 127],
                                25: [2, 127],
                                26: [2, 127],
                                54: [2, 127],
                                86: [2, 127],
                                91: [2, 127]
                            }, {
                                1: [2, 169],
                                6: [2, 169],
                                25: [2, 169],
                                26: [2, 169],
                                49: [2, 169],
                                54: [2, 169],
                                57: [2, 169],
                                73: [2, 169],
                                78: [2, 169],
                                86: [2, 169],
                                91: [2, 169],
                                93: [2, 169],
                                102: [2, 169],
                                103: 84,
                                104: [2, 169],
                                105: [2, 169],
                                106: [2, 169],
                                109: 85,
                                110: [2, 169],
                                111: 68,
                                118: [1, 326],
                                126: [2, 169],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 171],
                                6: [2, 171],
                                25: [2, 171],
                                26: [2, 171],
                                49: [2, 171],
                                54: [2, 171],
                                57: [2, 171],
                                73: [2, 171],
                                78: [2, 171],
                                86: [2, 171],
                                91: [2, 171],
                                93: [2, 171],
                                102: [2, 171],
                                103: 84,
                                104: [2, 171],
                                105: [1, 327],
                                106: [2, 171],
                                109: 85,
                                110: [2, 171],
                                111: 68,
                                118: [2, 171],
                                126: [2, 171],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 170],
                                6: [2, 170],
                                25: [2, 170],
                                26: [2, 170],
                                49: [2, 170],
                                54: [2, 170],
                                57: [2, 170],
                                73: [2, 170],
                                78: [2, 170],
                                86: [2, 170],
                                91: [2, 170],
                                93: [2, 170],
                                102: [2, 170],
                                103: 84,
                                104: [2, 170],
                                105: [2, 170],
                                106: [2, 170],
                                109: 85,
                                110: [2, 170],
                                111: 68,
                                118: [2, 170],
                                126: [2, 170],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [2, 94],
                                25: [2, 94],
                                26: [2, 94],
                                54: [2, 94],
                                78: [2, 94]
                            }, {
                                6: [2, 52],
                                25: [2, 52],
                                26: [2, 52],
                                53: 328,
                                54: [1, 242]
                            }, {
                                26: [1, 329],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [1, 253],
                                25: [1, 254],
                                26: [1, 330]
                            }, {
                                26: [1, 331]
                            }, {
                                1: [2, 177],
                                6: [2, 177],
                                25: [2, 177],
                                26: [2, 177],
                                49: [2, 177],
                                54: [2, 177],
                                57: [2, 177],
                                73: [2, 177],
                                78: [2, 177],
                                86: [2, 177],
                                91: [2, 177],
                                93: [2, 177],
                                102: [2, 177],
                                104: [2, 177],
                                105: [2, 177],
                                106: [2, 177],
                                110: [2, 177],
                                118: [2, 177],
                                126: [2, 177],
                                129: [2, 177],
                                130: [2, 177],
                                133: [2, 177],
                                134: [2, 177],
                                135: [2, 177],
                                136: [2, 177],
                                137: [2, 177],
                                138: [2, 177],
                                139: [2, 177]
                            }, {
                                26: [2, 181],
                                121: [2, 181],
                                123: [2, 181]
                            }, {
                                25: [2, 133],
                                54: [2, 133],
                                103: 84,
                                104: [1, 64],
                                106: [1, 65],
                                109: 85,
                                110: [1, 67],
                                111: 68,
                                126: [1, 83],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [1, 276],
                                25: [1, 277],
                                26: [1, 332]
                            }, {
                                7: 333,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                7: 334,
                                8: 117,
                                9: 18,
                                10: 19,
                                11: [1, 20],
                                12: 6,
                                13: 7,
                                14: 8,
                                15: 9,
                                16: 10,
                                17: 11,
                                18: 12,
                                19: 13,
                                20: 14,
                                21: 15,
                                22: 16,
                                23: 17,
                                27: 61,
                                28: [1, 72],
                                29: 48,
                                30: [1, 70],
                                31: [1, 71],
                                32: 22,
                                33: [1, 49],
                                34: [1, 50],
                                35: [1, 51],
                                36: [1, 52],
                                37: [1, 53],
                                38: [1, 54],
                                39: 21,
                                44: 62,
                                45: [1, 44],
                                46: [1, 45],
                                47: [1, 27],
                                50: 28,
                                51: [1, 59],
                                52: [1, 60],
                                58: 46,
                                59: 47,
                                61: 35,
                                63: 23,
                                64: 24,
                                65: 25,
                                76: [1, 69],
                                79: [1, 42],
                                83: [1, 26],
                                88: [1, 57],
                                89: [1, 58],
                                90: [1, 56],
                                96: [1, 37],
                                100: [1, 43],
                                101: [1, 55],
                                103: 38,
                                104: [1, 64],
                                106: [1, 65],
                                107: 39,
                                108: [1, 66],
                                109: 40,
                                110: [1, 67],
                                111: 68,
                                119: [1, 41],
                                124: 36,
                                125: [1, 63],
                                127: [1, 29],
                                128: [1, 30],
                                129: [1, 31],
                                130: [1, 32],
                                131: [1, 33],
                                132: [1, 34]
                            }, {
                                6: [1, 287],
                                25: [1, 288],
                                26: [1, 335]
                            }, {
                                6: [2, 40],
                                25: [2, 40],
                                26: [2, 40],
                                54: [2, 40],
                                78: [2, 40]
                            }, {
                                6: [2, 58],
                                25: [2, 58],
                                26: [2, 58],
                                49: [2, 58],
                                54: [2, 58]
                            }, {
                                1: [2, 175],
                                6: [2, 175],
                                25: [2, 175],
                                26: [2, 175],
                                49: [2, 175],
                                54: [2, 175],
                                57: [2, 175],
                                73: [2, 175],
                                78: [2, 175],
                                86: [2, 175],
                                91: [2, 175],
                                93: [2, 175],
                                102: [2, 175],
                                104: [2, 175],
                                105: [2, 175],
                                106: [2, 175],
                                110: [2, 175],
                                118: [2, 175],
                                126: [2, 175],
                                129: [2, 175],
                                130: [2, 175],
                                133: [2, 175],
                                134: [2, 175],
                                135: [2, 175],
                                136: [2, 175],
                                137: [2, 175],
                                138: [2, 175],
                                139: [2, 175]
                            }, {
                                6: [2, 128],
                                25: [2, 128],
                                26: [2, 128],
                                54: [2, 128],
                                86: [2, 128],
                                91: [2, 128]
                            }, {
                                1: [2, 172],
                                6: [2, 172],
                                25: [2, 172],
                                26: [2, 172],
                                49: [2, 172],
                                54: [2, 172],
                                57: [2, 172],
                                73: [2, 172],
                                78: [2, 172],
                                86: [2, 172],
                                91: [2, 172],
                                93: [2, 172],
                                102: [2, 172],
                                103: 84,
                                104: [2, 172],
                                105: [2, 172],
                                106: [2, 172],
                                109: 85,
                                110: [2, 172],
                                111: 68,
                                118: [2, 172],
                                126: [2, 172],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                1: [2, 173],
                                6: [2, 173],
                                25: [2, 173],
                                26: [2, 173],
                                49: [2, 173],
                                54: [2, 173],
                                57: [2, 173],
                                73: [2, 173],
                                78: [2, 173],
                                86: [2, 173],
                                91: [2, 173],
                                93: [2, 173],
                                102: [2, 173],
                                103: 84,
                                104: [2, 173],
                                105: [2, 173],
                                106: [2, 173],
                                109: 85,
                                110: [2, 173],
                                111: 68,
                                118: [2, 173],
                                126: [2, 173],
                                129: [1, 76],
                                130: [1, 75],
                                133: [1, 74],
                                134: [1, 77],
                                135: [1, 78],
                                136: [1, 79],
                                137: [1, 80],
                                138: [1, 81],
                                139: [1, 82]
                            }, {
                                6: [2, 95],
                                25: [2, 95],
                                26: [2, 95],
                                54: [2, 95],
                                78: [2, 95]
                            }],
                            defaultActions: {
                                59: [2, 50],
                                60: [2, 51],
                                91: [2, 109],
                                192: [2, 89]
                            },
                            parseError: function (e, t) {
                                if (!t.recoverable) throw Error(e);
                                this.trace(e)
                            },
                            parse: function (e) {
                                function t() {
                                    var e;
                                    return e = n.lexer.lex() || h, "number" != typeof e && (e = n.symbols_[e] || e), e
                                }
                                var n = this,
                                    r = [0],
                                    i = [null],
                                    s = [],
                                    o = this.table,
                                    u = "",
                                    a = 0,
                                    f = 0,
                                    l = 0,
                                    c = 2,
                                    h = 1,
                                    p = s.slice.call(arguments, 1);
                                this.lexer.setInput(e), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, this.lexer.yylloc === void 0 && (this.lexer.yylloc = {});
                                var d = this.lexer.yylloc;
                                s.push(d);
                                var v = this.lexer.options && this.lexer.options.ranges;
                                this.parseError = "function" == typeof this.yy.parseError ? this.yy.parseError : Object.getPrototypeOf(this).parseError;
                                for (var m, g, y, b, w, E, S, x, T, N = {};;) {
                                    if (y = r[r.length - 1], this.defaultActions[y] ? b = this.defaultActions[y] : ((null === m || m === void 0) && (m = t()), b = o[y] && o[y][m]), b === void 0 || !b.length || !b[0]) {
                                        var C = "";
                                        T = [];
                                        for (E in o[y]) this.terminals_[E] && E > c && T.push("'" + this.terminals_[E] + "'");
                                        C = this.lexer.showPosition ? "Parse error on line " + (a + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + T.join(", ") + ", got '" + (this.terminals_[m] || m) + "'" : "Parse error on line " + (a + 1) + ": Unexpected " + (m == h ? "end of input" : "'" + (this.terminals_[m] || m) + "'"), this.parseError(C, {
                                            text: this.lexer.match,
                                            token: this.terminals_[m] || m,
                                            line: this.lexer.yylineno,
                                            loc: d,
                                            expected: T
                                        })
                                    }
                                    if (b[0] instanceof Array && b.length > 1) throw Error("Parse Error: multiple actions possible at state: " + y + ", token: " + m);
                                    switch (b[0]) {
                                        case 1:
                                            r.push(m), i.push(this.lexer.yytext), s.push(this.lexer.yylloc), r.push(b[1]), m = null, g ? (m = g, g = null) : (f = this.lexer.yyleng, u = this.lexer.yytext, a = this.lexer.yylineno, d = this.lexer.yylloc, l > 0 && l--);
                                            break;
                                        case 2:
                                            if (S = this.productions_[b[1]][1], N.$ = i[i.length - S], N._$ = {
                                                    first_line: s[s.length - (S || 1)].first_line,
                                                    last_line: s[s.length - 1].last_line,
                                                    first_column: s[s.length - (S || 1)].first_column,
                                                    last_column: s[s.length - 1].last_column
                                                }, v && (N._$.range = [s[s.length - (S || 1)].range[0], s[s.length - 1].range[1]]), w = this.performAction.apply(N, [u, f, a, this.yy, b[1], i, s].concat(p)), w !== void 0) return w;
                                            S && (r = r.slice(0, -2 * S), i = i.slice(0, -1 * S), s = s.slice(0, -1 * S)), r.push(this.productions_[b[1]][0]), i.push(N.$), s.push(N._$), x = o[r[r.length - 2]][r[r.length - 1]], r.push(x);
                                            break;
                                        case 3:
                                            return !0
                                    }
                                }
                                return !0
                            }
                        };
                        return e.prototype = t, t.Parser = e, new e
                    }();
                return require !== void 0 && e !== void 0 && (e.parser = n, e.Parser = n.Parser, e.parse = function () {
                    return n.parse.apply(n, arguments)
                }, e.main = function (t) {
                    t[1] || (console.log("Usage: " + t[0] + " FILE"), process.exit(1));
                    var n = require("fs").readFileSync(require("path").normalize(t[1]), "utf8");
                    return e.parser.parse(n)
                }, t !== void 0 && require.main === t && e.main(process.argv.slice(1))), t.exports
            }(), require["./scope"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i;
                    i = require("./helpers"), n = i.extend, r = i.last, e.Scope = t = function () {
                        function e(t, n, r) {
                            this.parent = t, this.expressions = n, this.method = r, this.variables = [{
                                name: "arguments",
                                type: "arguments"
                            }], this.positions = {}, this.parent || (e.root = this)
                        }
                        return e.root = null, e.prototype.add = function (e, t, n) {
                            return this.shared && !n ? this.parent.add(e, t, n) : Object.prototype.hasOwnProperty.call(this.positions, e) ? this.variables[this.positions[e]].type = t : this.positions[e] = this.variables.push({
                                name: e,
                                type: t
                            }) - 1
                        }, e.prototype.namedMethod = function () {
                            var e;
                            return (null != (e = this.method) ? e.name : void 0) || !this.parent ? this.method : this.parent.namedMethod()
                        }, e.prototype.find = function (e) {
                            return this.check(e) ? !0 : (this.add(e, "var"), !1)
                        }, e.prototype.parameter = function (e) {
                            return this.shared && this.parent.check(e, !0) ? void 0 : this.add(e, "param")
                        }, e.prototype.check = function (e) {
                            var t;
                            return !!(this.type(e) || (null != (t = this.parent) ? t.check(e) : void 0))
                        }, e.prototype.temporary = function (e, t) {
                            return e.length > 1 ? "_" + e + (t > 1 ? t - 1 : "") : "_" + (t + parseInt(e, 36)).toString(36).replace(/\d/g, "a")
                        }, e.prototype.type = function (e) {
                            var t, n, r, i;
                            for (i = this.variables, n = 0, r = i.length; r > n; n++)
                                if (t = i[n], t.name === e) return t.type;
                            return null
                        }, e.prototype.freeVariable = function (e, t) {
                            var n, r;
                            for (null == t && (t = !0), n = 0; this.check(r = this.temporary(e, n));) n++;
                            return t && this.add(r, "var", !0), r
                        }, e.prototype.assign = function (e, t) {
                            return this.add(e, {
                                value: t,
                                assigned: !0
                            }, !0), this.hasAssignments = !0
                        }, e.prototype.hasDeclarations = function () {
                            return !!this.declaredVariables().length
                        }, e.prototype.declaredVariables = function () {
                            var e, t, n, r, i, s;
                            for (e = [], t = [], s = this.variables, r = 0, i = s.length; i > r; r++) n = s[r], "var" === n.type && ("_" === n.name.charAt(0) ? t : e).push(n.name);
                            return e.sort().concat(t.sort())
                        }, e.prototype.assignedVariables = function () {
                            var e, t, n, r, i;
                            for (r = this.variables, i = [], t = 0, n = r.length; n > t; t++) e = r[t], e.type.assigned && i.push("" + e.name + " = " + e.type.value);
                            return i
                        }, e
                    }()
                }.call(this), t.exports
            }(), require["./nodes"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M, _, D, P, H, B, j, F, I, q, R, U, z, W, X, V, $, J, K, Q, G, Y, Z, et, tt, nt, rt, it, st, ot, ut, at, ft, lt, ct, ht, pt, dt, vt, mt, gt, yt, bt, wt, Et, St = {}.hasOwnProperty,
                        xt = function (e, t) {
                            function n() {
                                this.constructor = e
                            }
                            for (var r in t) St.call(t, r) && (e[r] = t[r]);
                            return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e
                        },
                        Tt = [].indexOf || function (e) {
                            for (var t = 0, n = this.length; n > t; t++)
                                if (t in this && this[t] === e) return t;
                            return -1
                        },
                        Nt = [].slice;
                    Error.stackTraceLimit = 1 / 0, z = require("./scope").Scope, wt = require("./lexer"), F = wt.RESERVED, U = wt.STRICT_PROSCRIBED, Et = require("./helpers"), nt = Et.compact, ot = Et.flatten, st = Et.extend, ht = Et.merge, rt = Et.del, mt = Et.starts, it = Et.ends, lt = Et.last, vt = Et.some, tt = Et.addLocationDataFn, ct = Et.locationDataToString, gt = Et.throwSyntaxError, e.extend = st, e.addLocationDataFn = tt, et = function () {
                        return !0
                    }, _ = function () {
                        return !1
                    }, J = function () {
                        return this
                    }, M = function () {
                        return this.negated = !this.negated, this
                    }, e.CodeFragment = f = function () {
                        function e(e, t) {
                            var n;
                            this.code = "" + t, this.locationData = null != e ? e.locationData : void 0, this.type = (null != e ? null != (n = e.constructor) ? n.name : void 0 : void 0) || "unknown"
                        }
                        return e.prototype.toString = function () {
                            return "" + this.code + (this.locationData ? ": " + ct(this.locationData) : "")
                        }, e
                    }(), ut = function (e) {
                        var t;
                        return function () {
                            var n, r, i;
                            for (i = [], n = 0, r = e.length; r > n; n++) t = e[n], i.push(t.code);
                            return i
                        }().join("")
                    }, e.Base = i = function () {
                        function e() {}
                        return e.prototype.compile = function (e, t) {
                            return ut(this.compileToFragments(e, t))
                        }, e.prototype.compileToFragments = function (e, t) {
                            var n;
                            return e = st({}, e), t && (e.level = t), n = this.unfoldSoak(e) || this, n.tab = e.indent, e.level !== L && n.isStatement(e) ? n.compileClosure(e) : n.compileNode(e)
                        }, e.prototype.compileClosure = function (e) {
                            var n, r, i, u, f;
                            return (u = this.jumps()) && u.error("cannot use a pure statement in an expression"), e.sharedScope = !0, i = new a([], s.wrap([this])), n = [], ((r = this.contains(at)) || this.contains(ft)) && (n = [new A("this")], r ? (f = "apply", n.push(new A("arguments"))) : f = "call", i = new Y(i, [new t(new A(f))])), (new o(i, n)).compileNode(e)
                        }, e.prototype.cache = function (e, t, n) {
                            var i, s;
                            return this.isComplex() ? (i = new A(n || e.scope.freeVariable("ref")), s = new r(i, this), t ? [s.compileToFragments(e, t), [this.makeCode(i.value)]] : [s, i]) : (i = t ? this.compileToFragments(e, t) : this, [i, i])
                        }, e.prototype.cacheToCodeFragments = function (e) {
                            return [ut(e[0]), ut(e[1])]
                        }, e.prototype.makeReturn = function (e) {
                            var t;
                            return t = this.unwrapAll(), e ? new o(new A("" + e + ".push"), [t]) : new q(t)
                        }, e.prototype.contains = function (e) {
                            var t;
                            return t = void 0, this.traverseChildren(!1, function (n) {
                                return e(n) ? (t = n, !1) : void 0
                            }), t
                        }, e.prototype.lastNonComment = function (e) {
                            var t;
                            for (t = e.length; t--;)
                                if (!(e[t] instanceof l)) return e[t];
                            return null
                        }, e.prototype.toString = function (e, t) {
                            var n;
                            return null == e && (e = ""), null == t && (t = this.constructor.name), n = "\n" + e + t, this.soak && (n += "?"), this.eachChild(function (t) {
                                return n += t.toString(e + $)
                            }), n
                        }, e.prototype.eachChild = function (e) {
                            var t, n, r, i, s, o, u, a;
                            if (!this.children) return this;
                            for (u = this.children, r = 0, s = u.length; s > r; r++)
                                if (t = u[r], this[t])
                                    for (a = ot([this[t]]), i = 0, o = a.length; o > i; i++)
                                        if (n = a[i], e(n) === !1) return this;
                            return this
                        }, e.prototype.traverseChildren = function (e, t) {
                            return this.eachChild(function (n) {
                                var r;
                                return r = t(n), r !== !1 ? n.traverseChildren(e, t) : void 0
                            })
                        }, e.prototype.invert = function () {
                            return new H("!", this)
                        }, e.prototype.unwrapAll = function () {
                            var e;
                            for (e = this; e !== (e = e.unwrap()););
                            return e
                        }, e.prototype.children = [], e.prototype.isStatement = _, e.prototype.jumps = _, e.prototype.isComplex = et, e.prototype.isChainable = _, e.prototype.isAssignable = _, e.prototype.unwrap = J, e.prototype.unfoldSoak = _, e.prototype.assigns = _, e.prototype.updateLocationDataIfMissing = function (e) {
                            return this.locationData ? this : (this.locationData = e, this.eachChild(function (t) {
                                return t.updateLocationDataIfMissing(e)
                            }))
                        }, e.prototype.error = function (e) {
                            return gt(e, this.locationData)
                        }, e.prototype.makeCode = function (e) {
                            return new f(this, e)
                        }, e.prototype.wrapInBraces = function (e) {
                            return [].concat(this.makeCode("("), e, this.makeCode(")"))
                        }, e.prototype.joinFragmentArrays = function (e, t) {
                            var n, r, i, s, o;
                            for (n = [], i = s = 0, o = e.length; o > s; i = ++s) r = e[i], i && n.push(this.makeCode(t)), n = n.concat(r);
                            return n
                        }, e
                    }(), e.Block = s = function (e) {
                        function t(e) {
                            this.expressions = nt(ot(e || []))
                        }
                        return xt(t, e), t.prototype.children = ["expressions"], t.prototype.push = function (e) {
                            return this.expressions.push(e), this
                        }, t.prototype.pop = function () {
                            return this.expressions.pop()
                        }, t.prototype.unshift = function (e) {
                            return this.expressions.unshift(e), this
                        }, t.prototype.unwrap = function () {
                            return 1 === this.expressions.length ? this.expressions[0] : this
                        }, t.prototype.isEmpty = function () {
                            return !this.expressions.length
                        }, t.prototype.isStatement = function (e) {
                            var t, n, r, i;
                            for (i = this.expressions, n = 0, r = i.length; r > n; n++)
                                if (t = i[n], t.isStatement(e)) return !0;
                            return !1
                        }, t.prototype.jumps = function (e) {
                            var t, n, r, i, s;
                            for (s = this.expressions, r = 0, i = s.length; i > r; r++)
                                if (t = s[r], n = t.jumps(e)) return n
                        }, t.prototype.makeReturn = function (e) {
                            var t, n;
                            for (n = this.expressions.length; n--;)
                                if (t = this.expressions[n], !(t instanceof l)) {
                                    this.expressions[n] = t.makeReturn(e), t instanceof q && !t.expression && this.expressions.splice(n, 1);
                                    break
                                } return this
                        }, t.prototype.compileToFragments = function (e, n) {
                            return null == e && (e = {}), e.scope ? t.__super__.compileToFragments.call(this, e, n) : this.compileRoot(e)
                        }, t.prototype.compileNode = function (e) {
                            var n, r, i, s, o, u, a, f, l;
                            for (this.tab = e.indent, u = e.level === L, r = [], l = this.expressions, s = a = 0, f = l.length; f > a; s = ++a) o = l[s], o = o.unwrapAll(), o = o.unfoldSoak(e) || o, o instanceof t ? r.push(o.compileNode(e)) : u ? (o.front = !0, i = o.compileToFragments(e), o.isStatement(e) || (i.unshift(this.makeCode("" + this.tab)), i.push(this.makeCode(";"))), r.push(i)) : r.push(o.compileToFragments(e, N));
                            return u ? this.spaced ? [].concat(this.joinFragmentArrays(r, "\n\n"), this.makeCode("\n")) : this.joinFragmentArrays(r, "\n") : (n = r.length ? this.joinFragmentArrays(r, ", ") : [this.makeCode("void 0")], r.length > 1 && e.level >= N ? this.wrapInBraces(n) : n)
                        }, t.prototype.compileRoot = function (e) {
                            var t, n, r, i, s, o, u, a, f, c;
                            for (e.indent = e.bare ? "" : $, e.level = L, this.spaced = !0, e.scope = new z(null, this, null), c = e.locals || [], a = 0, f = c.length; f > a; a++) i = c[a], e.scope.parameter(i);
                            return s = [], e.bare || (o = function () {
                                var e, n, i, s;
                                for (i = this.expressions, s = [], r = e = 0, n = i.length; n > e && (t = i[r], t.unwrap() instanceof l); r = ++e) s.push(t);
                                return s
                            }.call(this), u = this.expressions.slice(o.length), this.expressions = o, o.length && (s = this.compileNode(ht(e, {
                                indent: ""
                            })), s.push(this.makeCode("\n"))), this.expressions = u), n = this.compileWithDeclarations(e), e.bare ? n : [].concat(s, this.makeCode("(function() {\n"), n, this.makeCode("\n}).call(this);\n"))
                        }, t.prototype.compileWithDeclarations = function (e) {
                            var t, n, r, i, s, o, u, a, f, c, h, p, d, v;
                            for (i = [], o = [], p = this.expressions, s = c = 0, h = p.length; h > c && (r = p[s], r = r.unwrap(), r instanceof l || r instanceof A); s = ++c);
                            return e = ht(e, {
                                level: L
                            }), s && (u = this.expressions.splice(s, 9e9), d = [this.spaced, !1], f = d[0], this.spaced = d[1], v = [this.compileNode(e), f], i = v[0], this.spaced = v[1], this.expressions = u), o = this.compileNode(e), a = e.scope, a.expressions === this && (n = e.scope.hasDeclarations(), t = a.hasAssignments, n || t ? (s && i.push(this.makeCode("\n")), i.push(this.makeCode("" + this.tab + "var ")), n && i.push(this.makeCode(a.declaredVariables().join(", "))), t && (n && i.push(this.makeCode(",\n" + (this.tab + $))), i.push(this.makeCode(a.assignedVariables().join(",\n" + (this.tab + $))))), i.push(this.makeCode(";\n" + (this.spaced ? "\n" : "")))) : i.length && o.length && i.push(this.makeCode("\n"))), i.concat(o)
                        }, t.wrap = function (e) {
                            return 1 === e.length && e[0] instanceof t ? e[0] : new t(e)
                        }, t
                    }(i), e.Literal = A = function (e) {
                        function t(e) {
                            this.value = e
                        }
                        return xt(t, e), t.prototype.makeReturn = function () {
                            return this.isStatement() ? this : t.__super__.makeReturn.apply(this, arguments)
                        }, t.prototype.isAssignable = function () {
                            return m.test(this.value)
                        }, t.prototype.isStatement = function () {
                            var e;
                            return "break" === (e = this.value) || "continue" === e || "debugger" === e
                        }, t.prototype.isComplex = _, t.prototype.assigns = function (e) {
                            return e === this.value
                        }, t.prototype.jumps = function (e) {
                            return "break" !== this.value || (null != e ? e.loop : void 0) || (null != e ? e.block : void 0) ? "continue" !== this.value || (null != e ? e.loop : void 0) ? void 0 : this : this
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r;
                            return n = "this" === this.value ? (null != (r = e.scope.method) ? r.bound : void 0) ? e.scope.method.context : this.value : this.value.reserved ? '"' + this.value + '"' : this.value, t = this.isStatement() ? "" + this.tab + n + ";" : n, [this.makeCode(t)]
                        }, t.prototype.toString = function () {
                            return ' "' + this.value + '"'
                        }, t
                    }(i), e.Undefined = function (e) {
                        function t() {
                            return t.__super__.constructor.apply(this, arguments)
                        }
                        return xt(t, e), t.prototype.isAssignable = _, t.prototype.isComplex = _, t.prototype.compileNode = function (e) {
                            return [this.makeCode(e.level >= x ? "(void 0)" : "void 0")]
                        }, t
                    }(i), e.Null = function (e) {
                        function t() {
                            return t.__super__.constructor.apply(this, arguments)
                        }
                        return xt(t, e), t.prototype.isAssignable = _, t.prototype.isComplex = _, t.prototype.compileNode = function () {
                            return [this.makeCode("null")]
                        }, t
                    }(i), e.Bool = function (e) {
                        function t(e) {
                            this.val = e
                        }
                        return xt(t, e), t.prototype.isAssignable = _, t.prototype.isComplex = _, t.prototype.compileNode = function () {
                            return [this.makeCode(this.val)]
                        }, t
                    }(i), e.Return = q = function (e) {
                        function t(e) {
                            this.expression = e
                        }
                        return xt(t, e), t.prototype.children = ["expression"], t.prototype.isStatement = et, t.prototype.makeReturn = J, t.prototype.jumps = J, t.prototype.compileToFragments = function (e, n) {
                            var r, i;
                            return r = null != (i = this.expression) ? i.makeReturn() : void 0, !r || r instanceof t ? t.__super__.compileToFragments.call(this, e, n) : r.compileToFragments(e, n)
                        }, t.prototype.compileNode = function (e) {
                            var t;
                            return t = [], t.push(this.makeCode(this.tab + ("return" + (this.expression ? " " : "")))), this.expression && (t = t.concat(this.expression.compileToFragments(e, k))), t.push(this.makeCode(";")), t
                        }, t
                    }(i), e.Value = Y = function (e) {
                        function t(e, n, r) {
                            return !n && e instanceof t ? e : (this.base = e, this.properties = n || [], r && (this[r] = !0), this)
                        }
                        return xt(t, e), t.prototype.children = ["base", "properties"], t.prototype.add = function (e) {
                            return this.properties = this.properties.concat(e), this
                        }, t.prototype.hasProperties = function () {
                            return !!this.properties.length
                        }, t.prototype.bareLiteral = function (e) {
                            return !this.properties.length && this.base instanceof e
                        }, t.prototype.isArray = function () {
                            return this.bareLiteral(n)
                        }, t.prototype.isRange = function () {
                            return this.bareLiteral(I)
                        }, t.prototype.isComplex = function () {
                            return this.hasProperties() || this.base.isComplex()
                        }, t.prototype.isAssignable = function () {
                            return this.hasProperties() || this.base.isAssignable()
                        }, t.prototype.isSimpleNumber = function () {
                            return this.bareLiteral(A) && R.test(this.base.value)
                        }, t.prototype.isString = function () {
                            return this.bareLiteral(A) && b.test(this.base.value)
                        }, t.prototype.isRegex = function () {
                            return this.bareLiteral(A) && y.test(this.base.value)
                        }, t.prototype.isAtomic = function () {
                            var e, t, n, r;
                            for (r = this.properties.concat(this.base), t = 0, n = r.length; n > t; t++)
                                if (e = r[t], e.soak || e instanceof o) return !1;
                            return !0
                        }, t.prototype.isNotCallable = function () {
                            return this.isSimpleNumber() || this.isString() || this.isRegex() || this.isArray() || this.isRange() || this.isSplice() || this.isObject()
                        }, t.prototype.isStatement = function (e) {
                            return !this.properties.length && this.base.isStatement(e)
                        }, t.prototype.assigns = function (e) {
                            return !this.properties.length && this.base.assigns(e)
                        }, t.prototype.jumps = function (e) {
                            return !this.properties.length && this.base.jumps(e)
                        }, t.prototype.isObject = function (e) {
                            return this.properties.length ? !1 : this.base instanceof P && (!e || this.base.generated)
                        }, t.prototype.isSplice = function () {
                            return lt(this.properties) instanceof W
                        }, t.prototype.looksStatic = function (e) {
                            var t;
                            return this.base.value === e && this.properties.length && "prototype" !== (null != (t = this.properties[0].name) ? t.value : void 0)
                        }, t.prototype.unwrap = function () {
                            return this.properties.length ? this : this.base
                        }, t.prototype.cacheReference = function (e) {
                            var n, i, s, o;
                            return s = lt(this.properties), 2 > this.properties.length && !this.base.isComplex() && (null != s ? !s.isComplex() : !void 0) ? [this, this] : (n = new t(this.base, this.properties.slice(0, -1)), n.isComplex() && (i = new A(e.scope.freeVariable("base")), n = new t(new j(new r(i, n)))), s ? (s.isComplex() && (o = new A(e.scope.freeVariable("name")), s = new S(new r(o, s.index)), o = new S(o)), [n.add(s), new t(i || n.base, [o || s])]) : [n, i])
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r, i, s;
                            for (this.base.front = this.front, r = this.properties, t = this.base.compileToFragments(e, r.length ? x : null), (this.base instanceof j || r.length) && R.test(ut(t)) && t.push(this.makeCode(".")), i = 0, s = r.length; s > i; i++) n = r[i], t.push.apply(t, n.compileToFragments(e));
                            return t
                        }, t.prototype.unfoldSoak = function (e) {
                            return null != this.unfoldedSoak ? this.unfoldedSoak : this.unfoldedSoak = function (n) {
                                return function () {
                                    var i, s, o, u, a, f, l, h, p, d;
                                    if (o = n.base.unfoldSoak(e)) return (p = o.body.properties).push.apply(p, n.properties), o;
                                    for (d = n.properties, s = l = 0, h = d.length; h > l; s = ++l)
                                        if (u = d[s], u.soak) return u.soak = !1, i = new t(n.base, n.properties.slice(0, s)), f = new t(n.base, n.properties.slice(s)), i.isComplex() && (a = new A(e.scope.freeVariable("ref")), i = new j(new r(a, i)), f.base = a), new w(new c(i), f, {
                                            soak: !0
                                        });
                                    return !1
                                }
                            }(this)()
                        }, t
                    }(i), e.Comment = l = function (e) {
                        function t(e) {
                            this.comment = e
                        }
                        return xt(t, e), t.prototype.isStatement = et, t.prototype.makeReturn = J, t.prototype.compileNode = function (e, t) {
                            var n, r;
                            return r = this.comment.replace(/^(\s*)#/gm, "$1 *"), n = "/*" + pt(r, this.tab) + (Tt.call(r, "\n") >= 0 ? "\n" + this.tab : "") + " */", (t || e.level) === L && (n = e.indent + n), [this.makeCode("\n"), this.makeCode(n)]
                        }, t
                    }(i), e.Call = o = function (e) {
                        function n(e, t, n) {
                            this.args = null != t ? t : [], this.soak = n, this.isNew = !1, this.isSuper = "super" === e, this.variable = this.isSuper ? null : e, e instanceof Y && e.isNotCallable() && e.error("literal is not a function")
                        }
                        return xt(n, e), n.prototype.children = ["variable", "args"], n.prototype.newInstance = function () {
                            var e, t;
                            return e = (null != (t = this.variable) ? t.base : void 0) || this.variable, e instanceof n && !e.isNew ? e.newInstance() : this.isNew = !0, this
                        }, n.prototype.superReference = function (e) {
                            var n, r;
                            return r = e.scope.namedMethod(), (null != r ? r.klass : void 0) ? (n = [new t(new A("__super__"))], r["static"] && n.push(new t(new A("constructor"))), n.push(new t(new A(r.name))), (new Y(new A(r.klass), n)).compile(e)) : (null != r ? r.ctor : void 0) ? "" + r.name + ".__super__.constructor" : this.error("cannot call super outside of an instance method.")
                        }, n.prototype.superThis = function (e) {
                            var t;
                            return t = e.scope.method, t && !t.klass && t.context || "this"
                        }, n.prototype.unfoldSoak = function (e) {
                            var t, r, i, s, o, u, a, f, l;
                            if (this.soak) {
                                if (this.variable) {
                                    if (r = yt(e, this, "variable")) return r;
                                    f = (new Y(this.variable)).cacheReference(e), i = f[0], o = f[1]
                                } else i = new A(this.superReference(e)), o = new Y(i);
                                return o = new n(o, this.args), o.isNew = this.isNew, i = new A("typeof " + i.compile(e) + ' === "function"'), new w(i, new Y(o), {
                                    soak: !0
                                })
                            }
                            for (t = this, s = [];;)
                                if (t.variable instanceof n) s.push(t), t = t.variable;
                                else {
                                    if (!(t.variable instanceof Y)) break;
                                    if (s.push(t), !((t = t.variable.base) instanceof n)) break
                                } for (l = s.reverse(), u = 0, a = l.length; a > u; u++) t = l[u], r && (t.variable instanceof n ? t.variable = r : t.variable.base = r), r = yt(e, t, "variable");
                            return r
                        }, n.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u, a, f, l;
                            if (null != (f = this.variable) && (f.front = this.front), i = X.compileSplattedArray(e, this.args, !0), i.length) return this.compileSplat(e, i);
                            for (r = [], l = this.args, n = u = 0, a = l.length; a > u; n = ++u) t = l[n], n && r.push(this.makeCode(", ")), r.push.apply(r, t.compileToFragments(e, N));
                            return s = [], this.isSuper ? (o = this.superReference(e) + (".call(" + this.superThis(e)), r.length && (o += ", "), s.push(this.makeCode(o))) : (this.isNew && s.push(this.makeCode("new ")), s.push.apply(s, this.variable.compileToFragments(e, x)), s.push(this.makeCode("("))), s.push.apply(s, r), s.push(this.makeCode(")")), s
                        }, n.prototype.compileSplat = function (e, t) {
                            var n, r, i, s, o, u;
                            return this.isSuper ? [].concat(this.makeCode("" + this.superReference(e) + ".apply(" + this.superThis(e) + ", "), t, this.makeCode(")")) : this.isNew ? (s = this.tab + $, [].concat(this.makeCode("(function(func, args, ctor) {\n" + s + "ctor.prototype = func.prototype;\n" + s + "var child = new ctor, result = func.apply(child, args);\n" + s + "return Object(result) === result ? result : child;\n" + this.tab + "})("), this.variable.compileToFragments(e, N), this.makeCode(", "), t, this.makeCode(", function(){})"))) : (n = [], r = new Y(this.variable), (o = r.properties.pop()) && r.isComplex() ? (u = e.scope.freeVariable("ref"), n = n.concat(this.makeCode("(" + u + " = "), r.compileToFragments(e, N), this.makeCode(")"), o.compileToFragments(e))) : (i = r.compileToFragments(e, x), R.test(ut(i)) && (i = this.wrapInBraces(i)), o ? (u = ut(i), i.push.apply(i, o.compileToFragments(e))) : u = "null", n = n.concat(i)), n = n.concat(this.makeCode(".apply(" + u + ", "), t, this.makeCode(")")))
                        }, n
                    }(i), e.Extends = p = function (e) {
                        function t(e, t) {
                            this.child = e, this.parent = t
                        }
                        return xt(t, e), t.prototype.children = ["child", "parent"], t.prototype.compileToFragments = function (e) {
                            return (new o(new Y(new A(bt("extends"))), [this.child, this.parent])).compileToFragments(e)
                        }, t
                    }(i), e.Access = t = function (e) {
                        function t(e, t) {
                            this.name = e, this.name.asKey = !0, this.soak = "soak" === t
                        }
                        return xt(t, e), t.prototype.children = ["name"], t.prototype.compileToFragments = function (e) {
                            var t;
                            return t = this.name.compileToFragments(e), m.test(ut(t)) ? t.unshift(this.makeCode(".")) : (t.unshift(this.makeCode("[")), t.push(this.makeCode("]"))), t
                        }, t.prototype.isComplex = _, t
                    }(i), e.Index = S = function (e) {
                        function t(e) {
                            this.index = e
                        }
                        return xt(t, e), t.prototype.children = ["index"], t.prototype.compileToFragments = function (e) {
                            return [].concat(this.makeCode("["), this.index.compileToFragments(e, k), this.makeCode("]"))
                        }, t.prototype.isComplex = function () {
                            return this.index.isComplex()
                        }, t
                    }(i), e.Range = I = function (e) {
                        function t(e, t, n) {
                            this.from = e, this.to = t, this.exclusive = "exclusive" === n, this.equals = this.exclusive ? "" : "="
                        }
                        return xt(t, e), t.prototype.children = ["from", "to"], t.prototype.compileVariables = function (e) {
                            var t, n, r, i, s;
                            return e = ht(e, {
                                top: !0
                            }), n = this.cacheToCodeFragments(this.from.cache(e, N)), this.fromC = n[0], this.fromVar = n[1], r = this.cacheToCodeFragments(this.to.cache(e, N)), this.toC = r[0], this.toVar = r[1], (t = rt(e, "step")) && (i = this.cacheToCodeFragments(t.cache(e, N)), this.step = i[0], this.stepVar = i[1]), s = [this.fromVar.match(D), this.toVar.match(D)], this.fromNum = s[0], this.toNum = s[1], this.stepVar ? this.stepNum = this.stepVar.match(D) : void 0
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u, a, f, l, c, h, p, d;
                            return this.fromVar || this.compileVariables(e), e.index ? (u = this.fromNum && this.toNum, s = rt(e, "index"), o = rt(e, "name"), f = o && o !== s, h = "" + s + " = " + this.fromC, this.toC !== this.toVar && (h += ", " + this.toC), this.step !== this.stepVar && (h += ", " + this.step), p = ["" + s + " <" + this.equals, "" + s + " >" + this.equals], a = p[0], i = p[1], n = this.stepNum ? dt(this.stepNum[0]) > 0 ? "" + a + " " + this.toVar : "" + i + " " + this.toVar : u ? (d = [dt(this.fromNum[0]), dt(this.toNum[0])], r = d[0], c = d[1], d, c >= r ? "" + a + " " + c : "" + i + " " + c) : (t = this.stepVar ? "" + this.stepVar + " > 0" : "" + this.fromVar + " <= " + this.toVar, "" + t + " ? " + a + " " + this.toVar + " : " + i + " " + this.toVar), l = this.stepVar ? "" + s + " += " + this.stepVar : u ? f ? c >= r ? "++" + s : "--" + s : c >= r ? "" + s + "++" : "" + s + "--" : f ? "" + t + " ? ++" + s + " : --" + s : "" + t + " ? " + s + "++ : " + s + "--", f && (h = "" + o + " = " + h), f && (l = "" + o + " = " + l), [this.makeCode("" + h + "; " + n + "; " + l)]) : this.compileArray(e)
                        }, t.prototype.compileArray = function (e) {
                            var t, n, r, i, s, o, u, a, f, l, c, h, p;
                            return this.fromNum && this.toNum && 20 >= Math.abs(this.fromNum - this.toNum) ? (f = function () {
                                p = [];
                                for (var e = h = +this.fromNum, t = +this.toNum; t >= h ? t >= e : e >= t; t >= h ? e++ : e--) p.push(e);
                                return p
                            }.apply(this), this.exclusive && f.pop(), [this.makeCode("[" + f.join(", ") + "]")]) : (o = this.tab + $, s = e.scope.freeVariable("i"), l = e.scope.freeVariable("results"), a = "\n" + o + l + " = [];", this.fromNum && this.toNum ? (e.index = s, n = ut(this.compileNode(e))) : (c = "" + s + " = " + this.fromC + (this.toC !== this.toVar ? ", " + this.toC : ""), r = "" + this.fromVar + " <= " + this.toVar, n = "var " + c + "; " + r + " ? " + s + " <" + this.equals + " " + this.toVar + " : " + s + " >" + this.equals + " " + this.toVar + "; " + r + " ? " + s + "++ : " + s + "--"), u = "{ " + l + ".push(" + s + "); }\n" + o + "return " + l + ";\n" + e.indent, i = function (e) {
                                return null != e ? e.contains(at) : void 0
                            }, (i(this.from) || i(this.to)) && (t = ", arguments"), [this.makeCode("(function() {" + a + "\n" + o + "for (" + n + ")" + u + "}).apply(this" + (null != t ? t : "") + ")")])
                        }, t
                    }(i), e.Slice = W = function (e) {
                        function t(e) {
                            this.range = e, t.__super__.constructor.call(this)
                        }
                        return xt(t, e), t.prototype.children = ["range"], t.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u;
                            return u = this.range, s = u.to, r = u.from, i = r && r.compileToFragments(e, k) || [this.makeCode("0")], s && (t = s.compileToFragments(e, k), n = ut(t), (this.range.exclusive || -1 !== +n) && (o = ", " + (this.range.exclusive ? n : R.test(n) ? "" + (+n + 1) : (t = s.compileToFragments(e, x), "+" + ut(t) + " + 1 || 9e9")))), [this.makeCode(".slice(" + ut(i) + (o || "") + ")")]
                        }, t
                    }(i), e.Obj = P = function (e) {
                        function t(e, t) {
                            this.generated = null != t ? t : !1, this.objects = this.properties = e || []
                        }
                        return xt(t, e), t.prototype.children = ["properties"], t.prototype.compileNode = function (e) {
                            var t, n, i, s, o, u, a, f, c, h, p, d, v;
                            if (c = this.properties, !c.length) return [this.makeCode(this.front ? "({})" : "{}")];
                            if (this.generated)
                                for (h = 0, d = c.length; d > h; h++) a = c[h], a instanceof Y && a.error("cannot have an implicit value in an implicit object");
                            for (i = e.indent += $, u = this.lastNonComment(this.properties), t = [], n = p = 0, v = c.length; v > p; n = ++p) f = c[n], o = n === c.length - 1 ? "" : f === u || f instanceof l ? "\n" : ",\n", s = f instanceof l ? "" : i, f instanceof r && f.variable instanceof Y && f.variable.hasProperties() && f.variable.error("Invalid object key"), f instanceof Y && f["this"] && (f = new r(f.properties[0].name, f, "object")), f instanceof l || (f instanceof r || (f = new r(f, f, "object")), (f.variable.base || f.variable).asKey = !0), s && t.push(this.makeCode(s)), t.push.apply(t, f.compileToFragments(e, L)), o && t.push(this.makeCode(o));
                            return t.unshift(this.makeCode("{" + (c.length && "\n"))), t.push(this.makeCode("" + (c.length && "\n" + this.tab) + "}")), this.front ? this.wrapInBraces(t) : t
                        }, t.prototype.assigns = function (e) {
                            var t, n, r, i;
                            for (i = this.properties, n = 0, r = i.length; r > n; n++)
                                if (t = i[n], t.assigns(e)) return !0;
                            return !1
                        }, t
                    }(i), e.Arr = n = function (e) {
                        function t(e) {
                            this.objects = e || []
                        }
                        return xt(t, e), t.prototype.children = ["objects"], t.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u;
                            if (!this.objects.length) return [this.makeCode("[]")];
                            if (e.indent += $, t = X.compileSplattedArray(e, this.objects), t.length) return t;
                            for (t = [], n = function () {
                                    var t, n, r, i;
                                    for (r = this.objects, i = [], t = 0, n = r.length; n > t; t++) s = r[t], i.push(s.compileToFragments(e, N));
                                    return i
                                }.call(this), i = o = 0, u = n.length; u > o; i = ++o) r = n[i], i && t.push(this.makeCode(", ")), t.push.apply(t, r);
                            return ut(t).indexOf("\n") >= 0 ? (t.unshift(this.makeCode("[\n" + e.indent)), t.push(this.makeCode("\n" + this.tab + "]"))) : (t.unshift(this.makeCode("[")), t.push(this.makeCode("]"))), t
                        }, t.prototype.assigns = function (e) {
                            var t, n, r, i;
                            for (i = this.objects, n = 0, r = i.length; r > n; n++)
                                if (t = i[n], t.assigns(e)) return !0;
                            return !1
                        }, t
                    }(i), e.Class = u = function (e) {
                        function n(e, t, n) {
                            this.variable = e, this.parent = t, this.body = null != n ? n : new s, this.boundFuncs = [], this.body.classBody = !0
                        }
                        return xt(n, e), n.prototype.children = ["variable", "parent", "body"], n.prototype.determineName = function () {
                            var e, n;
                            return this.variable ? (e = (n = lt(this.variable.properties)) ? n instanceof t && n.name.value : this.variable.base.value, Tt.call(U, e) >= 0 && this.variable.error("class variable name may not be " + e), e && (e = m.test(e) && e)) : null
                        }, n.prototype.setContext = function (e) {
                            return this.body.traverseChildren(!1, function (t) {
                                return t.classBody ? !1 : t instanceof A && "this" === t.value ? t.value = e : t instanceof a && (t.klass = e, t.bound) ? t.context = e : void 0
                            })
                        }, n.prototype.addBoundFunctions = function (e) {
                            var n, r, i, s, o;
                            for (o = this.boundFuncs, i = 0, s = o.length; s > i; i++) n = o[i], r = (new Y(new A("this"), [new t(n)])).compile(e), this.ctor.body.unshift(new A("" + r + " = " + bt("bind") + "(" + r + ", this)"))
                        }, n.prototype.addProperties = function (e, n, i) {
                            var s, o, u, f, l;
                            return l = e.base.properties.slice(0), u = function () {
                                var e;
                                for (e = []; s = l.shift();) s instanceof r && (o = s.variable.base, delete s.context, f = s.value, "constructor" === o.value ? (this.ctor && s.error("cannot define more than one constructor in a class"), f.bound && s.error("cannot define a constructor as a bound function"), f instanceof a ? s = this.ctor = f : (this.externalCtor = i.classScope.freeVariable("class"), s = new r(new A(this.externalCtor), f))) : s.variable["this"] ? f["static"] = !0 : (s.variable = new Y(new A(n), [new t(new A("prototype")), new t(o)]), f instanceof a && f.bound && (this.boundFuncs.push(o), f.bound = !1))), e.push(s);
                                return e
                            }.call(this), nt(u)
                        }, n.prototype.walkBody = function (e, t) {
                            return this.traverseChildren(!1, function (i) {
                                return function (o) {
                                    var u, a, f, l, c, h, p;
                                    if (u = !0, o instanceof n) return !1;
                                    if (o instanceof s) {
                                        for (p = a = o.expressions, f = c = 0, h = p.length; h > c; f = ++c) l = p[f], l instanceof r && l.variable.looksStatic(e) ? l.value["static"] = !0 : l instanceof Y && l.isObject(!0) && (u = !1, a[f] = i.addProperties(l, e, t));
                                        o.expressions = a = ot(a)
                                    }
                                    return u && !(o instanceof n)
                                }
                            }(this))
                        }, n.prototype.hoistDirectivePrologue = function () {
                            var e, t, n;
                            for (t = 0, e = this.body.expressions;
                                (n = e[t]) && n instanceof l || n instanceof Y && n.isString();) ++t;
                            return this.directives = e.splice(0, t)
                        }, n.prototype.ensureConstructor = function (e) {
                            return this.ctor || (this.ctor = new a, this.externalCtor ? this.ctor.body.push(new A("" + this.externalCtor + ".apply(this, arguments)")) : this.parent && this.ctor.body.push(new A("" + e + ".__super__.constructor.apply(this, arguments)")), this.ctor.body.makeReturn(), this.body.expressions.unshift(this.ctor)), this.ctor.ctor = this.ctor.name = e, this.ctor.klass = null, this.ctor.noReturn = !0
                        }, n.prototype.compileNode = function (e) {
                            var t, n, i, u, f, l, c, h, d;
                            return (u = this.body.jumps()) && u.error("Class bodies cannot contain pure statements"), (n = this.body.contains(at)) && n.error("Class bodies shouldn't reference arguments"), c = this.determineName() || "_Class", c.reserved && (c = "_" + c), l = new A(c), i = new a([], s.wrap([this.body])), t = [], e.classScope = i.makeScope(e.scope), this.hoistDirectivePrologue(), this.setContext(c), this.walkBody(c, e), this.ensureConstructor(c), this.addBoundFunctions(e), this.body.spaced = !0, this.body.expressions.push(l), this.parent && (h = new A(e.classScope.freeVariable("super", !1)), this.body.expressions.unshift(new p(l, h)), i.params.push(new B(h)), t.push(this.parent)), (d = this.body.expressions).unshift.apply(d, this.directives), f = new j(new o(i, t)), this.variable && (f = new r(this.variable, f)), f.compileToFragments(e)
                        }, n
                    }(i), e.Assign = r = function (e) {
                        function n(e, t, n, r) {
                            var i, s, o;
                            this.variable = e, this.value = t, this.context = n, this.param = r && r.param, this.subpattern = r && r.subpattern, o = s = this.variable.unwrapAll().value, i = Tt.call(U, o) >= 0, i && "object" !== this.context && this.variable.error('variable name may not be "' + s + '"')
                        }
                        return xt(n, e), n.prototype.children = ["variable", "value"], n.prototype.isStatement = function (e) {
                            return (null != e ? e.level : void 0) === L && null != this.context && Tt.call(this.context, "?") >= 0
                        }, n.prototype.assigns = function (e) {
                            return this["object" === this.context ? "value" : "variable"].assigns(e)
                        }, n.prototype.unfoldSoak = function (e) {
                            return yt(e, this, "variable")
                        }, n.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u, f, l, c, h;
                            if (r = this.variable instanceof Y) {
                                if (this.variable.isArray() || this.variable.isObject()) return this.compilePatternMatch(e);
                                if (this.variable.isSplice()) return this.compileSplice(e);
                                if ("||=" === (f = this.context) || "&&=" === f || "?=" === f) return this.compileConditional(e);
                                if ("**=" === (l = this.context) || "//=" === l || "%%=" === l) return this.compileSpecialMath(e)
                            }
                            return n = this.variable.compileToFragments(e, N), s = ut(n), this.context || (u = this.variable.unwrapAll(), u.isAssignable() || this.variable.error('"' + this.variable.compile(e) + '" cannot be assigned'), ("function" == typeof u.hasProperties ? u.hasProperties() : void 0) || (this.param ? e.scope.add(s, "var") : e.scope.find(s))), this.value instanceof a && (i = O.exec(s)) && (i[2] && (this.value.klass = i[1]), this.value.name = null != (c = null != (h = i[3]) ? h : i[4]) ? c : i[5]), o = this.value.compileToFragments(e, N), "object" === this.context ? n.concat(this.makeCode(": "), o) : (t = n.concat(this.makeCode(" " + (this.context || "=") + " "), o), N >= e.level ? t : this.wrapInBraces(t))
                        }, n.prototype.compilePatternMatch = function (e) {
                            var r, i, s, o, u, a, f, l, c, p, d, v, g, y, b, w, E, x, T, k, O, M, _, D, P, H, B, I;
                            if (w = e.level === L, x = this.value, v = this.variable.base.objects, !(g = v.length)) return s = x.compileToFragments(e), e.level >= C ? this.wrapInBraces(s) : s;
                            if (l = this.variable.isObject(), !w || 1 !== g || (d = v[0]) instanceof X) {
                                for (T = x.compileToFragments(e, N), k = ut(T), i = [], o = !1, (!m.test(k) || this.variable.assigns(k)) && (i.push([this.makeCode("" + (y = e.scope.freeVariable("ref")) + " = ")].concat(Nt.call(T))), T = [this.makeCode(y)], k = y), a = O = 0, M = v.length; M > O; a = ++O) {
                                    if (d = v[a], f = a, l && (d instanceof n ? (H = d, B = H.variable, f = B.base, d = H.value) : d.base instanceof j ? (I = (new Y(d.unwrapAll())).cacheReference(e), d = I[0], f = I[1]) : f = d["this"] ? d.properties[0].name : d), !o && d instanceof X) p = d.name.unwrap().value, d = d.unwrap(), E = "" + g + " <= " + k + ".length ? " + bt("slice") + ".call(" + k + ", " + a, (b = g - a - 1) ? (c = e.scope.freeVariable("i"), E += ", " + c + " = " + k + ".length - " + b + ") : (" + c + " = " + a + ", [])") : E += ") : []", E = new A(E), o = "" + c + "++";
                                    else {
                                        if (!o && d instanceof h) {
                                            (b = g - a - 1) && (1 === b ? o = "" + k + ".length - 1" : (c = e.scope.freeVariable("i"), E = new A("" + c + " = " + k + ".length - " + b), o = "" + c + "++", i.push(E.compileToFragments(e, N))));
                                            continue
                                        }
                                        p = d.unwrap().value, (d instanceof X || d instanceof h) && d.error("multiple splats/expansions are disallowed in an assignment"), "number" == typeof f ? (f = new A(o || f), r = !1) : r = l && m.test(f.unwrap().value || 0), E = new Y(new A(k), [new(r ? t : S)(f)])
                                    }
                                    null != p && Tt.call(F, p) >= 0 && d.error("assignment to a reserved word: " + d.compile(e)), i.push((new n(d, E, null, {
                                        param: this.param,
                                        subpattern: !0
                                    })).compileToFragments(e, N))
                                }
                                return w || this.subpattern || i.push(T), u = this.joinFragmentArrays(i, ", "), N > e.level ? u : this.wrapInBraces(u)
                            }
                            return d instanceof n ? (_ = d, D = _.variable, f = D.base, d = _.value) : f = l ? d["this"] ? d.properties[0].name : d : new A(0), r = m.test(f.unwrap().value || 0), x = new Y(x), x.properties.push(new(r ? t : S)(f)), P = d.unwrap().value, Tt.call(F, P) >= 0 && d.error("assignment to a reserved word: " + d.compile(e)), (new n(d, x, null, {
                                param: this.param
                            })).compileToFragments(e, L)
                        }, n.prototype.compileConditional = function (e) {
                            var t, r, i, s;
                            return s = this.variable.cacheReference(e), r = s[0], i = s[1], !r.properties.length && r.base instanceof A && "this" !== r.base.value && !e.scope.check(r.base.value) && this.variable.error('the variable "' + r.base.value + "\" can't be assigned with " + this.context + " because it has not been declared before"), Tt.call(this.context, "?") >= 0 ? (e.isExistentialEquals = !0, (new w(new c(r), i, {
                                type: "if"
                            })).addElse(new n(i, this.value, "=")).compileToFragments(e)) : (t = (new H(this.context.slice(0, -1), r, new n(i, this.value, "="))).compileToFragments(e), N >= e.level ? t : this.wrapInBraces(t))
                        }, n.prototype.compileSpecialMath = function (e) {
                            var t, r, i;
                            return i = this.variable.cacheReference(e), t = i[0], r = i[1], (new n(t, new H(this.context.slice(0, -1), r, this.value))).compileToFragments(e)
                        }, n.prototype.compileSplice = function (e) {
                            var t, n, r, i, s, o, u, a, f, l, c, h;
                            return l = this.variable.properties.pop().range, r = l.from, u = l.to, n = l.exclusive, o = this.variable.compile(e), r ? (c = this.cacheToCodeFragments(r.cache(e, C)), i = c[0], s = c[1]) : i = s = "0", u ? r instanceof Y && r.isSimpleNumber() && u instanceof Y && u.isSimpleNumber() ? (u = u.compile(e) - s, n || (u += 1)) : (u = u.compile(e, x) + " - " + s, n || (u += " + 1")) : u = "9e9", h = this.value.cache(e, N), a = h[0], f = h[1], t = [].concat(this.makeCode("[].splice.apply(" + o + ", [" + i + ", " + u + "].concat("), a, this.makeCode(")), "), f), e.level > L ? this.wrapInBraces(t) : t
                        }, n
                    }(i), e.Code = a = function (e) {
                        function t(e, t, n) {
                            this.params = e || [], this.body = t || new s, this.bound = "boundfunc" === n
                        }
                        return xt(t, e), t.prototype.children = ["params", "body"], t.prototype.isStatement = function () {
                            return !!this.ctor
                        }, t.prototype.jumps = _, t.prototype.makeScope = function (e) {
                            return new z(e, this.body, this)
                        }, t.prototype.compileNode = function (e) {
                            var i, u, a, f, l, c, p, d, v, m, g, y, b, E, S, T, N, C, k, L, O, M, _, D, P, j, F, I, q, R, U, z, W;
                            if (this.bound && (null != (I = e.scope.method) ? I.bound : void 0) && (this.context = e.scope.method.context), this.bound && !this.context) return this.context = "_this", S = new t([new B(new A(this.context))], new s([this])), u = new o(S, [new A("this")]), u.updateLocationDataIfMissing(this.locationData), u.compileNode(e);
                            for (e.scope = rt(e, "classScope") || this.makeScope(e.scope), e.scope.shared = rt(e, "sharedScope"), e.indent += $, delete e.bare, delete e.isExistentialEquals, v = [], f = [], q = this.params, T = 0, L = q.length; L > T; T++) d = q[T], d instanceof h || e.scope.parameter(d.asReference(e));
                            for (R = this.params, N = 0, O = R.length; O > N; N++)
                                if (d = R[N], d.splat || d instanceof h) {
                                    for (U = this.params, C = 0, M = U.length; M > C; C++) p = U[C].name, d instanceof h || (p["this"] && (p = p.properties[0].name), p.value && e.scope.add(p.value, "var", !0));
                                    g = new r(new Y(new n(function () {
                                        var t, n, r, i;
                                        for (r = this.params, i = [], t = 0, n = r.length; n > t; t++) p = r[t], i.push(p.asReference(e));
                                        return i
                                    }.call(this))), new Y(new A("arguments")));
                                    break
                                } for (z = this.params, k = 0, _ = z.length; _ > k; k++) d = z[k], d.isComplex() ? (b = m = d.asReference(e), d.value && (b = new H("?", m, d.value)), f.push(new r(new Y(d.name), b, "=", {
                                param: !0
                            }))) : (m = d, d.value && (c = new A(m.name.value + " == null"), b = new r(new Y(d.name), d.value, "="), f.push(new w(c, b)))), g || v.push(m);
                            for (E = this.body.isEmpty(), g && f.unshift(g), f.length && (W = this.body.expressions).unshift.apply(W, f), l = j = 0, D = v.length; D > j; l = ++j) p = v[l], v[l] = p.compileToFragments(e), e.scope.parameter(ut(v[l]));
                            for (y = [], this.eachParamName(function (e, t) {
                                    return Tt.call(y, e) >= 0 && t.error("multiple parameters named '" + e + "'"), y.push(e)
                                }), E || this.noReturn || this.body.makeReturn(), a = "function", this.ctor && (a += " " + this.name), a += "(", i = [this.makeCode(a)], l = F = 0, P = v.length; P > F; l = ++F) p = v[l], l && i.push(this.makeCode(", ")), i.push.apply(i, p);
                            return i.push(this.makeCode(") {")), this.body.isEmpty() || (i = i.concat(this.makeCode("\n"), this.body.compileWithDeclarations(e), this.makeCode("\n" + this.tab))), i.push(this.makeCode("}")), this.ctor ? [this.makeCode(this.tab)].concat(Nt.call(i)) : this.front || e.level >= x ? this.wrapInBraces(i) : i
                        }, t.prototype.eachParamName = function (e) {
                            var t, n, r, i, s;
                            for (i = this.params, s = [], n = 0, r = i.length; r > n; n++) t = i[n], s.push(t.eachName(e));
                            return s
                        }, t.prototype.traverseChildren = function (e, n) {
                            return e ? t.__super__.traverseChildren.call(this, e, n) : void 0
                        }, t
                    }(i), e.Param = B = function (e) {
                        function t(e, t, n) {
                            var r;
                            this.name = e, this.value = t, this.splat = n, r = e = this.name.unwrapAll().value, Tt.call(U, r) >= 0 && this.name.error('parameter name "' + e + '" is not allowed')
                        }
                        return xt(t, e), t.prototype.children = ["name", "value"], t.prototype.compileToFragments = function (e) {
                            return this.name.compileToFragments(e, N)
                        }, t.prototype.asReference = function (e) {
                            var t;
                            return this.reference ? this.reference : (t = this.name, t["this"] ? (t = t.properties[0].name, t.value.reserved && (t = new A(e.scope.freeVariable(t.value)))) : t.isComplex() && (t = new A(e.scope.freeVariable("arg"))), t = new Y(t), this.splat && (t = new X(t)), t.updateLocationDataIfMissing(this.locationData), this.reference = t)
                        }, t.prototype.isComplex = function () {
                            return this.name.isComplex()
                        }, t.prototype.eachName = function (e, t) {
                            var n, i, s, o, u, a;
                            if (null == t && (t = this.name), n = function (t) {
                                    var n;
                                    return n = t.properties[0].name, n.value.reserved ? void 0 : e(n.value, n)
                                }, t instanceof A) return e(t.value, t);
                            if (t instanceof Y) return n(t);
                            for (a = t.objects, o = 0, u = a.length; u > o; o++) s = a[o], s instanceof r ? this.eachName(e, s.value.unwrap()) : s instanceof X ? (i = s.name.unwrap(), e(i.value, i)) : s instanceof Y ? s.isArray() || s.isObject() ? this.eachName(e, s.base) : s["this"] ? n(s) : e(s.base.value, s.base) : s instanceof h || s.error("illegal parameter " + s.compile())
                        }, t
                    }(i), e.Splat = X = function (e) {
                        function t(e) {
                            this.name = e.compile ? e : new A(e)
                        }
                        return xt(t, e), t.prototype.children = ["name"], t.prototype.isAssignable = et, t.prototype.assigns = function (e) {
                            return this.name.assigns(e)
                        }, t.prototype.compileToFragments = function (e) {
                            return this.name.compileToFragments(e)
                        }, t.prototype.unwrap = function () {
                            return this.name
                        }, t.compileSplattedArray = function (e, n, r) {
                            var i, s, o, u, a, f, l, c, h, p;
                            for (l = -1;
                                (c = n[++l]) && !(c instanceof t););
                            if (l >= n.length) return [];
                            if (1 === n.length) return c = n[0], a = c.compileToFragments(e, N), r ? a : [].concat(c.makeCode("" + bt("slice") + ".call("), a, c.makeCode(")"));
                            for (i = n.slice(l), f = h = 0, p = i.length; p > h; f = ++h) c = i[f], o = c.compileToFragments(e, N), i[f] = c instanceof t ? [].concat(c.makeCode("" + bt("slice") + ".call("), o, c.makeCode(")")) : [].concat(c.makeCode("["), o, c.makeCode("]"));
                            return 0 === l ? (c = n[0], u = c.joinFragmentArrays(i.slice(1), ", "), i[0].concat(c.makeCode(".concat("), u, c.makeCode(")"))) : (s = function () {
                                var t, r, i, s;
                                for (i = n.slice(0, l), s = [], t = 0, r = i.length; r > t; t++) c = i[t], s.push(c.compileToFragments(e, N));
                                return s
                            }(), s = n[0].joinFragmentArrays(s, ", "), u = n[l].joinFragmentArrays(i, ", "), [].concat(n[0].makeCode("["), s, n[l].makeCode("].concat("), u, lt(n).makeCode(")")))
                        }, t
                    }(i), e.Expansion = h = function (e) {
                        function t() {
                            return t.__super__.constructor.apply(this, arguments)
                        }
                        return xt(t, e), t.prototype.isComplex = _, t.prototype.compileNode = function () {
                            return this.error("Expansion must be used inside a destructuring assignment or parameter list")
                        }, t.prototype.asReference = function () {
                            return this
                        }, t.prototype.eachName = function () {}, t
                    }(i), e.While = Z = function (e) {
                        function t(e, t) {
                            this.condition = (null != t ? t.invert : void 0) ? e.invert() : e, this.guard = null != t ? t.guard : void 0
                        }
                        return xt(t, e), t.prototype.children = ["condition", "guard", "body"], t.prototype.isStatement = et, t.prototype.makeReturn = function (e) {
                            return e ? t.__super__.makeReturn.apply(this, arguments) : (this.returns = !this.jumps({
                                loop: !0
                            }), this)
                        }, t.prototype.addBody = function (e) {
                            return this.body = e, this
                        }, t.prototype.jumps = function () {
                            var e, t, n, r, i;
                            if (e = this.body.expressions, !e.length) return !1;
                            for (r = 0, i = e.length; i > r; r++)
                                if (n = e[r], t = n.jumps({
                                        loop: !0
                                    })) return t;
                            return !1
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r, i;
                            return e.indent += $, i = "", n = this.body, n.isEmpty() ? n = this.makeCode("") : (this.returns && (n.makeReturn(r = e.scope.freeVariable("results")), i = "" + this.tab + r + " = [];\n"), this.guard && (n.expressions.length > 1 ? n.expressions.unshift(new w((new j(this.guard)).invert(), new A("continue"))) : this.guard && (n = s.wrap([new w(this.guard, n)]))), n = [].concat(this.makeCode("\n"), n.compileToFragments(e, L), this.makeCode("\n" + this.tab))), t = [].concat(this.makeCode(i + this.tab + "while ("), this.condition.compileToFragments(e, k), this.makeCode(") {"), n, this.makeCode("}")), this.returns && t.push(this.makeCode("\n" + this.tab + "return " + r + ";")), t
                        }, t
                    }(i), e.Op = H = function (e) {
                        function n(e, t, n, r) {
                            if ("in" === e) return new E(t, n);
                            if ("do" === e) return this.generateDo(t);
                            if ("new" === e) {
                                if (t instanceof o && !t["do"] && !t.isNew) return t.newInstance();
                                (t instanceof a && t.bound || t["do"]) && (t = new j(t))
                            }
                            return this.operator = i[e] || e, this.first = t, this.second = n, this.flip = !!r, this
                        }
                        var i, s;
                        return xt(n, e), i = {
                            "==": "===",
                            "!=": "!==",
                            of: "in"
                        }, s = {
                            "!==": "===",
                            "===": "!=="
                        }, n.prototype.children = ["first", "second"], n.prototype.isSimpleNumber = _, n.prototype.isUnary = function () {
                            return !this.second
                        }, n.prototype.isComplex = function () {
                            var e;
                            return !this.isUnary() || "+" !== (e = this.operator) && "-" !== e || this.first.isComplex()
                        }, n.prototype.isChainable = function () {
                            var e;
                            return "<" === (e = this.operator) || ">" === e || ">=" === e || "<=" === e || "===" === e || "!==" === e
                        }, n.prototype.invert = function () {
                            var e, t, r, i, o;
                            if (this.isChainable() && this.first.isChainable()) {
                                for (e = !0, t = this; t && t.operator;) e && (e = t.operator in s), t = t.first;
                                if (!e) return (new j(this)).invert();
                                for (t = this; t && t.operator;) t.invert = !t.invert, t.operator = s[t.operator], t = t.first;
                                return this
                            }
                            return (i = s[this.operator]) ? (this.operator = i, this.first.unwrap() instanceof n && this.first.invert(), this) : this.second ? (new j(this)).invert() : "!" === this.operator && (r = this.first.unwrap()) instanceof n && ("!" === (o = r.operator) || "in" === o || "instanceof" === o) ? r : new n("!", this)
                        }, n.prototype.unfoldSoak = function (e) {
                            var t;
                            return ("++" === (t = this.operator) || "--" === t || "delete" === t) && yt(e, this, "first")
                        }, n.prototype.generateDo = function (e) {
                            var t, n, i, s, u, f, l, c;
                            for (s = [], n = e instanceof r && (u = e.value.unwrap()) instanceof a ? u : e, c = n.params || [], f = 0, l = c.length; l > f; f++) i = c[f], i.value ? (s.push(i.value), delete i.value) : s.push(i);
                            return t = new o(e, s), t["do"] = !0, t
                        }, n.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o;
                            if (n = this.isChainable() && this.first.isChainable(), n || (this.first.front = this.front), "delete" === this.operator && e.scope.check(this.first.unwrapAll().value) && this.error("delete operand may not be argument or var"), ("--" === (s = this.operator) || "++" === s) && (o = this.first.unwrapAll().value, Tt.call(U, o) >= 0) && this.error('cannot increment/decrement "' + this.first.unwrapAll().value + '"'), this.isUnary()) return this.compileUnary(e);
                            if (n) return this.compileChain(e);
                            switch (this.operator) {
                                case "?":
                                    return this.compileExistence(e);
                                case "**":
                                    return this.compilePower(e);
                                case "//":
                                    return this.compileFloorDivision(e);
                                case "%%":
                                    return this.compileModulo(e);
                                default:
                                    return r = this.first.compileToFragments(e, C), i = this.second.compileToFragments(e, C), t = [].concat(r, this.makeCode(" " + this.operator + " "), i), C >= e.level ? t : this.wrapInBraces(t)
                            }
                        }, n.prototype.compileChain = function (e) {
                            var t, n, r, i;
                            return i = this.first.second.cache(e), this.first.second = i[0], r = i[1], n = this.first.compileToFragments(e, C), t = n.concat(this.makeCode(" " + (this.invert ? "&&" : "||") + " "), r.compileToFragments(e), this.makeCode(" " + this.operator + " "), this.second.compileToFragments(e, C)), this.wrapInBraces(t)
                        }, n.prototype.compileExistence = function (e) {
                            var t, n;
                            return this.first.isComplex() ? (n = new A(e.scope.freeVariable("ref")), t = new j(new r(n, this.first))) : (t = this.first, n = t), (new w(new c(t), n, {
                                type: "if"
                            })).addElse(this.second).compileToFragments(e)
                        }, n.prototype.compileUnary = function (e) {
                            var t, r, i;
                            return r = [], t = this.operator, r.push([this.makeCode(t)]), "!" === t && this.first instanceof c ? (this.first.negated = !this.first.negated, this.first.compileToFragments(e)) : e.level >= x ? (new j(this)).compileToFragments(e) : (i = "+" === t || "-" === t, ("new" === t || "typeof" === t || "delete" === t || i && this.first instanceof n && this.first.operator === t) && r.push([this.makeCode(" ")]), (i && this.first instanceof n || "new" === t && this.first.isStatement(e)) && (this.first = new j(this.first)), r.push(this.first.compileToFragments(e, C)), this.flip && r.reverse(), this.joinFragmentArrays(r, ""))
                        }, n.prototype.compilePower = function (e) {
                            var n;
                            return n = new Y(new A("Math"), [new t(new A("pow"))]), (new o(n, [this.first, this.second])).compileToFragments(e)
                        }, n.prototype.compileFloorDivision = function (e) {
                            var r, i;
                            return i = new Y(new A("Math"), [new t(new A("floor"))]), r = new n("/", this.first, this.second), (new o(i, [r])).compileToFragments(e)
                        }, n.prototype.compileModulo = function (e) {
                            var t;
                            return t = new Y(new A(bt("modulo"))), (new o(t, [this.first, this.second])).compileToFragments(e)
                        }, n.prototype.toString = function (e) {
                            return n.__super__.toString.call(this, e, this.constructor.name + " " + this.operator)
                        }, n
                    }(i), e.In = E = function (e) {
                        function t(e, t) {
                            this.object = e, this.array = t
                        }
                        return xt(t, e), t.prototype.children = ["object", "array"], t.prototype.invert = M, t.prototype.compileNode = function (e) {
                            var t, n, r, i, s;
                            if (this.array instanceof Y && this.array.isArray() && this.array.base.objects.length) {
                                for (s = this.array.base.objects, r = 0, i = s.length; i > r; r++)
                                    if (n = s[r], n instanceof X) {
                                        t = !0;
                                        break
                                    } if (!t) return this.compileOrTest(e)
                            }
                            return this.compileLoopTest(e)
                        }, t.prototype.compileOrTest = function (e) {
                            var t, n, r, i, s, o, u, a, f, l, c, h;
                            for (l = this.object.cache(e, C), o = l[0], s = l[1], c = this.negated ? [" !== ", " && "] : [" === ", " || "], t = c[0], n = c[1], u = [], h = this.array.base.objects, r = a = 0, f = h.length; f > a; r = ++a) i = h[r], r && u.push(this.makeCode(n)), u = u.concat(r ? s : o, this.makeCode(t), i.compileToFragments(e, x));
                            return C > e.level ? u : this.wrapInBraces(u)
                        }, t.prototype.compileLoopTest = function (e) {
                            var t, n, r, i;
                            return i = this.object.cache(e, N), r = i[0], n = i[1], t = [].concat(this.makeCode(bt("indexOf") + ".call("), this.array.compileToFragments(e, N), this.makeCode(", "), n, this.makeCode(") " + (this.negated ? "< 0" : ">= 0"))), ut(r) === ut(n) ? t : (t = r.concat(this.makeCode(", "), t), N > e.level ? t : this.wrapInBraces(t))
                        }, t.prototype.toString = function (e) {
                            return t.__super__.toString.call(this, e, this.constructor.name + (this.negated ? "!" : ""))
                        }, t
                    }(i), e.Try = Q = function (e) {
                        function t(e, t, n, r) {
                            this.attempt = e, this.errorVariable = t, this.recovery = n, this.ensure = r
                        }
                        return xt(t, e), t.prototype.children = ["attempt", "recovery", "ensure"], t.prototype.isStatement = et, t.prototype.jumps = function (e) {
                            var t;
                            return this.attempt.jumps(e) || (null != (t = this.recovery) ? t.jumps(e) : void 0)
                        }, t.prototype.makeReturn = function (e) {
                            return this.attempt && (this.attempt = this.attempt.makeReturn(e)), this.recovery && (this.recovery = this.recovery.makeReturn(e)), this
                        }, t.prototype.compileNode = function (e) {
                            var t, n, i, s;
                            return e.indent += $, s = this.attempt.compileToFragments(e, L), t = this.recovery ? (i = new A("_error"), this.errorVariable ? this.recovery.unshift(new r(this.errorVariable, i)) : void 0, [].concat(this.makeCode(" catch ("), i.compileToFragments(e), this.makeCode(") {\n"), this.recovery.compileToFragments(e, L), this.makeCode("\n" + this.tab + "}"))) : this.ensure || this.recovery ? [] : [this.makeCode(" catch (_error) {}")], n = this.ensure ? [].concat(this.makeCode(" finally {\n"), this.ensure.compileToFragments(e, L), this.makeCode("\n" + this.tab + "}")) : [], [].concat(this.makeCode("" + this.tab + "try {\n"), s, this.makeCode("\n" + this.tab + "}"), t, n)
                        }, t
                    }(i), e.Throw = K = function (e) {
                        function t(e) {
                            this.expression = e
                        }
                        return xt(t, e), t.prototype.children = ["expression"], t.prototype.isStatement = et, t.prototype.jumps = _, t.prototype.makeReturn = J, t.prototype.compileNode = function (e) {
                            return [].concat(this.makeCode(this.tab + "throw "), this.expression.compileToFragments(e), this.makeCode(";"))
                        }, t
                    }(i), e.Existence = c = function (e) {
                        function t(e) {
                            this.expression = e
                        }
                        return xt(t, e), t.prototype.children = ["expression"], t.prototype.invert = M, t.prototype.compileNode = function (e) {
                            var t, n, r, i;
                            return this.expression.front = this.front, r = this.expression.compile(e, C), m.test(r) && !e.scope.check(r) ? (i = this.negated ? ["===", "||"] : ["!==", "&&"], t = i[0], n = i[1], r = "typeof " + r + " " + t + ' "undefined" ' + n + " " + r + " " + t + " null") : r = "" + r + " " + (this.negated ? "==" : "!=") + " null", [this.makeCode(T >= e.level ? r : "(" + r + ")")]
                        }, t
                    }(i), e.Parens = j = function (e) {
                        function t(e) {
                            this.body = e
                        }
                        return xt(t, e), t.prototype.children = ["body"], t.prototype.unwrap = function () {
                            return this.body
                        }, t.prototype.isComplex = function () {
                            return this.body.isComplex()
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r;
                            return n = this.body.unwrap(), n instanceof Y && n.isAtomic() ? (n.front = this.front, n.compileToFragments(e)) : (r = n.compileToFragments(e, k), t = C > e.level && (n instanceof H || n instanceof o || n instanceof d && n.returns), t ? r : this.wrapInBraces(r))
                        }, t
                    }(i), e.For = d = function (e) {
                        function t(e, t) {
                            var n;
                            this.source = t.source, this.guard = t.guard, this.step = t.step, this.name = t.name, this.index = t.index, this.body = s.wrap([e]), this.own = !!t.own, this.object = !!t.object, this.object && (n = [this.index, this.name], this.name = n[0], this.index = n[1]), this.index instanceof Y && this.index.error("index cannot be a pattern matching expression"), this.range = this.source instanceof Y && this.source.base instanceof I && !this.source.properties.length, this.pattern = this.name instanceof Y, this.range && this.index && this.index.error("indexes do not apply to range loops"), this.range && this.pattern && this.name.error("cannot pattern match over range loops"), this.own && !this.object && this.name.error("cannot use own with for-in"), this.returns = !1
                        }
                        return xt(t, e), t.prototype.children = ["body", "source", "guard", "step"], t.prototype.compileNode = function (e) {
                            var t, n, i, o, u, a, f, l, c, h, p, d, v, g, y, b, E, S, x, T, C, k, O, M, _, P, H, B, F, I, R, U, z, W;
                            return t = s.wrap([this.body]), S = null != (z = lt(t.expressions)) ? z.jumps() : void 0, S && S instanceof q && (this.returns = !1), H = this.range ? this.source.base : this.source, P = e.scope, this.pattern || (T = this.name && this.name.compile(e, N)), g = this.index && this.index.compile(e, N), T && !this.pattern && P.find(T), g && P.find(g), this.returns && (_ = P.freeVariable("results")), y = this.object && g || P.freeVariable("i"), b = this.range && T || g || y, E = b !== y ? "" + b + " = " : "", this.step && !this.range && (W = this.cacheToCodeFragments(this.step.cache(e, N)), B = W[0], I = W[1], F = I.match(D)), this.pattern && (T = y), U = "", p = "", f = "", d = this.tab + $, this.range ? h = H.compileToFragments(ht(e, {
                                index: y,
                                name: T,
                                step: this.step
                            })) : (R = this.source.compile(e, N), !T && !this.own || m.test(R) || (f += "" + this.tab + (k = P.freeVariable("ref")) + " = " + R + ";\n", R = k), T && !this.pattern && (C = "" + T + " = " + R + "[" + b + "]"), this.object || (B !== I && (f += "" + this.tab + B + ";\n"), this.step && F && (c = 0 > dt(F[0])) || (x = P.freeVariable("len")), u = "" + E + y + " = 0, " + x + " = " + R + ".length", a = "" + E + y + " = " + R + ".length - 1", i = "" + y + " < " + x, o = "" + y + " >= 0", this.step ? (F ? c && (i = o, u = a) : (i = "" + I + " > 0 ? " + i + " : " + o, u = "(" + I + " > 0 ? (" + u + ") : " + a + ")"), v = "" + y + " += " + I) : v = "" + (b !== y ? "++" + y : "" + y + "++"), h = [this.makeCode("" + u + "; " + i + "; " + E + v)])), this.returns && (O = "" + this.tab + _ + " = [];\n", M = "\n" + this.tab + "return " + _ + ";", t.makeReturn(_)), this.guard && (t.expressions.length > 1 ? t.expressions.unshift(new w((new j(this.guard)).invert(), new A("continue"))) : this.guard && (t = s.wrap([new w(this.guard, t)]))), this.pattern && t.expressions.unshift(new r(this.name, new A("" + R + "[" + b + "]"))), l = [].concat(this.makeCode(f), this.pluckDirectCall(e, t)), C && (U = "\n" + d + C + ";"), this.object && (h = [this.makeCode("" + b + " in " + R)], this.own && (p = "\n" + d + "if (!" + bt("hasProp") + ".call(" + R + ", " + b + ")) continue;")), n = t.compileToFragments(ht(e, {
                                indent: d
                            }), L), n && n.length > 0 && (n = [].concat(this.makeCode("\n"), n, this.makeCode("\n"))), [].concat(l, this.makeCode("" + (O || "") + this.tab + "for ("), h, this.makeCode(") {" + p + U), n, this.makeCode("" + this.tab + "}" + (M || "")))
                        }, t.prototype.pluckDirectCall = function (e, t) {
                            var n, i, s, u, f, l, c, h, p, d, v, m, g, y, b, w;
                            for (i = [], d = t.expressions, f = h = 0, p = d.length; p > h; f = ++h) s = d[f], s = s.unwrapAll(), s instanceof o && (c = null != (v = s.variable) ? v.unwrapAll() : void 0, (c instanceof a || c instanceof Y && (null != (m = c.base) ? m.unwrapAll() : void 0) instanceof a && 1 === c.properties.length && ("call" === (g = null != (y = c.properties[0].name) ? y.value : void 0) || "apply" === g)) && (u = (null != (b = c.base) ? b.unwrapAll() : void 0) || c, l = new A(e.scope.freeVariable("fn")), n = new Y(l), c.base && (w = [n, c], c.base = w[0], n = w[1]), t.expressions[f] = new o(n, s.args), i = i.concat(this.makeCode(this.tab), (new r(l, u)).compileToFragments(e, L), this.makeCode(";\n"))));
                            return i
                        }, t
                    }(Z), e.Switch = V = function (e) {
                        function t(e, t, n) {
                            this.subject = e, this.cases = t, this.otherwise = n
                        }
                        return xt(t, e), t.prototype.children = ["subject", "cases", "otherwise"], t.prototype.isStatement = et, t.prototype.jumps = function (e) {
                            var t, n, r, i, s, o, u, a;
                            for (null == e && (e = {
                                    block: !0
                                }), o = this.cases, i = 0, s = o.length; s > i; i++)
                                if (u = o[i], n = u[0], t = u[1], r = t.jumps(e)) return r;
                            return null != (a = this.otherwise) ? a.jumps(e) : void 0
                        }, t.prototype.makeReturn = function (e) {
                            var t, n, r, i, o;
                            for (i = this.cases, n = 0, r = i.length; r > n; n++) t = i[n], t[1].makeReturn(e);
                            return e && (this.otherwise || (this.otherwise = new s([new A("void 0")]))), null != (o = this.otherwise) && o.makeReturn(e), this
                        }, t.prototype.compileNode = function (e) {
                            var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m;
                            for (a = e.indent + $, f = e.indent = a + $, o = [].concat(this.makeCode(this.tab + "switch ("), this.subject ? this.subject.compileToFragments(e, k) : this.makeCode("false"), this.makeCode(") {\n")), d = this.cases, u = l = 0, h = d.length; h > l; u = ++l) {
                                for (v = d[u], i = v[0], t = v[1], m = ot([i]), c = 0, p = m.length; p > c; c++) r = m[c], this.subject || (r = r.invert()), o = o.concat(this.makeCode(a + "case "), r.compileToFragments(e, k), this.makeCode(":\n"));
                                if ((n = t.compileToFragments(e, L)).length > 0 && (o = o.concat(n, this.makeCode("\n"))), u === this.cases.length - 1 && !this.otherwise) break;
                                s = this.lastNonComment(t.expressions), s instanceof q || s instanceof A && s.jumps() && "debugger" !== s.value || o.push(r.makeCode(f + "break;\n"))
                            }
                            return this.otherwise && this.otherwise.expressions.length && o.push.apply(o, [this.makeCode(a + "default:\n")].concat(Nt.call(this.otherwise.compileToFragments(e, L)), [this.makeCode("\n")])), o.push(this.makeCode(this.tab + "}")), o
                        }, t
                    }(i), e.If = w = function (e) {
                        function t(e, t, n) {
                            this.body = t, null == n && (n = {}), this.condition = "unless" === n.type ? e.invert() : e, this.elseBody = null, this.isChain = !1, this.soak = n.soak
                        }
                        return xt(t, e), t.prototype.children = ["condition", "body", "elseBody"], t.prototype.bodyNode = function () {
                            var e;
                            return null != (e = this.body) ? e.unwrap() : void 0
                        }, t.prototype.elseBodyNode = function () {
                            var e;
                            return null != (e = this.elseBody) ? e.unwrap() : void 0
                        }, t.prototype.addElse = function (e) {
                            return this.isChain ? this.elseBodyNode().addElse(e) : (this.isChain = e instanceof t, this.elseBody = this.ensureBlock(e), this.elseBody.updateLocationDataIfMissing(e.locationData)), this
                        }, t.prototype.isStatement = function (e) {
                            var t;
                            return (null != e ? e.level : void 0) === L || this.bodyNode().isStatement(e) || (null != (t = this.elseBodyNode()) ? t.isStatement(e) : void 0)
                        }, t.prototype.jumps = function (e) {
                            var t;
                            return this.body.jumps(e) || (null != (t = this.elseBody) ? t.jumps(e) : void 0)
                        }, t.prototype.compileNode = function (e) {
                            return this.isStatement(e) ? this.compileStatement(e) : this.compileExpression(e)
                        }, t.prototype.makeReturn = function (e) {
                            return e && (this.elseBody || (this.elseBody = new s([new A("void 0")]))), this.body && (this.body = new s([this.body.makeReturn(e)])), this.elseBody && (this.elseBody = new s([this.elseBody.makeReturn(e)])), this
                        }, t.prototype.ensureBlock = function (e) {
                            return e instanceof s ? e : new s([e])
                        }, t.prototype.compileStatement = function (e) {
                            var n, r, i, s, o, u, a;
                            return i = rt(e, "chainChild"), (o = rt(e, "isExistentialEquals")) ? (new t(this.condition.invert(), this.elseBodyNode(), {
                                type: "if"
                            })).compileToFragments(e) : (a = e.indent + $, s = this.condition.compileToFragments(e, k), r = this.ensureBlock(this.body).compileToFragments(ht(e, {
                                indent: a
                            })), u = [].concat(this.makeCode("if ("), s, this.makeCode(") {\n"), r, this.makeCode("\n" + this.tab + "}")), i || u.unshift(this.makeCode(this.tab)), this.elseBody ? (n = u.concat(this.makeCode(" else ")), this.isChain ? (e.chainChild = !0, n = n.concat(this.elseBody.unwrap().compileToFragments(e, L))) : n = n.concat(this.makeCode("{\n"), this.elseBody.compileToFragments(ht(e, {
                                indent: a
                            }), L), this.makeCode("\n" + this.tab + "}")), n) : u)
                        }, t.prototype.compileExpression = function (e) {
                            var t, n, r, i;
                            return r = this.condition.compileToFragments(e, T), n = this.bodyNode().compileToFragments(e, N), t = this.elseBodyNode() ? this.elseBodyNode().compileToFragments(e, N) : [this.makeCode("void 0")], i = r.concat(this.makeCode(" ? "), n, this.makeCode(" : "), t), e.level >= T ? this.wrapInBraces(i) : i
                        }, t.prototype.unfoldSoak = function () {
                            return this.soak && this
                        }, t
                    }(i), G = {
                        "extends": function () {
                            return "function(child, parent) { for (var key in parent) { if (" + bt("hasProp") + ".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }"
                        },
                        bind: function () {
                            return "function(fn, me){ return function(){ return fn.apply(me, arguments); }; }"
                        },
                        indexOf: function () {
                            return "[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }"
                        },
                        modulo: function () {
                            return "function(a, b) { return (+a % (b = +b) + b) % b; }"
                        },
                        hasProp: function () {
                            return "{}.hasOwnProperty"
                        },
                        slice: function () {
                            return "[].slice"
                        }
                    }, L = 1, k = 2, N = 3, T = 4, C = 5, x = 6, $ = "  ", g = "[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*", m = RegExp("^" + g + "$"), R = /^[+-]?\d+$/, v = /^[+-]?0x[\da-f]+/i, D = /^[+-]?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)$/i, O = RegExp("^(" + g + ")(\\.prototype)?(?:\\.(" + g + ")|\\[(\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*')\\]|\\[(0x[\\da-fA-F]+|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\])$"), b = /^['"]/, y = /^\//, bt = function (e) {
                        var t;
                        return t = "__" + e, z.root.assign(t, G[e]()), t
                    }, pt = function (e, t) {
                        return e = e.replace(/\n/g, "$&" + t), e.replace(/\s+$/, "")
                    }, dt = function (e) {
                        return null == e ? 0 : e.match(v) ? parseInt(e, 16) : parseFloat(e)
                    }, at = function (e) {
                        return e instanceof A && "arguments" === e.value && !e.asKey
                    }, ft = function (e) {
                        return e instanceof A && "this" === e.value && !e.asKey || e instanceof a && e.bound || e instanceof o && e.isSuper
                    }, yt = function (e, t, n) {
                        var r;
                        if (r = t[n].unfoldSoak(e)) return t[n] = r.body, r.body = new Y(t), r
                    }
                }.call(this), t.exports
            }(), require["./sourcemap"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var e, n;
                    e = function () {
                        function e(e) {
                            this.line = e, this.columns = []
                        }
                        return e.prototype.add = function (e, t, n) {
                            var r, i;
                            return i = t[0], r = t[1], null == n && (n = {}), this.columns[e] && n.noReplace ? void 0 : this.columns[e] = {
                                line: this.line,
                                column: e,
                                sourceLine: i,
                                sourceColumn: r
                            }
                        }, e.prototype.sourceLocation = function (e) {
                            for (var t; !((t = this.columns[e]) || 0 >= e);) e--;
                            return t && [t.sourceLine, t.sourceColumn]
                        }, e
                    }(), n = function () {
                        function t() {
                            this.lines = []
                        }
                        var n, r, i, s;
                        return t.prototype.add = function (t, n, r) {
                            var i, s, o, u;
                            return null == r && (r = {}), s = n[0], i = n[1], o = (u = this.lines)[s] || (u[s] = new e(s)), o.add(i, t, r)
                        }, t.prototype.sourceLocation = function (e) {
                            var t, n, r;
                            for (n = e[0], t = e[1]; !((r = this.lines[n]) || 0 >= n);) n--;
                            return r && r.sourceLocation(t)
                        }, t.prototype.generate = function (e, t) {
                            var n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g;
                            for (null == e && (e = {}), null == t && (t = null), c = 0, r = 0, s = 0, i = 0, f = !1, n = "", m = this.lines, u = h = 0, d = m.length; d > h; u = ++h)
                                if (o = m[u])
                                    for (g = o.columns, p = 0, v = g.length; v > p; p++)
                                        if (a = g[p]) {
                                            for (; a.line > c;) r = 0, f = !1, n += ";", c++;
                                            f && (n += ",", f = !1), n += this.encodeVlq(a.column - r), r = a.column, n += this.encodeVlq(0), n += this.encodeVlq(a.sourceLine - s), s = a.sourceLine, n += this.encodeVlq(a.sourceColumn - i), i = a.sourceColumn, f = !0
                                        } return l = {
                                version: 3,
                                file: e.generatedFile || "",
                                sourceRoot: e.sourceRoot || "",
                                sources: e.sourceFiles || [""],
                                names: [],
                                mappings: n
                            }, e.inline && (l.sourcesContent = [t]), JSON.stringify(l, null, 2)
                        }, i = 5, r = 1 << i, s = r - 1, t.prototype.encodeVlq = function (e) {
                            var t, n, o, u;
                            for (t = "", o = 0 > e ? 1 : 0, u = (Math.abs(e) << 1) + o; u || !t;) n = u & s, u >>= i, u && (n |= r), t += this.encodeBase64(n);
                            return t
                        }, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t.prototype.encodeBase64 = function (e) {
                            return n[e] || function () {
                                throw Error("Cannot Base64 encode value: " + e)
                            }()
                        }, t
                    }(), t.exports = n
                }.call(this), t.exports
            }(), require["./coffee-script"] = function () {
                var e = {},
                    t = {
                        exports: e
                    };
                return function () {
                    var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b = {}.hasOwnProperty,
                        w = [].indexOf || function (e) {
                            for (var t = 0, n = this.length; n > t; t++)
                                if (t in this && this[t] === e) return t;
                            return -1
                        };
                    if (o = require("fs"), p = require("vm"), c = require("path"), t = require("./lexer").Lexer, l = require("./parser").parser, a = require("./helpers"), n = require("./sourcemap"), e.VERSION = "1.8.0", e.FILE_EXTENSIONS = [".coffee", ".litcoffee", ".coffee.md"], e.helpers = a, d = function (e) {
                            return function (t, n) {
                                var r;
                                null == n && (n = {});
                                try {
                                    return e.call(this, t, n)
                                } catch (i) {
                                    throw r = i, a.updateSyntaxError(r, t, n.filename)
                                }
                            }
                        }, e.compile = r = d(function (e, t) {
                            var r, i, s, o, u, c, h, p, d, v, m, g, y;
                            for (v = a.merge, o = a.extend, t = o({}, t), t.sourceMap && (d = new n), c = l.parse(f.tokenize(e, t)).compileToFragments(t), s = 0, t.header && (s += 1), t.shiftLine && (s += 1), i = 0, p = "", g = 0, y = c.length; y > g; g++) u = c[g], t.sourceMap && (u.locationData && d.add([u.locationData.first_line, u.locationData.first_column], [s, i], {
                                noReplace: !0
                            }), m = a.count(u.code, "\n"), s += m, m ? i = u.code.length - (u.code.lastIndexOf("\n") + 1) : i += u.code.length), p += u.code;
                            return t.header && (h = "Generated by CoffeeScript " + this.VERSION, p = "// " + h + "\n" + p), t.sourceMap ? (r = {
                                js: p
                            }, r.sourceMap = d, r.v3SourceMap = d.generate(t, e), r) : p
                        }), e.tokens = d(function (e, t) {
                            return f.tokenize(e, t)
                        }), e.nodes = d(function (e, t) {
                            return "string" == typeof e ? l.parse(f.tokenize(e, t)) : l.parse(e)
                        }), e.run = function (e, t) {
                            var n, i, s, u;
                            return null == t && (t = {}), s = require.main, s.filename = process.argv[1] = t.filename ? o.realpathSync(t.filename) : ".", s.moduleCache && (s.moduleCache = {}), i = t.filename ? c.dirname(o.realpathSync(t.filename)) : o.realpathSync("."), s.paths = require("module")._nodeModulePaths(i), (!a.isCoffee(s.filename) || require.extensions) && (n = r(e, t), e = null != (u = n.js) ? u : n), s._compile(e, s.filename)
                        }, e.eval = function (e, t) {
                            var n, i, s, o, u, a, f, l, h, d, v, m, g, y;
                            if (null == t && (t = {}), e = e.trim()) {
                                if (i = p.Script) {
                                    if (null != t.sandbox) {
                                        if (t.sandbox instanceof i.createContext().constructor) f = t.sandbox;
                                        else {
                                            f = i.createContext(), m = t.sandbox;
                                            for (o in m) b.call(m, o) && (l = m[o], f[o] = l)
                                        }
                                        f.global = f.root = f.GLOBAL = f
                                    } else f = global;
                                    if (f.__filename = t.filename || "eval", f.__dirname = c.dirname(f.__filename), f === global && !f.module && !f.require) {
                                        for (n = require("module"), f.module = v = new n(t.modulename || "eval"), f.require = y = function (e) {
                                                return n._load(e, v, !0)
                                            }, v.filename = f.__filename, g = Object.getOwnPropertyNames(require), h = 0, d = g.length; d > h; h++) a = g[h], "paths" !== a && (y[a] = require[a]);
                                        y.paths = v.paths = n._nodeModulePaths(process.cwd()), y.resolve = function (e) {
                                            return n._resolveFilename(e, v)
                                        }
                                    }
                                }
                                u = {};
                                for (o in t) b.call(t, o) && (l = t[o], u[o] = l);
                                return u.bare = !0, s = r(e, u), f === global ? p.runInThisContext(s) : p.runInContext(s, f)
                            }
                        }, e.register = function () {
                            return require("./register")
                        }, require.extensions)
                        for (y = this.FILE_EXTENSIONS, m = 0, g = y.length; g > m; m++) i = y[m], null == (v = require.extensions)[i] && (v[i] = function () {
                            throw Error("Use CoffeeScript.register() or require the coffee-script/register module to require " + i + " files.")
                        });
                    e._compileFile = function (e, t) {
                        var n, i, s, u;
                        null == t && (t = !1), s = o.readFileSync(e, "utf8"), u = 65279 === s.charCodeAt(0) ? s.substring(1) : s;
                        try {
                            n = r(u, {
                                filename: e,
                                sourceMap: t,
                                literate: a.isLiterate(e)
                            })
                        } catch (f) {
                            throw i = f, a.updateSyntaxError(i, u, e)
                        }
                        return n
                    }, f = new t, l.lexer = {
                        lex: function () {
                            var e, t;
                            return t = this.tokens[this.pos++], t ? (e = t[0], this.yytext = t[1], this.yylloc = t[2], this.errorToken = t.origin || t, this.yylineno = this.yylloc.first_line) : e = "", e
                        },
                        setInput: function (e) {
                            return this.tokens = e, this.pos = 0
                        },
                        upcomingInput: function () {
                            return ""
                        }
                    }, l.yy = require("./nodes"), l.yy.parseError = function (e, t) {
                        var n, r, i, s, o, u, f;
                        return o = t.token, f = l.lexer, s = f.errorToken, u = f.tokens, r = s[0], i = s[1], n = s[2], i = s === u[u.length - 1] ? "end of input" : "INDENT" === r || "OUTDENT" === r ? "indentation" : a.nameWhitespaceCharacter(i), a.throwSyntaxError("unexpected " + i, n)
                    }, s = function (e, t) {
                        var n, r, i, s, o, u, a, f, l, c, h, p;
                        return s = void 0, i = "", e.isNative() ? i = "native" : (e.isEval() ? (s = e.getScriptNameOrSourceURL(), s || (i = "" + e.getEvalOrigin() + ", ")) : s = e.getFileName(), s || (s = "<anonymous>"), f = e.getLineNumber(), r = e.getColumnNumber(), c = t(s, f, r), i = c ? "" + s + ":" + c[0] + ":" + c[1] : "" + s + ":" + f + ":" + r), o = e.getFunctionName(), u = e.isConstructor(), a = !e.isToplevel() && !u, a ? (l = e.getMethodName(), p = e.getTypeName(), o ? (h = n = "", p && o.indexOf(p) && (h = "" + p + "."), l && o.indexOf("." + l) !== o.length - l.length - 1 && (n = " [as " + l + "]"), "" + h + o + n + " (" + i + ")") : "" + p + "." + (l || "<anonymous>") + " (" + i + ")") : u ? "new " + (o || "<anonymous>") + " (" + i + ")" : o ? "" + o + " (" + i + ")" : i
                    }, h = {}, u = function (t) {
                        var n, r;
                        if (h[t]) return h[t];
                        if (r = null != c ? c.extname(t) : void 0, !(0 > w.call(e.FILE_EXTENSIONS, r))) return n = e._compileFile(t, !0), h[t] = n.sourceMap
                    }, Error.prepareStackTrace = function (t, n) {
                        var r, i, o;
                        return o = function (e, t, n) {
                            var r, i;
                            return i = u(e), i && (r = i.sourceLocation([t - 1, n - 1])), r ? [r[0] + 1, r[1] + 1] : null
                        }, i = function () {
                            var t, i, u;
                            for (u = [], t = 0, i = n.length; i > t && (r = n[t], r.getFunction() !== e.run); t++) u.push("  at " + s(r, o));
                            return u
                        }(), "" + ("" + t) + "\n" + i.join("\n") + "\n"
                    }
                }.call(this), t.exports
            }(), require["./browser"] = function () {
                var exports = {},
                    module = {
                        exports: exports
                    };
                return function () {
                    var CoffeeScript, compile, runScripts, __indexOf = [].indexOf || function (e) {
                        for (var t = 0, n = this.length; n > t; t++)
                            if (t in this && this[t] === e) return t;
                        return -1
                    };
                    CoffeeScript = require("./coffee-script"), CoffeeScript.require = require, compile = CoffeeScript.compile, CoffeeScript.eval = function (code, options) {
                        return null == options && (options = {}), null == options.bare && (options.bare = !0), eval(compile(code, options))
                    }, CoffeeScript.run = function (e, t) {
                        return null == t && (t = {}), t.bare = !0, t.shiftLine = !0, Function(compile(e, t))()
                    }, "undefined" != typeof window && null !== window && ("undefined" != typeof btoa && null !== btoa && "undefined" != typeof JSON && null !== JSON && "undefined" != typeof unescape && null !== unescape && "undefined" != typeof encodeURIComponent && null !== encodeURIComponent && (compile = function (e, t) {
                        var n, r, i;
                        return null == t && (t = {}), t.sourceMap = !0, t.inline = !0, i = CoffeeScript.compile(e, t), n = i.js, r = i.v3SourceMap, "" + n + "\n//# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(r))) + "\n//# sourceURL=coffeescript"
                    }), CoffeeScript.load = function (e, t, n, r) {
                        var i;
                        return null == n && (n = {}), null == r && (r = !1), n.sourceFiles = [e], i = window.ActiveXObject ? new window.ActiveXObject("Microsoft.XMLHTTP") : new window.XMLHttpRequest, i.open("GET", e, !0), "overrideMimeType" in i && i.overrideMimeType("text/plain"), i.onreadystatechange = function () {
                            var s, o;
                            if (4 === i.readyState) {
                                if (0 !== (o = i.status) && 200 !== o) throw Error("Could not load " + e);
                                if (s = [i.responseText, n], r || CoffeeScript.run.apply(CoffeeScript, s), t) return t(s)
                            }
                        }, i.send(null)
                    }, runScripts = function () {
                        var e, t, n, r, i, s, o, u, a, f, l;
                        for (u = window.document.getElementsByTagName("script"), t = ["text/coffeescript", "text/literate-coffeescript"], e = function () {
                                var e, n, r, i;
                                for (i = [], e = 0, n = u.length; n > e; e++) s = u[e], r = s.type, __indexOf.call(t, r) >= 0 && i.push(s);
                                return i
                            }(), i = 0, n = function () {
                                var t;
                                return t = e[i], t instanceof Array ? (CoffeeScript.run.apply(CoffeeScript, t), i++, n()) : void 0
                            }, a = function (r, i) {
                                var s;
                                return s = {
                                    literate: r.type === t[1]
                                }, r.src ? CoffeeScript.load(r.src, function (t) {
                                    return e[i] = t, n()
                                }, s, !0) : (s.sourceFiles = ["embedded"], e[i] = [r.innerHTML, s])
                            }, r = f = 0, l = e.length; l > f; r = ++f) o = e[r], a(o, r);
                        return n()
                    }, window.addEventListener ? window.addEventListener("DOMContentLoaded", runScripts, !1) : window.attachEvent("onload", runScripts))
                }.call(this), module.exports
            }(), require["./coffee-script"]
        }();
        "function" == typeof define && define.amd ? define("coffee-script", [], function () {
            return CoffeeScript
        }) : root.CoffeeScript = CoffeeScript
    }(this);
var Base64 = {
    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    encode: function (e) {
        var t = "",
            n, r, i, s, o, u, a, f = 0;
        e = Base64._utf8_encode(e);
        while (f < e.length) n = e.charCodeAt(f++), r = e.charCodeAt(f++), i = e.charCodeAt(f++), s = n >> 2, o = (n & 3) << 4 | r >> 4, u = (r & 15) << 2 | i >> 6, a = i & 63, isNaN(r) ? u = a = 64 : isNaN(i) && (a = 64), t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a);
        return t
    },
    decode: function (e) {
        var t = "",
            n, r, i, s, o, u, a, f = 0;
        e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        while (f < e.length) s = this._keyStr.indexOf(e.charAt(f++)), o = this._keyStr.indexOf(e.charAt(f++)), u = this._keyStr.indexOf(e.charAt(f++)), a = this._keyStr.indexOf(e.charAt(f++)), n = s << 2 | o >> 4, r = (o & 15) << 4 | u >> 2, i = (u & 3) << 6 | a, t += String.fromCharCode(n), u != 64 && (t += String.fromCharCode(r)), a != 64 && (t += String.fromCharCode(i));
        return t = Base64._utf8_decode(t), t
    },
    _utf8_encode: function (e) {
        e = e.replace(/\r\n/g, "\n");
        var t = "";
        for (var n = 0; n < e.length; n++) {
            var r = e.charCodeAt(n);
            r < 128 ? t += String.fromCharCode(r) : r > 127 && r < 2048 ? (t += String.fromCharCode(r >> 6 | 192), t += String.fromCharCode(r & 63 | 128)) : (t += String.fromCharCode(r >> 12 | 224), t += String.fromCharCode(r >> 6 & 63 | 128), t += String.fromCharCode(r & 63 | 128))
        }
        return t
    },
    _utf8_decode: function (e) {
        var t = "",
            n = 0,
            r = c1 = c2 = 0;
        while (n < e.length) r = e.charCodeAt(n), r < 128 ? (t += String.fromCharCode(r), n++) : r > 191 && r < 224 ? (c2 = e.charCodeAt(n + 1), t += String.fromCharCode((r & 31) << 6 | c2 & 63), n += 2) : (c2 = e.charCodeAt(n + 1), c3 = e.charCodeAt(n + 2), t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63), n += 3);
        return t
    }
};
define("cs", ["coffee-script"], function (e) {
        var t, n, r = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"],
            i = function () {
                throw new Error("Environment unsupported.")
            },
            s = {};
        return typeof process != "undefined" && process.versions && !!process.versions.node ? (t = require.nodeRequire("fs"), i = function (e, n) {
            n(t.readFileSync(e, "utf8"))
        }) : typeof window != "undefined" && window.navigator && window.document || typeof importScripts != "undefined" ? (n = function () {
            var e, t, n;
            if (typeof XMLHttpRequest != "undefined") return new XMLHttpRequest;
            for (t = 0; t < 3; t += 1) {
                n = r[t];
                try {
                    e = new ActiveXObject(n)
                } catch (i) {}
                if (e) {
                    r = [n];
                    break
                }
            }
            if (!e) throw new Error("getXhr(): XMLHttpRequest not available");
            return e
        }, i = function (e, t) {
            var r = n();
            r.open("GET", e, !0), r.onreadystatechange = function (e) {
                r.readyState === 4 && t(r.responseText)
            }, r.send(null)
        }) : typeof Packages != "undefined" && (i = function (e, t) {
            var n, r, i = "utf-8",
                s = new java.io.File(e),
                o = java.lang.System.getProperty("line.separator"),
                u = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(s), i)),
                a = "";
            try {
                n = new java.lang.StringBuffer, r = u.readLine(), r && r.length() && r.charAt(0) === 65279 && (r = r.substring(1)), n.append(r);
                while ((r = u.readLine()) !== null) n.append(o), n.append(r);
                a = String(n.toString())
            } finally {
                u.close()
            }
            t(a)
        }), {
            fetchText: i,
            get: function () {
                return e
            },
            write: function (e, t, n) {
                if (s.hasOwnProperty(t)) {
                    var r = s[t];
                    n.asModule(e + "!" + t, r)
                }
            },
            version: "0.4.3",
            load: function (t, n, r, o) {
                var u = e.helpers.isCoffee(t) ? t : t + ".coffee",
                    a = n.toUrl(u);
                i(a, function (i) {
                    var f = o.CoffeeScript || {};
                    f.literate = e.helpers.isLiterate(u), f.sourceMap = !0, f.header = !0, f.inline = !0, f.sourceFiles = [t + f.literate ? "" : ".coffee"], f.generatedFile = t + f.literate ? "" : ".coffee";
                    var l;
                    try {
                        l = e.compile(i, f)
                    } catch (c) {
                        throw c.message = "In " + a + ", " + c.message, c
                    }
                    i = l.js, o.isBuild || (i += "\n//# sourceMappingURL=data:application/json;base64," + Base64.encode(l.v3SourceMap || "") + "\n//# sourceURL=" + a), o.isBuild && (s[t] = i), r.fromText(t, i), n([t], function (e) {
                        r(e)
                    })
                })
            }
        }
    }), ! function (e, t) {
        "function" == typeof define && define.amd ? define("lib/handlebars.min", [], t) : "object" == typeof exports ? module.exports = t() : e.Handlebars = e.Handlebars || t()
    }(this, function () {
        var e = function () {
                function e(e) {
                    this.string = e
                }
                var t;
                return e.prototype.toString = function () {
                    return "" + this.string
                }, t = e
            }(),
            t = function (e) {
                function t(e) {
                    return a[e]
                }

                function n(e) {
                    for (var t = 1; t < arguments.length; t++)
                        for (var n in arguments[t]) Object.prototype.hasOwnProperty.call(arguments[t], n) && (e[n] = arguments[t][n]);
                    return e
                }

                function r(e) {
                    return e instanceof u ? e.toString() : null == e ? "" : e ? (e = "" + e, l.test(e) ? e.replace(f, t) : e) : e + ""
                }

                function i(e) {
                    return e || 0 === e ? p(e) && 0 === e.length ? !0 : !1 : !0
                }

                function s(e, t) {
                    return (e ? e + "." : "") + t
                }
                var o = {},
                    u = e,
                    a = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    },
                    f = /[&<>"'`]/g,
                    l = /[&<>"'`]/;
                o.extend = n;
                var c = Object.prototype.toString;
                o.toString = c;
                var h = function (e) {
                    return "function" == typeof e
                };
                h(/x/) && (h = function (e) {
                    return "function" == typeof e && "[object Function]" === c.call(e)
                });
                var h;
                o.isFunction = h;
                var p = Array.isArray || function (e) {
                    return e && "object" == typeof e ? "[object Array]" === c.call(e) : !1
                };
                return o.isArray = p, o.escapeExpression = r, o.isEmpty = i, o.appendContextPath = s, o
            }(e),
            n = function () {
                function e(e, t) {
                    var r;
                    t && t.firstLine && (r = t.firstLine, e += " - " + r + ":" + t.firstColumn);
                    for (var i = Error.prototype.constructor.call(this, e), s = 0; s < n.length; s++) this[n[s]] = i[n[s]];
                    r && (this.lineNumber = r, this.column = t.firstColumn)
                }
                var t, n = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];
                return e.prototype = new Error, t = e
            }(),
            r = function (e, t) {
                function n(e, t) {
                    this.helpers = e || {}, this.partials = t || {}, r(this)
                }

                function r(e) {
                    e.registerHelper("helperMissing", function () {
                        if (1 === arguments.length) return void 0;
                        throw new o("Missing helper: '" + arguments[arguments.length - 1].name + "'")
                    }), e.registerHelper("blockHelperMissing", function (t, n) {
                        var r = n.inverse,
                            i = n.fn;
                        if (t === !0) return i(this);
                        if (t === !1 || null == t) return r(this);
                        if (l(t)) return t.length > 0 ? (n.ids && (n.ids = [n.name]), e.helpers.each(t, n)) : r(this);
                        if (n.data && n.ids) {
                            var o = m(n.data);
                            o.contextPath = s.appendContextPath(n.data.contextPath, n.name), n = {
                                data: o
                            }
                        }
                        return i(t, n)
                    }), e.registerHelper("each", function (e, t) {
                        if (!t) throw new o("Must pass iterator to #each");
                        var n, r, i = t.fn,
                            u = t.inverse,
                            a = 0,
                            f = "";
                        if (t.data && t.ids && (r = s.appendContextPath(t.data.contextPath, t.ids[0]) + "."), c(e) && (e = e.call(this)), t.data && (n = m(t.data)), e && "object" == typeof e)
                            if (l(e))
                                for (var h = e.length; h > a; a++) n && (n.index = a, n.first = 0 === a, n.last = a === e.length - 1, r && (n.contextPath = r + a)), f += i(e[a], {
                                    data: n
                                });
                            else
                                for (var p in e) e.hasOwnProperty(p) && (n && (n.key = p, n.index = a, n.first = 0 === a, r && (n.contextPath = r + p)), f += i(e[p], {
                                    data: n
                                }), a++);
                        return 0 === a && (f = u(this)), f
                    }), e.registerHelper("if", function (e, t) {
                        return c(e) && (e = e.call(this)), !t.hash.includeZero && !e || s.isEmpty(e) ? t.inverse(this) : t.fn(this)
                    }), e.registerHelper("unless", function (t, n) {
                        return e.helpers["if"].call(this, t, {
                            fn: n.inverse,
                            inverse: n.fn,
                            hash: n.hash
                        })
                    }), e.registerHelper("with", function (e, t) {
                        c(e) && (e = e.call(this));
                        var n = t.fn;
                        if (s.isEmpty(e)) return t.inverse(this);
                        if (t.data && t.ids) {
                            var r = m(t.data);
                            r.contextPath = s.appendContextPath(t.data.contextPath, t.ids[0]), t = {
                                data: r
                            }
                        }
                        return n(e, t)
                    }), e.registerHelper("log", function (t, n) {
                        var r = n.data && null != n.data.level ? parseInt(n.data.level, 10) : 1;
                        e.log(r, t)
                    }), e.registerHelper("lookup", function (e, t) {
                        return e && e[t]
                    })
                }
                var i = {},
                    s = e,
                    o = t,
                    u = "2.0.0";
                i.VERSION = u;
                var a = 6;
                i.COMPILER_REVISION = a;
                var f = {
                    1: "<= 1.0.rc.2",
                    2: "== 1.0.0-rc.3",
                    3: "== 1.0.0-rc.4",
                    4: "== 1.x.x",
                    5: "== 2.0.0-alpha.x",
                    6: ">= 2.0.0-beta.1"
                };
                i.REVISION_CHANGES = f;
                var l = s.isArray,
                    c = s.isFunction,
                    h = s.toString,
                    p = "[object Object]";
                i.HandlebarsEnvironment = n, n.prototype = {
                    constructor: n,
                    logger: d,
                    log: v,
                    registerHelper: function (e, t) {
                        if (h.call(e) === p) {
                            if (t) throw new o("Arg not supported with multiple helpers");
                            s.extend(this.helpers, e)
                        } else this.helpers[e] = t
                    },
                    unregisterHelper: function (e) {
                        delete this.helpers[e]
                    },
                    registerPartial: function (e, t) {
                        h.call(e) === p ? s.extend(this.partials, e) : this.partials[e] = t
                    },
                    unregisterPartial: function (e) {
                        delete this.partials[e]
                    }
                };
                var d = {
                    methodMap: {
                        0: "debug",
                        1: "info",
                        2: "warn",
                        3: "error"
                    },
                    DEBUG: 0,
                    INFO: 1,
                    WARN: 2,
                    ERROR: 3,
                    level: 3,
                    log: function (e, t) {
                        if (d.level <= e) {
                            var n = d.methodMap[e];
                            "undefined" != typeof console && console[n] && console[n].call(console, t)
                        }
                    }
                };
                i.logger = d;
                var v = d.log;
                i.log = v;
                var m = function (e) {
                    var t = s.extend({}, e);
                    return t._parent = e, t
                };
                return i.createFrame = m, i
            }(t, n),
            i = function (e, t, n) {
                function r(e) {
                    var t = e && e[0] || 1,
                        n = h;
                    if (t !== n) {
                        if (n > t) {
                            var r = p[n],
                                i = p[t];
                            throw new c("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + r + ") or downgrade your runtime to an older version (" + i + ").")
                        }
                        throw new c("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + e[1] + ").")
                    }
                }

                function i(e, t) {
                    if (!t) throw new c("No environment passed to template");
                    if (!e || !e.main) throw new c("Unknown template object: " + typeof e);
                    t.VM.checkRevision(e.compiler);
                    var n = function (n, r, i, s, o, u, a, f, h) {
                            o && (s = l.extend({}, s, o));
                            var p = t.VM.invokePartial.call(this, n, i, s, u, a, f, h);
                            if (null == p && t.compile) {
                                var d = {
                                    helpers: u,
                                    partials: a,
                                    data: f,
                                    depths: h
                                };
                                a[i] = t.compile(n, {
                                    data: void 0 !== f,
                                    compat: e.compat
                                }, t), p = a[i](s, d)
                            }
                            if (null != p) {
                                if (r) {
                                    for (var v = p.split("\n"), m = 0, g = v.length; g > m && (v[m] || m + 1 !== g); m++) v[m] = r + v[m];
                                    p = v.join("\n")
                                }
                                return p
                            }
                            throw new c("The partial " + i + " could not be compiled when running in runtime-only mode")
                        },
                        r = {
                            lookup: function (e, t) {
                                for (var n = e.length, r = 0; n > r; r++)
                                    if (e[r] && null != e[r][t]) return e[r][t]
                            },
                            lambda: function (e, t) {
                                return "function" == typeof e ? e.call(t) : e
                            },
                            escapeExpression: l.escapeExpression,
                            invokePartial: n,
                            fn: function (t) {
                                return e[t]
                            },
                            programs: [],
                            program: function (e, t, n) {
                                var r = this.programs[e],
                                    i = this.fn(e);
                                return t || n ? r = s(this, e, i, t, n) : r || (r = this.programs[e] = s(this, e, i)), r
                            },
                            data: function (e, t) {
                                for (; e && t--;) e = e._parent;
                                return e
                            },
                            merge: function (e, t) {
                                var n = e || t;
                                return e && t && e !== t && (n = l.extend({}, t, e)), n
                            },
                            noop: t.VM.noop,
                            compilerInfo: e.compiler
                        },
                        i = function (t, n) {
                            n = n || {};
                            var s = n.data;
                            i._setup(n), !n.partial && e.useData && (s = a(t, s));
                            var o;
                            return e.useDepths && (o = n.depths ? [t].concat(n.depths) : [t]), e.main.call(r, t, r.helpers, r.partials, s, o)
                        };
                    return i.isTop = !0, i._setup = function (n) {
                        n.partial ? (r.helpers = n.helpers, r.partials = n.partials) : (r.helpers = r.merge(n.helpers, t.helpers), e.usePartial && (r.partials = r.merge(n.partials, t.partials)))
                    }, i._child = function (t, n, i) {
                        if (e.useDepths && !i) throw new c("must pass parent depths");
                        return s(r, t, e[t], n, i)
                    }, i
                }

                function s(e, t, n, r, i) {
                    var s = function (t, s) {
                        return s = s || {}, n.call(e, t, e.helpers, e.partials, s.data || r, i && [t].concat(i))
                    };
                    return s.program = t, s.depth = i ? i.length : 0, s
                }

                function o(e, t, n, r, i, s, o) {
                    var u = {
                        partial: !0,
                        helpers: r,
                        partials: i,
                        data: s,
                        depths: o
                    };
                    if (void 0 === e) throw new c("The partial " + t + " could not be found");
                    return e instanceof Function ? e(n, u) : void 0
                }

                function u() {
                    return ""
                }

                function a(e, t) {
                    return t && "root" in t || (t = t ? d(t) : {}, t.root = e), t
                }
                var f = {},
                    l = e,
                    c = t,
                    h = n.COMPILER_REVISION,
                    p = n.REVISION_CHANGES,
                    d = n.createFrame;
                return f.checkRevision = r, f.template = i, f.program = s, f.invokePartial = o, f.noop = u, f
            }(t, n, r),
            s = function (e, t, n, r, i) {
                var s, o = e,
                    u = t,
                    a = n,
                    f = r,
                    l = i,
                    c = function () {
                        var e = new o.HandlebarsEnvironment;
                        return f.extend(e, o), e.SafeString = u, e.Exception = a, e.Utils = f, e.escapeExpression = f.escapeExpression, e.VM = l, e.template = function (t) {
                            return l.template(t, e)
                        }, e
                    },
                    h = c();
                return h.create = c, h["default"] = h, s = h
            }(r, e, n, t, i),
            o = function (e) {
                function t(e) {
                    e = e || {}, this.firstLine = e.first_line, this.firstColumn = e.first_column, this.lastColumn = e.last_column, this.lastLine = e.last_line
                }
                var n, r = e,
                    i = {
                        ProgramNode: function (e, n, r) {
                            t.call(this, r), this.type = "program", this.statements = e, this.strip = n
                        },
                        MustacheNode: function (e, n, r, s, o) {
                            if (t.call(this, o), this.type = "mustache", this.strip = s, null != r && r.charAt) {
                                var u = r.charAt(3) || r.charAt(2);
                                this.escaped = "{" !== u && "&" !== u
                            } else this.escaped = !!r;
                            this.sexpr = e instanceof i.SexprNode ? e : new i.SexprNode(e, n), this.id = this.sexpr.id, this.params = this.sexpr.params, this.hash = this.sexpr.hash, this.eligibleHelper = this.sexpr.eligibleHelper, this.isHelper = this.sexpr.isHelper
                        },
                        SexprNode: function (e, n, r) {
                            t.call(this, r), this.type = "sexpr", this.hash = n;
                            var i = this.id = e[0],
                                s = this.params = e.slice(1);
                            this.isHelper = !!s.length || !!n, this.eligibleHelper = this.isHelper || i.isSimple
                        },
                        PartialNode: function (e, n, r, i, s) {
                            t.call(this, s), this.type = "partial", this.partialName = e, this.context = n, this.hash = r, this.strip = i, this.strip.inlineStandalone = !0
                        },
                        BlockNode: function (e, n, r, i, s) {
                            t.call(this, s), this.type = "block", this.mustache = e, this.program = n, this.inverse = r, this.strip = i, r && !n && (this.isInverse = !0)
                        },
                        RawBlockNode: function (e, n, s, o) {
                            if (t.call(this, o), e.sexpr.id.original !== s) throw new r(e.sexpr.id.original + " doesn't match " + s, this);
                            n = new i.ContentNode(n, o), this.type = "block", this.mustache = e, this.program = new i.ProgramNode([n], {}, o)
                        },
                        ContentNode: function (e, n) {
                            t.call(this, n), this.type = "content", this.original = this.string = e
                        },
                        HashNode: function (e, n) {
                            t.call(this, n), this.type = "hash", this.pairs = e
                        },
                        IdNode: function (e, n) {
                            t.call(this, n), this.type = "ID";
                            for (var i = "", s = [], o = 0, u = "", a = 0, f = e.length; f > a; a++) {
                                var l = e[a].part;
                                if (i += (e[a].separator || "") + l, ".." === l || "." === l || "this" === l) {
                                    if (s.length > 0) throw new r("Invalid path: " + i, this);
                                    ".." === l ? (o++, u += "../") : this.isScoped = !0
                                } else s.push(l)
                            }
                            this.original = i, this.parts = s, this.string = s.join("."), this.depth = o, this.idName = u + this.string, this.isSimple = 1 === e.length && !this.isScoped && 0 === o, this.stringModeValue = this.string
                        },
                        PartialNameNode: function (e, n) {
                            t.call(this, n), this.type = "PARTIAL_NAME", this.name = e.original
                        },
                        DataNode: function (e, n) {
                            t.call(this, n), this.type = "DATA", this.id = e, this.stringModeValue = e.stringModeValue, this.idName = "@" + e.stringModeValue
                        },
                        StringNode: function (e, n) {
                            t.call(this, n), this.type = "STRING", this.original = this.string = this.stringModeValue = e
                        },
                        NumberNode: function (e, n) {
                            t.call(this, n), this.type = "NUMBER", this.original = this.number = e, this.stringModeValue = Number(e)
                        },
                        BooleanNode: function (e, n) {
                            t.call(this, n), this.type = "BOOLEAN", this.bool = e, this.stringModeValue = "true" === e
                        },
                        CommentNode: function (e, n) {
                            t.call(this, n), this.type = "comment", this.comment = e, this.strip = {
                                inlineStandalone: !0
                            }
                        }
                    };
                return n = i
            }(n),
            u = function () {
                var e, t = function () {
                    function e() {
                        this.yy = {}
                    }
                    var t = {
                            trace: function () {},
                            yy: {},
                            symbols_: {
                                error: 2,
                                root: 3,
                                program: 4,
                                EOF: 5,
                                program_repetition0: 6,
                                statement: 7,
                                mustache: 8,
                                block: 9,
                                rawBlock: 10,
                                partial: 11,
                                CONTENT: 12,
                                COMMENT: 13,
                                openRawBlock: 14,
                                END_RAW_BLOCK: 15,
                                OPEN_RAW_BLOCK: 16,
                                sexpr: 17,
                                CLOSE_RAW_BLOCK: 18,
                                openBlock: 19,
                                block_option0: 20,
                                closeBlock: 21,
                                openInverse: 22,
                                block_option1: 23,
                                OPEN_BLOCK: 24,
                                CLOSE: 25,
                                OPEN_INVERSE: 26,
                                inverseAndProgram: 27,
                                INVERSE: 28,
                                OPEN_ENDBLOCK: 29,
                                path: 30,
                                OPEN: 31,
                                OPEN_UNESCAPED: 32,
                                CLOSE_UNESCAPED: 33,
                                OPEN_PARTIAL: 34,
                                partialName: 35,
                                param: 36,
                                partial_option0: 37,
                                partial_option1: 38,
                                sexpr_repetition0: 39,
                                sexpr_option0: 40,
                                dataName: 41,
                                STRING: 42,
                                NUMBER: 43,
                                BOOLEAN: 44,
                                OPEN_SEXPR: 45,
                                CLOSE_SEXPR: 46,
                                hash: 47,
                                hash_repetition_plus0: 48,
                                hashSegment: 49,
                                ID: 50,
                                EQUALS: 51,
                                DATA: 52,
                                pathSegments: 53,
                                SEP: 54,
                                $accept: 0,
                                $end: 1
                            },
                            terminals_: {
                                2: "error",
                                5: "EOF",
                                12: "CONTENT",
                                13: "COMMENT",
                                15: "END_RAW_BLOCK",
                                16: "OPEN_RAW_BLOCK",
                                18: "CLOSE_RAW_BLOCK",
                                24: "OPEN_BLOCK",
                                25: "CLOSE",
                                26: "OPEN_INVERSE",
                                28: "INVERSE",
                                29: "OPEN_ENDBLOCK",
                                31: "OPEN",
                                32: "OPEN_UNESCAPED",
                                33: "CLOSE_UNESCAPED",
                                34: "OPEN_PARTIAL",
                                42: "STRING",
                                43: "NUMBER",
                                44: "BOOLEAN",
                                45: "OPEN_SEXPR",
                                46: "CLOSE_SEXPR",
                                50: "ID",
                                51: "EQUALS",
                                52: "DATA",
                                54: "SEP"
                            },
                            productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [10, 3], [14, 3], [9, 4], [9, 4], [19, 3], [22, 3], [27, 2], [21, 3], [8, 3], [8, 3], [11, 5], [11, 4], [17, 3], [17, 1], [36, 1], [36, 1], [36, 1], [36, 1], [36, 1], [36, 3], [47, 1], [49, 3], [35, 1], [35, 1], [35, 1], [41, 2], [30, 1], [53, 3], [53, 1], [6, 0], [6, 2], [20, 0], [20, 1], [23, 0], [23, 1], [37, 0], [37, 1], [38, 0], [38, 1], [39, 0], [39, 2], [40, 0], [40, 1], [48, 1], [48, 2]],
                            performAction: function (e, t, n, r, i, s) {
                                var o = s.length - 1;
                                switch (i) {
                                    case 1:
                                        return r.prepareProgram(s[o - 1].statements, !0), s[o - 1];
                                    case 2:
                                        this.$ = new r.ProgramNode(r.prepareProgram(s[o]), {}, this._$);
                                        break;
                                    case 3:
                                        this.$ = s[o];
                                        break;
                                    case 4:
                                        this.$ = s[o];
                                        break;
                                    case 5:
                                        this.$ = s[o];
                                        break;
                                    case 6:
                                        this.$ = s[o];
                                        break;
                                    case 7:
                                        this.$ = new r.ContentNode(s[o], this._$);
                                        break;
                                    case 8:
                                        this.$ = new r.CommentNode(s[o], this._$);
                                        break;
                                    case 9:
                                        this.$ = new r.RawBlockNode(s[o - 2], s[o - 1], s[o], this._$);
                                        break;
                                    case 10:
                                        this.$ = new r.MustacheNode(s[o - 1], null, "", "", this._$);
                                        break;
                                    case 11:
                                        this.$ = r.prepareBlock(s[o - 3], s[o - 2], s[o - 1], s[o], !1, this._$);
                                        break;
                                    case 12:
                                        this.$ = r.prepareBlock(s[o - 3], s[o - 2], s[o - 1], s[o], !0, this._$);
                                        break;
                                    case 13:
                                        this.$ = new r.MustacheNode(s[o - 1], null, s[o - 2], r.stripFlags(s[o - 2], s[o]), this._$);
                                        break;
                                    case 14:
                                        this.$ = new r.MustacheNode(s[o - 1], null, s[o - 2], r.stripFlags(s[o - 2], s[o]), this._$);
                                        break;
                                    case 15:
                                        this.$ = {
                                            strip: r.stripFlags(s[o - 1], s[o - 1]),
                                            program: s[o]
                                        };
                                        break;
                                    case 16:
                                        this.$ = {
                                            path: s[o - 1],
                                            strip: r.stripFlags(s[o - 2], s[o])
                                        };
                                        break;
                                    case 17:
                                        this.$ = new r.MustacheNode(s[o - 1], null, s[o - 2], r.stripFlags(s[o - 2], s[o]), this._$);
                                        break;
                                    case 18:
                                        this.$ = new r.MustacheNode(s[o - 1], null, s[o - 2], r.stripFlags(s[o - 2], s[o]), this._$);
                                        break;
                                    case 19:
                                        this.$ = new r.PartialNode(s[o - 3], s[o - 2], s[o - 1], r.stripFlags(s[o - 4], s[o]), this._$);
                                        break;
                                    case 20:
                                        this.$ = new r.PartialNode(s[o - 2], void 0, s[o - 1], r.stripFlags(s[o - 3], s[o]), this._$);
                                        break;
                                    case 21:
                                        this.$ = new r.SexprNode([s[o - 2]].concat(s[o - 1]), s[o], this._$);
                                        break;
                                    case 22:
                                        this.$ = new r.SexprNode([s[o]], null, this._$);
                                        break;
                                    case 23:
                                        this.$ = s[o];
                                        break;
                                    case 24:
                                        this.$ = new r.StringNode(s[o], this._$);
                                        break;
                                    case 25:
                                        this.$ = new r.NumberNode(s[o], this._$);
                                        break;
                                    case 26:
                                        this.$ = new r.BooleanNode(s[o], this._$);
                                        break;
                                    case 27:
                                        this.$ = s[o];
                                        break;
                                    case 28:
                                        s[o - 1].isHelper = !0, this.$ = s[o - 1];
                                        break;
                                    case 29:
                                        this.$ = new r.HashNode(s[o], this._$);
                                        break;
                                    case 30:
                                        this.$ = [s[o - 2], s[o]];
                                        break;
                                    case 31:
                                        this.$ = new r.PartialNameNode(s[o], this._$);
                                        break;
                                    case 32:
                                        this.$ = new r.PartialNameNode(new r.StringNode(s[o], this._$), this._$);
                                        break;
                                    case 33:
                                        this.$ = new r.PartialNameNode(new r.NumberNode(s[o], this._$));
                                        break;
                                    case 34:
                                        this.$ = new r.DataNode(s[o], this._$);
                                        break;
                                    case 35:
                                        this.$ = new r.IdNode(s[o], this._$);
                                        break;
                                    case 36:
                                        s[o - 2].push({
                                            part: s[o],
                                            separator: s[o - 1]
                                        }), this.$ = s[o - 2];
                                        break;
                                    case 37:
                                        this.$ = [{
                                            part: s[o]
                                        }];
                                        break;
                                    case 38:
                                        this.$ = [];
                                        break;
                                    case 39:
                                        s[o - 1].push(s[o]);
                                        break;
                                    case 48:
                                        this.$ = [];
                                        break;
                                    case 49:
                                        s[o - 1].push(s[o]);
                                        break;
                                    case 52:
                                        this.$ = [s[o]];
                                        break;
                                    case 53:
                                        s[o - 1].push(s[o])
                                }
                            },
                            table: [{
                                3: 1,
                                4: 2,
                                5: [2, 38],
                                6: 3,
                                12: [2, 38],
                                13: [2, 38],
                                16: [2, 38],
                                24: [2, 38],
                                26: [2, 38],
                                31: [2, 38],
                                32: [2, 38],
                                34: [2, 38]
                            }, {
                                1: [3]
                            }, {
                                5: [1, 4]
                            }, {
                                5: [2, 2],
                                7: 5,
                                8: 6,
                                9: 7,
                                10: 8,
                                11: 9,
                                12: [1, 10],
                                13: [1, 11],
                                14: 16,
                                16: [1, 20],
                                19: 14,
                                22: 15,
                                24: [1, 18],
                                26: [1, 19],
                                28: [2, 2],
                                29: [2, 2],
                                31: [1, 12],
                                32: [1, 13],
                                34: [1, 17]
                            }, {
                                1: [2, 1]
                            }, {
                                5: [2, 39],
                                12: [2, 39],
                                13: [2, 39],
                                16: [2, 39],
                                24: [2, 39],
                                26: [2, 39],
                                28: [2, 39],
                                29: [2, 39],
                                31: [2, 39],
                                32: [2, 39],
                                34: [2, 39]
                            }, {
                                5: [2, 3],
                                12: [2, 3],
                                13: [2, 3],
                                16: [2, 3],
                                24: [2, 3],
                                26: [2, 3],
                                28: [2, 3],
                                29: [2, 3],
                                31: [2, 3],
                                32: [2, 3],
                                34: [2, 3]
                            }, {
                                5: [2, 4],
                                12: [2, 4],
                                13: [2, 4],
                                16: [2, 4],
                                24: [2, 4],
                                26: [2, 4],
                                28: [2, 4],
                                29: [2, 4],
                                31: [2, 4],
                                32: [2, 4],
                                34: [2, 4]
                            }, {
                                5: [2, 5],
                                12: [2, 5],
                                13: [2, 5],
                                16: [2, 5],
                                24: [2, 5],
                                26: [2, 5],
                                28: [2, 5],
                                29: [2, 5],
                                31: [2, 5],
                                32: [2, 5],
                                34: [2, 5]
                            }, {
                                5: [2, 6],
                                12: [2, 6],
                                13: [2, 6],
                                16: [2, 6],
                                24: [2, 6],
                                26: [2, 6],
                                28: [2, 6],
                                29: [2, 6],
                                31: [2, 6],
                                32: [2, 6],
                                34: [2, 6]
                            }, {
                                5: [2, 7],
                                12: [2, 7],
                                13: [2, 7],
                                16: [2, 7],
                                24: [2, 7],
                                26: [2, 7],
                                28: [2, 7],
                                29: [2, 7],
                                31: [2, 7],
                                32: [2, 7],
                                34: [2, 7]
                            }, {
                                5: [2, 8],
                                12: [2, 8],
                                13: [2, 8],
                                16: [2, 8],
                                24: [2, 8],
                                26: [2, 8],
                                28: [2, 8],
                                29: [2, 8],
                                31: [2, 8],
                                32: [2, 8],
                                34: [2, 8]
                            }, {
                                17: 21,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                17: 27,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                4: 28,
                                6: 3,
                                12: [2, 38],
                                13: [2, 38],
                                16: [2, 38],
                                24: [2, 38],
                                26: [2, 38],
                                28: [2, 38],
                                29: [2, 38],
                                31: [2, 38],
                                32: [2, 38],
                                34: [2, 38]
                            }, {
                                4: 29,
                                6: 3,
                                12: [2, 38],
                                13: [2, 38],
                                16: [2, 38],
                                24: [2, 38],
                                26: [2, 38],
                                28: [2, 38],
                                29: [2, 38],
                                31: [2, 38],
                                32: [2, 38],
                                34: [2, 38]
                            }, {
                                12: [1, 30]
                            }, {
                                30: 32,
                                35: 31,
                                42: [1, 33],
                                43: [1, 34],
                                50: [1, 26],
                                53: 24
                            }, {
                                17: 35,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                17: 36,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                17: 37,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                25: [1, 38]
                            }, {
                                18: [2, 48],
                                25: [2, 48],
                                33: [2, 48],
                                39: 39,
                                42: [2, 48],
                                43: [2, 48],
                                44: [2, 48],
                                45: [2, 48],
                                46: [2, 48],
                                50: [2, 48],
                                52: [2, 48]
                            }, {
                                18: [2, 22],
                                25: [2, 22],
                                33: [2, 22],
                                46: [2, 22]
                            }, {
                                18: [2, 35],
                                25: [2, 35],
                                33: [2, 35],
                                42: [2, 35],
                                43: [2, 35],
                                44: [2, 35],
                                45: [2, 35],
                                46: [2, 35],
                                50: [2, 35],
                                52: [2, 35],
                                54: [1, 40]
                            }, {
                                30: 41,
                                50: [1, 26],
                                53: 24
                            }, {
                                18: [2, 37],
                                25: [2, 37],
                                33: [2, 37],
                                42: [2, 37],
                                43: [2, 37],
                                44: [2, 37],
                                45: [2, 37],
                                46: [2, 37],
                                50: [2, 37],
                                52: [2, 37],
                                54: [2, 37]
                            }, {
                                33: [1, 42]
                            }, {
                                20: 43,
                                27: 44,
                                28: [1, 45],
                                29: [2, 40]
                            }, {
                                23: 46,
                                27: 47,
                                28: [1, 45],
                                29: [2, 42]
                            }, {
                                15: [1, 48]
                            }, {
                                25: [2, 46],
                                30: 51,
                                36: 49,
                                38: 50,
                                41: 55,
                                42: [1, 52],
                                43: [1, 53],
                                44: [1, 54],
                                45: [1, 56],
                                47: 57,
                                48: 58,
                                49: 60,
                                50: [1, 59],
                                52: [1, 25],
                                53: 24
                            }, {
                                25: [2, 31],
                                42: [2, 31],
                                43: [2, 31],
                                44: [2, 31],
                                45: [2, 31],
                                50: [2, 31],
                                52: [2, 31]
                            }, {
                                25: [2, 32],
                                42: [2, 32],
                                43: [2, 32],
                                44: [2, 32],
                                45: [2, 32],
                                50: [2, 32],
                                52: [2, 32]
                            }, {
                                25: [2, 33],
                                42: [2, 33],
                                43: [2, 33],
                                44: [2, 33],
                                45: [2, 33],
                                50: [2, 33],
                                52: [2, 33]
                            }, {
                                25: [1, 61]
                            }, {
                                25: [1, 62]
                            }, {
                                18: [1, 63]
                            }, {
                                5: [2, 17],
                                12: [2, 17],
                                13: [2, 17],
                                16: [2, 17],
                                24: [2, 17],
                                26: [2, 17],
                                28: [2, 17],
                                29: [2, 17],
                                31: [2, 17],
                                32: [2, 17],
                                34: [2, 17]
                            }, {
                                18: [2, 50],
                                25: [2, 50],
                                30: 51,
                                33: [2, 50],
                                36: 65,
                                40: 64,
                                41: 55,
                                42: [1, 52],
                                43: [1, 53],
                                44: [1, 54],
                                45: [1, 56],
                                46: [2, 50],
                                47: 66,
                                48: 58,
                                49: 60,
                                50: [1, 59],
                                52: [1, 25],
                                53: 24
                            }, {
                                50: [1, 67]
                            }, {
                                18: [2, 34],
                                25: [2, 34],
                                33: [2, 34],
                                42: [2, 34],
                                43: [2, 34],
                                44: [2, 34],
                                45: [2, 34],
                                46: [2, 34],
                                50: [2, 34],
                                52: [2, 34]
                            }, {
                                5: [2, 18],
                                12: [2, 18],
                                13: [2, 18],
                                16: [2, 18],
                                24: [2, 18],
                                26: [2, 18],
                                28: [2, 18],
                                29: [2, 18],
                                31: [2, 18],
                                32: [2, 18],
                                34: [2, 18]
                            }, {
                                21: 68,
                                29: [1, 69]
                            }, {
                                29: [2, 41]
                            }, {
                                4: 70,
                                6: 3,
                                12: [2, 38],
                                13: [2, 38],
                                16: [2, 38],
                                24: [2, 38],
                                26: [2, 38],
                                29: [2, 38],
                                31: [2, 38],
                                32: [2, 38],
                                34: [2, 38]
                            }, {
                                21: 71,
                                29: [1, 69]
                            }, {
                                29: [2, 43]
                            }, {
                                5: [2, 9],
                                12: [2, 9],
                                13: [2, 9],
                                16: [2, 9],
                                24: [2, 9],
                                26: [2, 9],
                                28: [2, 9],
                                29: [2, 9],
                                31: [2, 9],
                                32: [2, 9],
                                34: [2, 9]
                            }, {
                                25: [2, 44],
                                37: 72,
                                47: 73,
                                48: 58,
                                49: 60,
                                50: [1, 74]
                            }, {
                                25: [1, 75]
                            }, {
                                18: [2, 23],
                                25: [2, 23],
                                33: [2, 23],
                                42: [2, 23],
                                43: [2, 23],
                                44: [2, 23],
                                45: [2, 23],
                                46: [2, 23],
                                50: [2, 23],
                                52: [2, 23]
                            }, {
                                18: [2, 24],
                                25: [2, 24],
                                33: [2, 24],
                                42: [2, 24],
                                43: [2, 24],
                                44: [2, 24],
                                45: [2, 24],
                                46: [2, 24],
                                50: [2, 24],
                                52: [2, 24]
                            }, {
                                18: [2, 25],
                                25: [2, 25],
                                33: [2, 25],
                                42: [2, 25],
                                43: [2, 25],
                                44: [2, 25],
                                45: [2, 25],
                                46: [2, 25],
                                50: [2, 25],
                                52: [2, 25]
                            }, {
                                18: [2, 26],
                                25: [2, 26],
                                33: [2, 26],
                                42: [2, 26],
                                43: [2, 26],
                                44: [2, 26],
                                45: [2, 26],
                                46: [2, 26],
                                50: [2, 26],
                                52: [2, 26]
                            }, {
                                18: [2, 27],
                                25: [2, 27],
                                33: [2, 27],
                                42: [2, 27],
                                43: [2, 27],
                                44: [2, 27],
                                45: [2, 27],
                                46: [2, 27],
                                50: [2, 27],
                                52: [2, 27]
                            }, {
                                17: 76,
                                30: 22,
                                41: 23,
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                25: [2, 47]
                            }, {
                                18: [2, 29],
                                25: [2, 29],
                                33: [2, 29],
                                46: [2, 29],
                                49: 77,
                                50: [1, 74]
                            }, {
                                18: [2, 37],
                                25: [2, 37],
                                33: [2, 37],
                                42: [2, 37],
                                43: [2, 37],
                                44: [2, 37],
                                45: [2, 37],
                                46: [2, 37],
                                50: [2, 37],
                                51: [1, 78],
                                52: [2, 37],
                                54: [2, 37]
                            }, {
                                18: [2, 52],
                                25: [2, 52],
                                33: [2, 52],
                                46: [2, 52],
                                50: [2, 52]
                            }, {
                                12: [2, 13],
                                13: [2, 13],
                                16: [2, 13],
                                24: [2, 13],
                                26: [2, 13],
                                28: [2, 13],
                                29: [2, 13],
                                31: [2, 13],
                                32: [2, 13],
                                34: [2, 13]
                            }, {
                                12: [2, 14],
                                13: [2, 14],
                                16: [2, 14],
                                24: [2, 14],
                                26: [2, 14],
                                28: [2, 14],
                                29: [2, 14],
                                31: [2, 14],
                                32: [2, 14],
                                34: [2, 14]
                            }, {
                                12: [2, 10]
                            }, {
                                18: [2, 21],
                                25: [2, 21],
                                33: [2, 21],
                                46: [2, 21]
                            }, {
                                18: [2, 49],
                                25: [2, 49],
                                33: [2, 49],
                                42: [2, 49],
                                43: [2, 49],
                                44: [2, 49],
                                45: [2, 49],
                                46: [2, 49],
                                50: [2, 49],
                                52: [2, 49]
                            }, {
                                18: [2, 51],
                                25: [2, 51],
                                33: [2, 51],
                                46: [2, 51]
                            }, {
                                18: [2, 36],
                                25: [2, 36],
                                33: [2, 36],
                                42: [2, 36],
                                43: [2, 36],
                                44: [2, 36],
                                45: [2, 36],
                                46: [2, 36],
                                50: [2, 36],
                                52: [2, 36],
                                54: [2, 36]
                            }, {
                                5: [2, 11],
                                12: [2, 11],
                                13: [2, 11],
                                16: [2, 11],
                                24: [2, 11],
                                26: [2, 11],
                                28: [2, 11],
                                29: [2, 11],
                                31: [2, 11],
                                32: [2, 11],
                                34: [2, 11]
                            }, {
                                30: 79,
                                50: [1, 26],
                                53: 24
                            }, {
                                29: [2, 15]
                            }, {
                                5: [2, 12],
                                12: [2, 12],
                                13: [2, 12],
                                16: [2, 12],
                                24: [2, 12],
                                26: [2, 12],
                                28: [2, 12],
                                29: [2, 12],
                                31: [2, 12],
                                32: [2, 12],
                                34: [2, 12]
                            }, {
                                25: [1, 80]
                            }, {
                                25: [2, 45]
                            }, {
                                51: [1, 78]
                            }, {
                                5: [2, 20],
                                12: [2, 20],
                                13: [2, 20],
                                16: [2, 20],
                                24: [2, 20],
                                26: [2, 20],
                                28: [2, 20],
                                29: [2, 20],
                                31: [2, 20],
                                32: [2, 20],
                                34: [2, 20]
                            }, {
                                46: [1, 81]
                            }, {
                                18: [2, 53],
                                25: [2, 53],
                                33: [2, 53],
                                46: [2, 53],
                                50: [2, 53]
                            }, {
                                30: 51,
                                36: 82,
                                41: 55,
                                42: [1, 52],
                                43: [1, 53],
                                44: [1, 54],
                                45: [1, 56],
                                50: [1, 26],
                                52: [1, 25],
                                53: 24
                            }, {
                                25: [1, 83]
                            }, {
                                5: [2, 19],
                                12: [2, 19],
                                13: [2, 19],
                                16: [2, 19],
                                24: [2, 19],
                                26: [2, 19],
                                28: [2, 19],
                                29: [2, 19],
                                31: [2, 19],
                                32: [2, 19],
                                34: [2, 19]
                            }, {
                                18: [2, 28],
                                25: [2, 28],
                                33: [2, 28],
                                42: [2, 28],
                                43: [2, 28],
                                44: [2, 28],
                                45: [2, 28],
                                46: [2, 28],
                                50: [2, 28],
                                52: [2, 28]
                            }, {
                                18: [2, 30],
                                25: [2, 30],
                                33: [2, 30],
                                46: [2, 30],
                                50: [2, 30]
                            }, {
                                5: [2, 16],
                                12: [2, 16],
                                13: [2, 16],
                                16: [2, 16],
                                24: [2, 16],
                                26: [2, 16],
                                28: [2, 16],
                                29: [2, 16],
                                31: [2, 16],
                                32: [2, 16],
                                34: [2, 16]
                            }],
                            defaultActions: {
                                4: [2, 1],
                                44: [2, 41],
                                47: [2, 43],
                                57: [2, 47],
                                63: [2, 10],
                                70: [2, 15],
                                73: [2, 45]
                            },
                            parseError: function (e) {
                                throw new Error(e)
                            },
                            parse: function (e) {
                                function t() {
                                    var e;
                                    return e = n.lexer.lex() || 1, "number" != typeof e && (e = n.symbols_[e] || e), e
                                }
                                var n = this,
                                    r = [0],
                                    i = [null],
                                    s = [],
                                    o = this.table,
                                    u = "",
                                    a = 0,
                                    f = 0,
                                    l = 0;
                                this.lexer.setInput(e), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, "undefined" == typeof this.lexer.yylloc && (this.lexer.yylloc = {});
                                var c = this.lexer.yylloc;
                                s.push(c);
                                var h = this.lexer.options && this.lexer.options.ranges;
                                "function" == typeof this.yy.parseError && (this.parseError = this.yy.parseError);
                                for (var p, d, v, m, g, y, b, w, E, S = {};;) {
                                    if (v = r[r.length - 1], this.defaultActions[v] ? m = this.defaultActions[v] : ((null === p || "undefined" == typeof p) && (p = t()), m = o[v] && o[v][p]), "undefined" == typeof m || !m.length || !m[0]) {
                                        var x = "";
                                        if (!l) {
                                            E = [];
                                            for (y in o[v]) this.terminals_[y] && y > 2 && E.push("'" + this.terminals_[y] + "'");
                                            x = this.lexer.showPosition ? "Parse error on line " + (a + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + E.join(", ") + ", got '" + (this.terminals_[p] || p) + "'" : "Parse error on line " + (a + 1) + ": Unexpected " + (1 == p ? "end of input" : "'" + (this.terminals_[p] || p) + "'"), this.parseError(x, {
                                                text: this.lexer.match,
                                                token: this.terminals_[p] || p,
                                                line: this.lexer.yylineno,
                                                loc: c,
                                                expected: E
                                            })
                                        }
                                    }
                                    if (m[0] instanceof Array && m.length > 1) throw new Error("Parse Error: multiple actions possible at state: " + v + ", token: " + p);
                                    switch (m[0]) {
                                        case 1:
                                            r.push(p), i.push(this.lexer.yytext), s.push(this.lexer.yylloc), r.push(m[1]), p = null, d ? (p = d, d = null) : (f = this.lexer.yyleng, u = this.lexer.yytext, a = this.lexer.yylineno, c = this.lexer.yylloc, l > 0 && l--);
                                            break;
                                        case 2:
                                            if (b = this.productions_[m[1]][1], S.$ = i[i.length - b], S._$ = {
                                                    first_line: s[s.length - (b || 1)].first_line,
                                                    last_line: s[s.length - 1].last_line,
                                                    first_column: s[s.length - (b || 1)].first_column,
                                                    last_column: s[s.length - 1].last_column
                                                }, h && (S._$.range = [s[s.length - (b || 1)].range[0], s[s.length - 1].range[1]]), g = this.performAction.call(S, u, f, a, this.yy, m[1], i, s), "undefined" != typeof g) return g;
                                            b && (r = r.slice(0, -1 * b * 2), i = i.slice(0, -1 * b), s = s.slice(0, -1 * b)), r.push(this.productions_[m[1]][0]), i.push(S.$), s.push(S._$), w = o[r[r.length - 2]][r[r.length - 1]], r.push(w);
                                            break;
                                        case 3:
                                            return !0
                                    }
                                }
                                return !0
                            }
                        },
                        n = function () {
                            var e = {
                                EOF: 1,
                                parseError: function (e, t) {
                                    if (!this.yy.parser) throw new Error(e);
                                    this.yy.parser.parseError(e, t)
                                },
                                setInput: function (e) {
                                    return this._input = e, this._more = this._less = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
                                        first_line: 1,
                                        first_column: 0,
                                        last_line: 1,
                                        last_column: 0
                                    }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this
                                },
                                input: function () {
                                    var e = this._input[0];
                                    this.yytext += e, this.yyleng++, this.offset++, this.match += e, this.matched += e;
                                    var t = e.match(/(?:\r\n?|\n).*/g);
                                    return t ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), e
                                },
                                unput: function (e) {
                                    var t = e.length,
                                        n = e.split(/(?:\r\n?|\n)/g);
                                    this._input = e + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - t - 1), this.offset -= t;
                                    var r = this.match.split(/(?:\r\n?|\n)/g);
                                    this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), n.length - 1 && (this.yylineno -= n.length - 1);
                                    var i = this.yylloc.range;
                                    return this.yylloc = {
                                        first_line: this.yylloc.first_line,
                                        last_line: this.yylineno + 1,
                                        first_column: this.yylloc.first_column,
                                        last_column: n ? (n.length === r.length ? this.yylloc.first_column : 0) + r[r.length - n.length].length - n[0].length : this.yylloc.first_column - t
                                    }, this.options.ranges && (this.yylloc.range = [i[0], i[0] + this.yyleng - t]), this
                                },
                                more: function () {
                                    return this._more = !0, this
                                },
                                less: function (e) {
                                    this.unput(this.match.slice(e))
                                },
                                pastInput: function () {
                                    var e = this.matched.substr(0, this.matched.length - this.match.length);
                                    return (e.length > 20 ? "..." : "") + e.substr(-20).replace(/\n/g, "")
                                },
                                upcomingInput: function () {
                                    var e = this.match;
                                    return e.length < 20 && (e += this._input.substr(0, 20 - e.length)), (e.substr(0, 20) + (e.length > 20 ? "..." : "")).replace(/\n/g, "")
                                },
                                showPosition: function () {
                                    var e = this.pastInput(),
                                        t = (new Array(e.length + 1)).join("-");
                                    return e + this.upcomingInput() + "\n" + t + "^"
                                },
                                next: function () {
                                    if (this.done) return this.EOF;
                                    this._input || (this.done = !0);
                                    var e, t, n, r, i;
                                    this._more || (this.yytext = "", this.match = "");
                                    for (var s = this._currentRules(), o = 0; o < s.length && (n = this._input.match(this.rules[s[o]]), !n || t && !(n[0].length > t[0].length) || (t = n, r = o, this.options.flex)); o++);
                                    return t ? (i = t[0].match(/(?:\r\n?|\n).*/g), i && (this.yylineno += i.length), this.yylloc = {
                                        first_line: this.yylloc.last_line,
                                        last_line: this.yylineno + 1,
                                        first_column: this.yylloc.last_column,
                                        last_column: i ? i[i.length - 1].length - i[i.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + t[0].length
                                    }, this.yytext += t[0], this.match += t[0], this.matches = t, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._input = this._input.slice(t[0].length), this.matched += t[0], e = this.performAction.call(this, this.yy, this, s[r], this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), e ? e : void 0) : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                                        text: "",
                                        token: null,
                                        line: this.yylineno
                                    })
                                },
                                lex: function () {
                                    var e = this.next();
                                    return "undefined" != typeof e ? e : this.lex()
                                },
                                begin: function (e) {
                                    this.conditionStack.push(e)
                                },
                                popState: function () {
                                    return this.conditionStack.pop()
                                },
                                _currentRules: function () {
                                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules
                                },
                                topState: function () {
                                    return this.conditionStack[this.conditionStack.length - 2]
                                },
                                pushState: function (e) {
                                    this.begin(e)
                                }
                            };
                            return e.options = {}, e.performAction = function (e, t, n, r) {
                                function i(e, n) {
                                    return t.yytext = t.yytext.substr(e, t.yyleng - n)
                                }
                                switch (n) {
                                    case 0:
                                        if ("\\\\" === t.yytext.slice(-2) ? (i(0, 1), this.begin("mu")) : "\\" === t.yytext.slice(-1) ? (i(0, 1), this.begin("emu")) : this.begin("mu"), t.yytext) return 12;
                                        break;
                                    case 1:
                                        return 12;
                                    case 2:
                                        return this.popState(), 12;
                                    case 3:
                                        return t.yytext = t.yytext.substr(5, t.yyleng - 9), this.popState(), 15;
                                    case 4:
                                        return 12;
                                    case 5:
                                        return i(0, 4), this.popState(), 13;
                                    case 6:
                                        return 45;
                                    case 7:
                                        return 46;
                                    case 8:
                                        return 16;
                                    case 9:
                                        return this.popState(), this.begin("raw"), 18;
                                    case 10:
                                        return 34;
                                    case 11:
                                        return 24;
                                    case 12:
                                        return 29;
                                    case 13:
                                        return this.popState(), 28;
                                    case 14:
                                        return this.popState(), 28;
                                    case 15:
                                        return 26;
                                    case 16:
                                        return 26;
                                    case 17:
                                        return 32;
                                    case 18:
                                        return 31;
                                    case 19:
                                        this.popState(), this.begin("com");
                                        break;
                                    case 20:
                                        return i(3, 5), this.popState(), 13;
                                    case 21:
                                        return 31;
                                    case 22:
                                        return 51;
                                    case 23:
                                        return 50;
                                    case 24:
                                        return 50;
                                    case 25:
                                        return 54;
                                    case 26:
                                        break;
                                    case 27:
                                        return this.popState(), 33;
                                    case 28:
                                        return this.popState(), 25;
                                    case 29:
                                        return t.yytext = i(1, 2).replace(/\\"/g, '"'), 42;
                                    case 30:
                                        return t.yytext = i(1, 2).replace(/\\'/g, "'"), 42;
                                    case 31:
                                        return 52;
                                    case 32:
                                        return 44;
                                    case 33:
                                        return 44;
                                    case 34:
                                        return 43;
                                    case 35:
                                        return 50;
                                    case 36:
                                        return t.yytext = i(1, 2), 50;
                                    case 37:
                                        return "INVALID";
                                    case 38:
                                        return 5
                                }
                            }, e.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{\/)))/, /^(?:[\s\S]*?--\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{!--)/, /^(?:\{\{![\s\S]*?\}\})/, /^(?:\{\{(~)?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)]))))/, /^(?:\[[^\]]*\])/, /^(?:.)/, /^(?:$)/], e.conditions = {
                                mu: {
                                    rules: [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38],
                                    inclusive: !1
                                },
                                emu: {
                                    rules: [2],
                                    inclusive: !1
                                },
                                com: {
                                    rules: [5],
                                    inclusive: !1
                                },
                                raw: {
                                    rules: [3, 4],
                                    inclusive: !1
                                },
                                INITIAL: {
                                    rules: [0, 1, 38],
                                    inclusive: !0
                                }
                            }, e
                        }();
                    return t.lexer = n, e.prototype = t, t.Parser = e, new e
                }();
                return e = t
            }(),
            a = function (e) {
                function t(e, t) {
                    return {
                        left: "~" === e.charAt(2),
                        right: "~" === t.charAt(t.length - 3)
                    }
                }

                function n(e, t, n, r, a, l) {
                    if (e.sexpr.id.original !== r.path.original) throw new f(e.sexpr.id.original + " doesn't match " + r.path.original, e);
                    var c = n && n.program,
                        h = {
                            left: e.strip.left,
                            right: r.strip.right,
                            openStandalone: s(t.statements),
                            closeStandalone: i((c || t).statements)
                        };
                    if (e.strip.right && o(t.statements, null, !0), c) {
                        var p = n.strip;
                        p.left && u(t.statements, null, !0), p.right && o(c.statements, null, !0), r.strip.left && u(c.statements, null, !0), i(t.statements) && s(c.statements) && (u(t.statements), o(c.statements))
                    } else r.strip.left && u(t.statements, null, !0);
                    return a ? new this.BlockNode(e, c, t, h, l) : new this.BlockNode(e, t, c, h, l)
                }

                function r(e, t) {
                    for (var n = 0, r = e.length; r > n; n++) {
                        var a = e[n],
                            f = a.strip;
                        if (f) {
                            var l = i(e, n, t, "partial" === a.type),
                                c = s(e, n, t),
                                h = f.openStandalone && l,
                                p = f.closeStandalone && c,
                                d = f.inlineStandalone && l && c;
                            f.right && o(e, n, !0), f.left && u(e, n, !0), d && (o(e, n), u(e, n) && "partial" === a.type && (a.indent = /([ \t]+$)/.exec(e[n - 1].original) ? RegExp.$1 : "")), h && (o((a.program || a.inverse).statements), u(e, n)), p && (o(e, n), u((a.inverse || a.program).statements))
                        }
                    }
                    return e
                }

                function i(e, t, n) {
                    void 0 === t && (t = e.length);
                    var r = e[t - 1],
                        i = e[t - 2];
                    return r ? "content" === r.type ? (i || !n ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(r.original) : void 0 : n
                }

                function s(e, t, n) {
                    void 0 === t && (t = -1);
                    var r = e[t + 1],
                        i = e[t + 2];
                    return r ? "content" === r.type ? (i || !n ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(r.original) : void 0 : n
                }

                function o(e, t, n) {
                    var r = e[null == t ? 0 : t + 1];
                    if (r && "content" === r.type && (n || !r.rightStripped)) {
                        var i = r.string;
                        r.string = r.string.replace(n ? /^\s+/ : /^[ \t]*\r?\n?/, ""), r.rightStripped = r.string !== i
                    }
                }

                function u(e, t, n) {
                    var r = e[null == t ? e.length - 1 : t - 1];
                    if (r && "content" === r.type && (n || !r.leftStripped)) {
                        var i = r.string;
                        return r.string = r.string.replace(n ? /\s+$/ : /[ \t]+$/, ""), r.leftStripped = r.string !== i, r.leftStripped
                    }
                }
                var a = {},
                    f = e;
                return a.stripFlags = t, a.prepareBlock = n, a.prepareProgram = r, a
            }(n),
            f = function (e, t, n, r) {
                function i(e) {
                    return e.constructor === u.ProgramNode ? e : (o.yy = l, o.parse(e))
                }
                var s = {},
                    o = e,
                    u = t,
                    a = n,
                    f = r.extend;
                s.parser = o;
                var l = {};
                return f(l, a, u), s.parse = i, s
            }(u, o, a, t),
            l = function (e, t) {
                function n() {}

                function r(e, t, n) {
                    if (null == e || "string" != typeof e && e.constructor !== n.AST.ProgramNode) throw new u("You must pass a string or Handlebars AST to Handlebars.precompile. You passed " + e);
                    t = t || {}, "data" in t || (t.data = !0), t.compat && (t.useDepths = !0);
                    var r = n.parse(e),
                        i = (new n.Compiler).compile(r, t);
                    return (new n.JavaScriptCompiler).compile(i, t)
                }

                function i(e, t, n) {
                    function r() {
                        var r = n.parse(e),
                            i = (new n.Compiler).compile(r, t),
                            s = (new n.JavaScriptCompiler).compile(i, t, void 0, !0);
                        return n.template(s)
                    }
                    if (null == e || "string" != typeof e && e.constructor !== n.AST.ProgramNode) throw new u("You must pass a string or Handlebars AST to Handlebars.compile. You passed " + e);
                    t = t || {}, "data" in t || (t.data = !0), t.compat && (t.useDepths = !0);
                    var i, s = function (e, t) {
                        return i || (i = r()), i.call(this, e, t)
                    };
                    return s._setup = function (e) {
                        return i || (i = r()), i._setup(e)
                    }, s._child = function (e, t, n) {
                        return i || (i = r()), i._child(e, t, n)
                    }, s
                }

                function s(e, t) {
                    if (e === t) return !0;
                    if (a(e) && a(t) && e.length === t.length) {
                        for (var n = 0; n < e.length; n++)
                            if (!s(e[n], t[n])) return !1;
                        return !0
                    }
                }
                var o = {},
                    u = e,
                    a = t.isArray,
                    f = [].slice;
                return o.Compiler = n, n.prototype = {
                    compiler: n,
                    equals: function (e) {
                        var t = this.opcodes.length;
                        if (e.opcodes.length !== t) return !1;
                        for (var n = 0; t > n; n++) {
                            var r = this.opcodes[n],
                                i = e.opcodes[n];
                            if (r.opcode !== i.opcode || !s(r.args, i.args)) return !1
                        }
                        for (t = this.children.length, n = 0; t > n; n++)
                            if (!this.children[n].equals(e.children[n])) return !1;
                        return !0
                    },
                    guid: 0,
                    compile: function (e, t) {
                        this.opcodes = [], this.children = [], this.depths = {
                            list: []
                        }, this.options = t, this.stringParams = t.stringParams, this.trackIds = t.trackIds;
                        var n = this.options.knownHelpers;
                        if (this.options.knownHelpers = {
                                helperMissing: !0,
                                blockHelperMissing: !0,
                                each: !0,
                                "if": !0,
                                unless: !0,
                                "with": !0,
                                log: !0,
                                lookup: !0
                            }, n)
                            for (var r in n) this.options.knownHelpers[r] = n[r];
                        return this.accept(e)
                    },
                    accept: function (e) {
                        return this[e.type](e)
                    },
                    program: function (e) {
                        for (var t = e.statements, n = 0, r = t.length; r > n; n++) this.accept(t[n]);
                        return this.isSimple = 1 === r, this.depths.list = this.depths.list.sort(function (e, t) {
                            return e - t
                        }), this
                    },
                    compileProgram: function (e) {
                        var t, n = (new this.compiler).compile(e, this.options),
                            r = this.guid++;
                        this.usePartial = this.usePartial || n.usePartial, this.children[r] = n;
                        for (var i = 0, s = n.depths.list.length; s > i; i++) t = n.depths.list[i], 2 > t || this.addDepth(t - 1);
                        return r
                    },
                    block: function (e) {
                        var t = e.mustache,
                            n = e.program,
                            r = e.inverse;
                        n && (n = this.compileProgram(n)), r && (r = this.compileProgram(r));
                        var i = t.sexpr,
                            s = this.classifySexpr(i);
                        "helper" === s ? this.helperSexpr(i, n, r) : "simple" === s ? (this.simpleSexpr(i), this.opcode("pushProgram", n), this.opcode("pushProgram", r), this.opcode("emptyHash"), this.opcode("blockValue", i.id.original)) : (this.ambiguousSexpr(i, n, r), this.opcode("pushProgram", n), this.opcode("pushProgram", r), this.opcode("emptyHash"), this.opcode("ambiguousBlockValue")), this.opcode("append")
                    },
                    hash: function (e) {
                        var t, n, r = e.pairs;
                        for (this.opcode("pushHash"), t = 0, n = r.length; n > t; t++) this.pushParam(r[t][1]);
                        for (; t--;) this.opcode("assignToHash", r[t][0]);
                        this.opcode("popHash")
                    },
                    partial: function (e) {
                        var t = e.partialName;
                        this.usePartial = !0, e.hash ? this.accept(e.hash) : this.opcode("push", "undefined"), e.context ? this.accept(e.context) : (this.opcode("getContext", 0), this.opcode("pushContext")), this.opcode("invokePartial", t.name, e.indent || ""), this.opcode("append")
                    },
                    content: function (e) {
                        e.string && this.opcode("appendContent", e.string)
                    },
                    mustache: function (e) {
                        this.sexpr(e.sexpr), e.escaped && !this.options.noEscape ? this.opcode("appendEscaped") : this.opcode("append")
                    },
                    ambiguousSexpr: function (e, t, n) {
                        var r = e.id,
                            i = r.parts[0],
                            s = null != t || null != n;
                        this.opcode("getContext", r.depth), this.opcode("pushProgram", t), this.opcode("pushProgram", n), this.ID(r), this.opcode("invokeAmbiguous", i, s)
                    },
                    simpleSexpr: function (e) {
                        var t = e.id;
                        "DATA" === t.type ? this.DATA(t) : t.parts.length ? this.ID(t) : (this.addDepth(t.depth), this.opcode("getContext", t.depth), this.opcode("pushContext")), this.opcode("resolvePossibleLambda")
                    },
                    helperSexpr: function (e, t, n) {
                        var r = this.setupFullMustacheParams(e, t, n),
                            i = e.id,
                            s = i.parts[0];
                        if (this.options.knownHelpers[s]) this.opcode("invokeKnownHelper", r.length, s);
                        else {
                            if (this.options.knownHelpersOnly) throw new u("You specified knownHelpersOnly, but used the unknown helper " + s, e);
                            i.falsy = !0, this.ID(i), this.opcode("invokeHelper", r.length, i.original, i.isSimple)
                        }
                    },
                    sexpr: function (e) {
                        var t = this.classifySexpr(e);
                        "simple" === t ? this.simpleSexpr(e) : "helper" === t ? this.helperSexpr(e) : this.ambiguousSexpr(e)
                    },
                    ID: function (e) {
                        this.addDepth(e.depth), this.opcode("getContext", e.depth);
                        var t = e.parts[0];
                        t ? this.opcode("lookupOnContext", e.parts, e.falsy, e.isScoped) : this.opcode("pushContext")
                    },
                    DATA: function (e) {
                        this.options.data = !0, this.opcode("lookupData", e.id.depth, e.id.parts)
                    },
                    STRING: function (e) {
                        this.opcode("pushString", e.string)
                    },
                    NUMBER: function (e) {
                        this.opcode("pushLiteral", e.number)
                    },
                    BOOLEAN: function (e) {
                        this.opcode("pushLiteral", e.bool)
                    },
                    comment: function () {},
                    opcode: function (e) {
                        this.opcodes.push({
                            opcode: e,
                            args: f.call(arguments, 1)
                        })
                    },
                    addDepth: function (e) {
                        0 !== e && (this.depths[e] || (this.depths[e] = !0, this.depths.list.push(e)))
                    },
                    classifySexpr: function (e) {
                        var t = e.isHelper,
                            n = e.eligibleHelper,
                            r = this.options;
                        if (n && !t) {
                            var i = e.id.parts[0];
                            r.knownHelpers[i] ? t = !0 : r.knownHelpersOnly && (n = !1)
                        }
                        return t ? "helper" : n ? "ambiguous" : "simple"
                    },
                    pushParams: function (e) {
                        for (var t = 0, n = e.length; n > t; t++) this.pushParam(e[t])
                    },
                    pushParam: function (e) {
                        this.stringParams ? (e.depth && this.addDepth(e.depth), this.opcode("getContext", e.depth || 0), this.opcode("pushStringParam", e.stringModeValue, e.type), "sexpr" === e.type && this.sexpr(e)) : (this.trackIds && this.opcode("pushId", e.type, e.idName || e.stringModeValue), this.accept(e))
                    },
                    setupFullMustacheParams: function (e, t, n) {
                        var r = e.params;
                        return this.pushParams(r), this.opcode("pushProgram", t), this.opcode("pushProgram", n), e.hash ? this.hash(e.hash) : this.opcode("emptyHash"), r
                    }
                }, o.precompile = r, o.compile = i, o
            }(n, t),
            c = function (e, t) {
                function n(e) {
                    this.value = e
                }

                function r() {}
                var i, s = e.COMPILER_REVISION,
                    o = e.REVISION_CHANGES,
                    u = t;
                r.prototype = {
                    nameLookup: function (e, t) {
                        return r.isValidJavaScriptVariableName(t) ? e + "." + t : e + "['" + t + "']"
                    },
                    depthedLookup: function (e) {
                        return this.aliases.lookup = "this.lookup", 'lookup(depths, "' + e + '")'
                    },
                    compilerInfo: function () {
                        var e = s,
                            t = o[e];
                        return [e, t]
                    },
                    appendToBuffer: function (e) {
                        return this.environment.isSimple ? "return " + e + ";" : {
                            appendToBuffer: !0,
                            content: e,
                            toString: function () {
                                return "buffer += " + e + ";"
                            }
                        }
                    },
                    initializeBuffer: function () {
                        return this.quotedString("")
                    },
                    namespace: "Handlebars",
                    compile: function (e, t, n, r) {
                        this.environment = e, this.options = t, this.stringParams = this.options.stringParams, this.trackIds = this.options.trackIds, this.precompile = !r, this.name = this.environment.name, this.isChild = !!n, this.context = n || {
                            programs: [],
                            environments: []
                        }, this.preamble(), this.stackSlot = 0, this.stackVars = [], this.aliases = {}, this.registers = {
                            list: []
                        }, this.hashes = [], this.compileStack = [], this.inlineStack = [], this.compileChildren(e, t), this.useDepths = this.useDepths || e.depths.list.length || this.options.compat;
                        var i, s, o, a = e.opcodes;
                        for (s = 0, o = a.length; o > s; s++) i = a[s], this[i.opcode].apply(this, i.args);
                        if (this.pushSource(""), this.stackSlot || this.inlineStack.length || this.compileStack.length) throw new u("Compile completed with content left on stack");
                        var f = this.createFunctionContext(r);
                        if (this.isChild) return f;
                        var l = {
                                compiler: this.compilerInfo(),
                                main: f
                            },
                            c = this.context.programs;
                        for (s = 0, o = c.length; o > s; s++) c[s] && (l[s] = c[s]);
                        return this.environment.usePartial && (l.usePartial = !0), this.options.data && (l.useData = !0), this.useDepths && (l.useDepths = !0), this.options.compat && (l.compat = !0), r || (l.compiler = JSON.stringify(l.compiler), l = this.objectLiteral(l)), l
                    },
                    preamble: function () {
                        this.lastContext = 0, this.source = []
                    },
                    createFunctionContext: function (e) {
                        var t = "",
                            n = this.stackVars.concat(this.registers.list);
                        n.length > 0 && (t += ", " + n.join(", "));
                        for (var r in this.aliases) this.aliases.hasOwnProperty(r) && (t += ", " + r + "=" + this.aliases[r]);
                        var i = ["depth0", "helpers", "partials", "data"];
                        this.useDepths && i.push("depths");
                        var s = this.mergeSource(t);
                        return e ? (i.push(s), Function.apply(this, i)) : "function(" + i.join(",") + ") {\n  " + s + "}"
                    },
                    mergeSource: function (e) {
                        for (var t, n, r = "", i = !this.forceBuffer, s = 0, o = this.source.length; o > s; s++) {
                            var u = this.source[s];
                            u.appendToBuffer ? t = t ? t + "\n    + " + u.content : u.content : (t && (r ? r += "buffer += " + t + ";\n  " : (n = !0, r = t + ";\n  "), t = void 0), r += u + "\n  ", this.environment.isSimple || (i = !1))
                        }
                        return i ? (t || !r) && (r += "return " + (t || '""') + ";\n") : (e += ", buffer = " + (n ? "" : this.initializeBuffer()), r += t ? "return buffer + " + t + ";\n" : "return buffer;\n"), e && (r = "var " + e.substring(2) + (n ? "" : ";\n  ") + r), r
                    },
                    blockValue: function (e) {
                        this.aliases.blockHelperMissing = "helpers.blockHelperMissing";
                        var t = [this.contextName(0)];
                        this.setupParams(e, 0, t);
                        var n = this.popStack();
                        t.splice(1, 0, n), this.push("blockHelperMissing.call(" + t.join(", ") + ")")
                    },
                    ambiguousBlockValue: function () {
                        this.aliases.blockHelperMissing = "helpers.blockHelperMissing";
                        var e = [this.contextName(0)];
                        this.setupParams("", 0, e, !0), this.flushInline();
                        var t = this.topStack();
                        e.splice(1, 0, t), this.pushSource("if (!" + this.lastHelper + ") { " + t + " = blockHelperMissing.call(" + e.join(", ") + "); }")
                    },
                    appendContent: function (e) {
                        this.pendingContent && (e = this.pendingContent + e), this.pendingContent = e
                    },
                    append: function () {
                        this.flushInline();
                        var e = this.popStack();
                        this.pushSource("if (" + e + " != null) { " + this.appendToBuffer(e) + " }"), this.environment.isSimple && this.pushSource("else { " + this.appendToBuffer("''") + " }")
                    },
                    appendEscaped: function () {
                        this.aliases.escapeExpression = "this.escapeExpression", this.pushSource(this.appendToBuffer("escapeExpression(" + this.popStack() + ")"))
                    },
                    getContext: function (e) {
                        this.lastContext = e
                    },
                    pushContext: function () {
                        this.pushStackLiteral(this.contextName(this.lastContext))
                    },
                    lookupOnContext: function (e, t, n) {
                        var r = 0,
                            i = e.length;
                        for (n || !this.options.compat || this.lastContext ? this.pushContext() : this.push(this.depthedLookup(e[r++])); i > r; r++) this.replaceStack(function (n) {
                            var i = this.nameLookup(n, e[r], "context");
                            return t ? " && " + i : " != null ? " + i + " : " + n
                        })
                    },
                    lookupData: function (e, t) {
                        e ? this.pushStackLiteral("this.data(data, " + e + ")") : this.pushStackLiteral("data");
                        for (var n = t.length, r = 0; n > r; r++) this.replaceStack(function (e) {
                            return " && " + this.nameLookup(e, t[r], "data")
                        })
                    },
                    resolvePossibleLambda: function () {
                        this.aliases.lambda = "this.lambda", this.push("lambda(" + this.popStack() + ", " + this.contextName(0) + ")")
                    },
                    pushStringParam: function (e, t) {
                        this.pushContext(), this.pushString(t), "sexpr" !== t && ("string" == typeof e ? this.pushString(e) : this.pushStackLiteral(e))
                    },
                    emptyHash: function () {
                        this.pushStackLiteral("{}"), this.trackIds && this.push("{}"), this.stringParams && (this.push("{}"), this.push("{}"))
                    },
                    pushHash: function () {
                        this.hash && this.hashes.push(this.hash), this.hash = {
                            values: [],
                            types: [],
                            contexts: [],
                            ids: []
                        }
                    },
                    popHash: function () {
                        var e = this.hash;
                        this.hash = this.hashes.pop(), this.trackIds && this.push("{" + e.ids.join(",") + "}"), this.stringParams && (this.push("{" + e.contexts.join(",") + "}"), this.push("{" + e.types.join(",") + "}")), this.push("{\n    " + e.values.join(",\n    ") + "\n  }")
                    },
                    pushString: function (e) {
                        this.pushStackLiteral(this.quotedString(e))
                    },
                    push: function (e) {
                        return this.inlineStack.push(e), e
                    },
                    pushLiteral: function (e) {
                        this.pushStackLiteral(e)
                    },
                    pushProgram: function (e) {
                        null != e ? this.pushStackLiteral(this.programExpression(e)) : this.pushStackLiteral(null)
                    },
                    invokeHelper: function (e, t, n) {
                        this.aliases.helperMissing = "helpers.helperMissing";
                        var r = this.popStack(),
                            i = this.setupHelper(e, t),
                            s = (n ? i.name + " || " : "") + r + " || helperMissing";
                        this.push("((" + s + ").call(" + i.callParams + "))")
                    },
                    invokeKnownHelper: function (e, t) {
                        var n = this.setupHelper(e, t);
                        this.push(n.name + ".call(" + n.callParams + ")")
                    },
                    invokeAmbiguous: function (e, t) {
                        this.aliases.functionType = '"function"', this.aliases.helperMissing = "helpers.helperMissing", this.useRegister("helper");
                        var n = this.popStack();
                        this.emptyHash();
                        var r = this.setupHelper(0, e, t),
                            i = this.lastHelper = this.nameLookup("helpers", e, "helper");
                        this.push("((helper = (helper = " + i + " || " + n + ") != null ? helper : helperMissing" + (r.paramsInit ? "),(" + r.paramsInit : "") + "),(typeof helper === functionType ? helper.call(" + r.callParams + ") : helper))")
                    },
                    invokePartial: function (e, t) {
                        var n = [this.nameLookup("partials", e, "partial"), "'" + t + "'", "'" + e + "'", this.popStack(), this.popStack(), "helpers", "partials"];
                        this.options.data ? n.push("data") : this.options.compat && n.push("undefined"), this.options.compat && n.push("depths"), this.push("this.invokePartial(" + n.join(", ") + ")")
                    },
                    assignToHash: function (e) {
                        var t, n, r, i = this.popStack();
                        this.trackIds && (r = this.popStack()), this.stringParams && (n = this.popStack(), t = this.popStack());
                        var s = this.hash;
                        t && s.contexts.push("'" + e + "': " + t), n && s.types.push("'" + e + "': " + n), r && s.ids.push("'" + e + "': " + r), s.values.push("'" + e + "': (" + i + ")")
                    },
                    pushId: function (e, t) {
                        "ID" === e || "DATA" === e ? this.pushString(t) : "sexpr" === e ? this.pushStackLiteral("true") : this.pushStackLiteral("null")
                    },
                    compiler: r,
                    compileChildren: function (e, t) {
                        for (var n, r, i = e.children, s = 0, o = i.length; o > s; s++) {
                            n = i[s], r = new this.compiler;
                            var u = this.matchExistingProgram(n);
                            null == u ? (this.context.programs.push(""), u = this.context.programs.length, n.index = u, n.name = "program" + u, this.context.programs[u] = r.compile(n, t, this.context, !this.precompile), this.context.environments[u] = n, this.useDepths = this.useDepths || r.useDepths) : (n.index = u, n.name = "program" + u)
                        }
                    },
                    matchExistingProgram: function (e) {
                        for (var t = 0, n = this.context.environments.length; n > t; t++) {
                            var r = this.context.environments[t];
                            if (r && r.equals(e)) return t
                        }
                    },
                    programExpression: function (e) {
                        var t = this.environment.children[e],
                            n = (t.depths.list, this.useDepths),
                            r = [t.index, "data"];
                        return n && r.push("depths"), "this.program(" + r.join(", ") + ")"
                    },
                    useRegister: function (e) {
                        this.registers[e] || (this.registers[e] = !0, this.registers.list.push(e))
                    },
                    pushStackLiteral: function (e) {
                        return this.push(new n(e))
                    },
                    pushSource: function (e) {
                        this.pendingContent && (this.source.push(this.appendToBuffer(this.quotedString(this.pendingContent))), this.pendingContent = void 0), e && this.source.push(e)
                    },
                    pushStack: function (e) {
                        this.flushInline();
                        var t = this.incrStack();
                        return this.pushSource(t + " = " + e + ";"), this.compileStack.push(t), t
                    },
                    replaceStack: function (e) {
                        var t, r, i, s = "";
                        this.isInline();
                        if (!this.isInline()) throw new u("replaceStack on non-inline");
                        var o = this.popStack(!0);
                        if (o instanceof n) s = t = o.value, i = !0;
                        else {
                            r = !this.stackSlot;
                            var a = r ? this.incrStack() : this.topStackName();
                            s = "(" + this.push(a) + " = " + o + ")", t = this.topStack()
                        }
                        var f = e.call(this, t);
                        i || this.popStack(), r && this.stackSlot--, this.push("(" + s + f + ")")
                    },
                    incrStack: function () {
                        return this.stackSlot++, this.stackSlot > this.stackVars.length && this.stackVars.push("stack" + this.stackSlot), this.topStackName()
                    },
                    topStackName: function () {
                        return "stack" + this.stackSlot
                    },
                    flushInline: function () {
                        var e = this.inlineStack;
                        if (e.length) {
                            this.inlineStack = [];
                            for (var t = 0, r = e.length; r > t; t++) {
                                var i = e[t];
                                i instanceof n ? this.compileStack.push(i) : this.pushStack(i)
                            }
                        }
                    },
                    isInline: function () {
                        return this.inlineStack.length
                    },
                    popStack: function (e) {
                        var t = this.isInline(),
                            r = (t ? this.inlineStack : this.compileStack).pop();
                        if (!e && r instanceof n) return r.value;
                        if (!t) {
                            if (!this.stackSlot) throw new u("Invalid stack pop");
                            this.stackSlot--
                        }
                        return r
                    },
                    topStack: function () {
                        var e = this.isInline() ? this.inlineStack : this.compileStack,
                            t = e[e.length - 1];
                        return t instanceof n ? t.value : t
                    },
                    contextName: function (e) {
                        return this.useDepths && e ? "depths[" + e + "]" : "depth" + e
                    },
                    quotedString: function (e) {
                        return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029") + '"'
                    },
                    objectLiteral: function (e) {
                        var t = [];
                        for (var n in e) e.hasOwnProperty(n) && t.push(this.quotedString(n) + ":" + e[n]);
                        return "{" + t.join(",") + "}"
                    },
                    setupHelper: function (e, t, n) {
                        var r = [],
                            i = this.setupParams(t, e, r, n),
                            s = this.nameLookup("helpers", t, "helper");
                        return {
                            params: r,
                            paramsInit: i,
                            name: s,
                            callParams: [this.contextName(0)].concat(r).join(", ")
                        }
                    },
                    setupOptions: function (e, t, n) {
                        var r, i, s, o = {},
                            u = [],
                            a = [],
                            f = [];
                        o.name = this.quotedString(e), o.hash = this.popStack(), this.trackIds && (o.hashIds = this.popStack()), this.stringParams && (o.hashTypes = this.popStack(), o.hashContexts = this.popStack()), i = this.popStack(), s = this.popStack(), (s || i) && (s || (s = "this.noop"), i || (i = "this.noop"), o.fn = s, o.inverse = i);
                        for (var l = t; l--;) r = this.popStack(), n[l] = r, this.trackIds && (f[l] = this.popStack()), this.stringParams && (a[l] = this.popStack(), u[l] = this.popStack());
                        return this.trackIds && (o.ids = "[" + f.join(",") + "]"), this.stringParams && (o.types = "[" + a.join(",") + "]", o.contexts = "[" + u.join(",") + "]"), this.options.data && (o.data = "data"), o
                    },
                    setupParams: function (e, t, n, r) {
                        var i = this.objectLiteral(this.setupOptions(e, t, n));
                        return r ? (this.useRegister("options"), n.push("options"), "options=" + i) : (n.push(i), "")
                    }
                };
                for (var a = "break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield".split(" "), f = r.RESERVED_WORDS = {}, l = 0, c = a.length; c > l; l++) f[a[l]] = !0;
                return r.isValidJavaScriptVariableName = function (e) {
                    return !r.RESERVED_WORDS[e] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(e)
                }, i = r
            }(r, n),
            h = function (e, t, n, r, i) {
                var s, o = e,
                    u = t,
                    a = n.parser,
                    f = n.parse,
                    l = r.Compiler,
                    c = r.compile,
                    h = r.precompile,
                    p = i,
                    d = o.create,
                    v = function () {
                        var e = d();
                        return e.compile = function (t, n) {
                            return c(t, n, e)
                        }, e.precompile = function (t, n) {
                            return h(t, n, e)
                        }, e.AST = u, e.Compiler = l, e.JavaScriptCompiler = p, e.Parser = a, e.parse = f, e
                    };
                return o = v(), o.create = v, o["default"] = o, s = o
            }(s, o, f, l, c);
        return h
    }), ! function (e) {
        function t(e, t, n) {
            n = (n || 0) - 1;
            for (var r = e.length; ++n < r;)
                if (e[n] === t) return n;
            return -1
        }

        function n(e, n) {
            var r = typeof n;
            if (e = e.k, "boolean" == r || n == y) return e[n];
            "number" != r && "string" != r && (r = "object");
            var i = "number" == r ? n : T + n;
            return e = e[r] || (e[r] = {}), "object" == r ? e[i] && -1 < t(e[i], n) ? 0 : -1 : e[i] ? 0 : -1
        }

        function r(e) {
            var t = this.k,
                n = typeof e;
            if ("boolean" == n || e == y) t[e] = g;
            else {
                "number" != n && "string" != n && (n = "object");
                var r = "number" == n ? e : T + e,
                    i = t[n] || (t[n] = {});
                "object" == n ? (i[r] || (i[r] = [])).push(e) == this.b.length && (t[n] = b) : i[r] = g
            }
        }

        function i(e) {
            return e.charCodeAt(0)
        }

        function s(e, t) {
            var n = e.m,
                r = t.m;
            if (e = e.l, t = t.l, e !== t) {
                if (e > t || typeof e == "undefined") return 1;
                if (e < t || typeof t == "undefined") return -1
            }
            return n < r ? -1 : 1
        }

        function o(e) {
            var t = -1,
                n = e.length,
                i = f();
            i["false"] = i["null"] = i["true"] = i.undefined = b;
            var s = f();
            for (s.b = e, s.k = i, s.push = r; ++t < n;) s.push(e[t]);
            return i.object === !1 ? (p(s), y) : s
        }

        function u(e) {
            return "\\" + tt[e]
        }

        function a() {
            return w.pop() || []
        }

        function f() {
            return E.pop() || {
                a: "",
                b: y,
                c: "",
                k: y,
                l: y,
                "false": b,
                d: "",
                m: 0,
                e: "",
                leading: b,
                f: "",
                maxWait: 0,
                "null": b,
                number: y,
                object: y,
                push: y,
                g: y,
                string: y,
                h: "",
                trailing: b,
                "true": b,
                "undefined": b,
                i: b,
                j: b,
                n: y
            }
        }

        function l(e) {
            return typeof e.toString != "function" && typeof (e + "") == "string"
        }

        function c() {}

        function h(e) {
            e.length = 0, w.length < C && w.push(e)
        }

        function p(e) {
            var t = e.k;
            t && p(t), e.b = e.k = e.l = e.object = e.number = e.string = e.n = y, E.length < C && E.push(e)
        }

        function d(e, t, n) {
            t || (t = 0), typeof n == "undefined" && (n = e ? e.length : 0);
            var r = -1;
            n = n - t || 0;
            for (var i = Array(0 > n ? 0 : n); ++r < n;) i[r] = e[t + r];
            return i
        }

        function v(r) {
            function w(e) {
                return e && typeof e == "object" && !In(e) && dn.call(e, "__wrapped__") ? e : new E(e)
            }

            function E(e) {
                this.__wrapped__ = e
            }

            function C(e, t, n, r) {
                function i() {
                    var r = arguments,
                        f = o ? this : t;
                    return s || (e = t[u]), n.length && (r = r.length ? (r = On.call(r), a ? r.concat(n) : n.concat(r)) : n), this instanceof i ? (f = nt(e.prototype), r = e.apply(f, r), gt(r) ? r : f) : e.apply(f, r)
                }
                var s = mt(e),
                    o = !n,
                    u = t;
                if (o) {
                    var a = r;
                    n = t
                } else if (!s) {
                    if (!r) throw new en;
                    t = e
                }
                return i
            }

            function tt() {
                var e = f();
                e.g = U, e.b = e.c = e.f = e.h = "", e.e = "r", e.i = g, e.j = !!Rn;
                for (var t, n = 0; t = arguments[n]; n++)
                    for (var r in t) e[r] = t[r];
                n = e.a, e.d = /^[^,]+/.exec(n)[0], t = Jt, n = "return function(" + n + "){", r = "var m,r=" + e.d + ",C=" + e.e + ";if(!r)return C;" + e.h + ";", e.b ? (r += "var s=r.length;m=-1;if(" + e.b + "){", Hn.unindexedChars && (r += "if(q(r)){r=r.split('')}"), r += "while(++m<s){" + e.f + ";}}else{") : Hn.nonEnumArgs && (r += "var s=r.length;m=-1;if(s&&n(r)){while(++m<s){m+='';" + e.f + ";}}else{"), Hn.enumPrototypes && (r += "var E=typeof r=='function';"), Hn.enumErrorProps && (r += "var D=r===j||r instanceof Error;");
                var i = [];
                if (Hn.enumPrototypes && i.push('!(E&&m=="prototype")'), Hn.enumErrorProps && i.push('!(D&&(m=="message"||m=="name"))'), e.i && e.j) r += "var A=-1,B=z[typeof r]&&t(r),s=B?B.length:0;while(++A<s){m=B[A];", i.length && (r += "if(" + i.join("&&") + "){"), r += e.f + ";", i.length && (r += "}"), r += "}";
                else if (r += "for(m in r){", e.i && i.push("l.call(r, m)"), i.length && (r += "if(" + i.join("&&") + "){"), r += e.f + ";", i.length && (r += "}"), r += "}", Hn.nonEnumShadows) {
                    for (r += "if(r!==y){var h=r.constructor,p=r===(h&&h.prototype),e=r===H?G:r===j?i:J.call(r),v=w[e];", k = 0; 7 > k; k++) r += "m='" + e.g[k] + "';if((!(p&&v[m])&&l.call(r,m))", e.i || (r += "||(!v[m]&&r[m]!==y[m])"), r += "){" + e.f + "}";
                    r += "}"
                }
                return (e.b || Hn.nonEnumArgs) && (r += "}"), r += e.c + ";return C", t = t("i,j,l,n,o,q,t,u,y,z,w,G,H,J", n + r + "}"), p(e), t($, nn, dn, ct, In, bt, Rn, w, rn, et, Pn, Y, sn, bn)
            }

            function nt(e) {
                return gt(e) ? En(e) : {}
            }

            function it(e) {
                return zn[e]
            }

            function ot() {
                var e = (e = w.indexOf) === Pt ? t : e;
                return e
            }

            function ut(e) {
                return function (t, n, r, i) {
                    return typeof n != "boolean" && n != y && (i = r, r = i && i[n] === t ? m : n, n = b), r != y && (r = w.createCallback(r, i)), e(t, n, r, i)
                }
            }

            function ft(e) {
                var t, n;
                return !e || bn.call(e) != Q || (t = e.constructor, mt(t) && !(t instanceof t)) || !Hn.argsClass && ct(e) || !Hn.nodeClass && l(e) ? b : Hn.ownLast ? ($n(e, function (e, t, r) {
                    return n = dn.call(r, t), b
                }), n !== !1) : ($n(e, function (e, t) {
                    n = t
                }), n === m || dn.call(e, n))
            }

            function lt(e) {
                return Wn[e]
            }

            function ct(e) {
                return bn.call(e) == z
            }

            function ht(e, t, n, r, i, s) {
                var o = e;
                if (typeof t != "boolean" && t != y && (r = n, n = t, t = b), typeof n == "function") {
                    if (n = typeof r == "undefined" ? n : w.createCallback(n, r, 1), o = n(o), typeof o != "undefined") return o;
                    o = e
                }
                if (r = gt(o)) {
                    var u = bn.call(o);
                    if (!Z[u] || !Hn.nodeClass && l(o)) return o;
                    var f = In(o)
                }
                if (!r || !t) return r ? f ? d(o) : Xn({}, o) : o;
                switch (r = Dn[u], u) {
                    case X:
                    case V:
                        return new r(+o);
                    case K:
                    case Y:
                        return new r(o);
                    case G:
                        return r(o.source, D.exec(o))
                }
                u = !i, i || (i = a()), s || (s = a());
                for (var c = i.length; c--;)
                    if (i[c] == e) return s[c];
                return o = f ? r(o.length) : {}, f && (dn.call(e, "index") && (o.index = e.index), dn.call(e, "input") && (o.input = e.input)), i.push(e), s.push(o), (f ? Un : Jn)(e, function (e, r) {
                    o[r] = ht(e, t, n, m, i, s)
                }), u && (h(i), h(s)), o
            }

            function pt(e) {
                var t = [];
                return $n(e, function (e, n) {
                    mt(e) && t.push(n)
                }), t.sort()
            }

            function dt(e) {
                for (var t = -1, n = Rn(e), r = n.length, i = {}; ++t < r;) {
                    var s = n[t];
                    i[e[s]] = s
                }
                return i
            }

            function vt(e, t, n, r, i, s) {
                var o = n === x;
                if (typeof n == "function" && !o) {
                    n = w.createCallback(n, r, 2);
                    var u = n(e, t);
                    if (typeof u != "undefined") return !!u
                }
                if (e === t) return 0 !== e || 1 / e == 1 / t;
                var f = typeof e,
                    c = typeof t;
                if (e === e && (!e || "function" != f && "object" != f) && (!t || "function" != c && "object" != c)) return b;
                if (e == y || t == y) return e === t;
                if (c = bn.call(e), f = bn.call(t), c == z && (c = Q), f == z && (f = Q), c != f) return b;
                switch (c) {
                    case X:
                    case V:
                        return +e == +t;
                    case K:
                        return e != +e ? t != +t : 0 == e ? 1 / e == 1 / t : e == +t;
                    case G:
                    case Y:
                        return e == Zt(t)
                }
                if (f = c == W, !f) {
                    if (dn.call(e, "__wrapped__") || dn.call(t, "__wrapped__")) return vt(e.__wrapped__ || e, t.__wrapped__ || t, n, r, i, s);
                    if (c != Q || !Hn.nodeClass && (l(e) || l(t))) return b;
                    var c = !Hn.argsObject && ct(e) ? Gt : e.constructor,
                        p = !Hn.argsObject && ct(t) ? Gt : t.constructor;
                    if (c != p && (!mt(c) || !(c instanceof c && mt(p) && p instanceof p))) return b
                }
                for (p = !i, i || (i = a()), s || (s = a()), c = i.length; c--;)
                    if (i[c] == e) return s[c] == t;
                var d = 0,
                    u = g;
                if (i.push(e), s.push(t), f) {
                    if (c = e.length, d = t.length, u = d == e.length, !u && !o) return u;
                    for (; d--;)
                        if (f = c, p = t[d], o)
                            for (; f-- && !(u = vt(e[f], p, n, r, i, s)););
                        else if (!(u = vt(e[d], p, n, r, i, s))) break;
                    return u
                }
                return $n(t, function (t, o, a) {
                    return dn.call(a, o) ? (d++, u = dn.call(e, o) && vt(e[o], t, n, r, i, s)) : void 0
                }), u && !o && $n(e, function (e, t, n) {
                    return dn.call(n, t) ? u = -1 < --d : void 0
                }), p && (h(i), h(s)), u
            }

            function mt(e) {
                return typeof e == "function"
            }

            function gt(e) {
                return !!e && !!et[typeof e]
            }

            function yt(e) {
                return typeof e == "number" || bn.call(e) == K
            }

            function bt(e) {
                return typeof e == "string" || bn.call(e) == Y
            }

            function wt(e, t, n) {
                var r = arguments,
                    i = 0,
                    s = 2;
                if (!gt(e)) return e;
                if (n === x) var o = r[3],
                    u = r[4],
                    f = r[5];
                else {
                    var l = g,
                        u = a(),
                        f = a();
                    typeof n != "number" && (s = r.length), 3 < s && "function" == typeof r[s - 2] ? o = w.createCallback(r[--s - 1], r[s--], 2) : 2 < s && "function" == typeof r[s - 1] && (o = r[--s])
                }
                for (; ++i < s;)(In(r[i]) ? Ct : Jn)(r[i], function (t, n) {
                    var r, i, s = t,
                        a = e[n];
                    if (t && ((i = In(t)) || Kn(t))) {
                        for (s = u.length; s--;)
                            if (r = u[s] == t) {
                                a = f[s];
                                break
                            } if (!r) {
                            var l;
                            o && (s = o(a, t), l = typeof s != "undefined") && (a = s), l || (a = i ? In(a) ? a : [] : Kn(a) ? a : {}), u.push(t), f.push(a), l || (a = wt(a, t, x, o, u, f))
                        }
                    } else o && (s = o(a, t), typeof s == "undefined" && (s = t)), typeof s != "undefined" && (a = s);
                    e[n] = a
                });
                return l && (h(u), h(f)), e
            }

            function Et(e) {
                for (var t = -1, n = Rn(e), r = n.length, i = Xt(r); ++t < r;) i[t] = e[n[t]];
                return i
            }

            function St(e, t, n) {
                var r = -1,
                    i = ot(),
                    s = e ? e.length : 0,
                    o = b;
                return n = (0 > n ? Cn(0, s + n) : n) || 0, s && typeof s == "number" ? o = -1 < (bt(e) ? e.indexOf(t, n) : i(e, t, n)) : Un(e, function (e) {
                    return ++r < n ? void 0 : !(o = e === t)
                }), o
            }

            function xt(e, t, n) {
                var r = g;
                if (t = w.createCallback(t, n), In(e)) {
                    n = -1;
                    for (var i = e.length; ++n < i && (r = !!t(e[n], n, e)););
                } else Un(e, function (e, n, i) {
                    return r = !!t(e, n, i)
                });
                return r
            }

            function Tt(e, t, n) {
                var r = [];
                if (t = w.createCallback(t, n), In(e)) {
                    n = -1;
                    for (var i = e.length; ++n < i;) {
                        var s = e[n];
                        t(s, n, e) && r.push(s)
                    }
                } else Un(e, function (e, n, i) {
                    t(e, n, i) && r.push(e)
                });
                return r
            }

            function Nt(e, t, n) {
                if (t = w.createCallback(t, n), !In(e)) {
                    var r;
                    return Un(e, function (e, n, i) {
                        return t(e, n, i) ? (r = e, b) : void 0
                    }), r
                }
                n = -1;
                for (var i = e.length; ++n < i;) {
                    var s = e[n];
                    if (t(s, n, e)) return s
                }
            }

            function Ct(e, t, n) {
                if (t && typeof n == "undefined" && In(e)) {
                    n = -1;
                    for (var r = e.length; ++n < r && t(e[n], n, e) !== !1;);
                } else Un(e, t, n);
                return e
            }

            function kt(e, t, n) {
                var r = -1,
                    i = e ? e.length : 0,
                    s = Xt(typeof i == "number" ? i : 0);
                if (t = w.createCallback(t, n), In(e))
                    for (; ++r < i;) s[r] = t(e[r], r, e);
                else Un(e, function (e, n, i) {
                    s[++r] = t(e, n, i)
                });
                return s
            }

            function Lt(e, t, n) {
                var r = -1 / 0,
                    s = r;
                if (!t && In(e)) {
                    n = -1;
                    for (var o = e.length; ++n < o;) {
                        var u = e[n];
                        u > s && (s = u)
                    }
                } else t = !t && bt(e) ? i : w.createCallback(t, n), Un(e, function (e, n, i) {
                    n = t(e, n, i), n > r && (r = n, s = e)
                });
                return s
            }

            function At(e, t, n, r) {
                var i = 3 > arguments.length;
                if (t = w.createCallback(t, r, 4), In(e)) {
                    var s = -1,
                        o = e.length;
                    for (i && (n = e[++s]); ++s < o;) n = t(n, e[s], s, e)
                } else Un(e, function (e, r, s) {
                    n = i ? (i = b, e) : t(n, e, r, s)
                });
                return n
            }

            function Ot(e, t, n, r) {
                var i = e,
                    s = e ? e.length : 0,
                    o = 3 > arguments.length;
                if (typeof s != "number") var u = Rn(e),
                    s = u.length;
                else Hn.unindexedChars && bt(e) && (i = e.split(""));
                return t = w.createCallback(t, r, 4), Ct(e, function (e, r, a) {
                    r = u ? u[--s] : --s, n = o ? (o = b, i[r]) : t(n, i[r], r, a)
                }), n
            }

            function Mt(e, t, n) {
                var r;
                if (t = w.createCallback(t, n), In(e)) {
                    n = -1;
                    for (var i = e.length; ++n < i && !(r = t(e[n], n, e)););
                } else Un(e, function (e, n, i) {
                    return !(r = t(e, n, i))
                });
                return !!r
            }

            function _t(e) {
                var r = -1,
                    i = ot(),
                    s = e ? e.length : 0,
                    u = ln.apply(tn, On.call(arguments, 1)),
                    a = [],
                    f = s >= N && i === t;
                if (f) {
                    var l = o(u);
                    l ? (i = n, u = l) : f = b
                }
                for (; ++r < s;) l = e[r], 0 > i(u, l) && a.push(l);
                return f && p(u), a
            }

            function Dt(e, t, n) {
                if (e) {
                    var r = 0,
                        i = e.length;
                    if (typeof t != "number" && t != y) {
                        var s = -1;
                        for (t = w.createCallback(t, n); ++s < i && t(e[s], s, e);) r++
                    } else if (r = t, r == y || n) return e[0];
                    return d(e, 0, kn(Cn(0, r), i))
                }
            }

            function Pt(e, n, r) {
                if (typeof r == "number") {
                    var i = e ? e.length : 0;
                    r = 0 > r ? Cn(0, i + r) : r || 0
                } else if (r) return r = Bt(e, n), e[r] === n ? r : -1;
                return e ? t(e, n, r) : -1
            }

            function Ht(e, t, n) {
                if (typeof t != "number" && t != y) {
                    var r = 0,
                        i = -1,
                        s = e ? e.length : 0;
                    for (t = w.createCallback(t, n); ++i < s && t(e[i], i, e);) r++
                } else r = t == y || n ? 1 : Cn(0, t);
                return d(e, r)
            }

            function Bt(e, t, n, r) {
                var i = 0,
                    s = e ? e.length : i;
                for (n = n ? w.createCallback(n, r, 1) : Ut, t = n(t); i < s;) r = i + s >>> 1, n(e[r]) < t ? i = r + 1 : s = r;
                return i
            }

            function jt(e) {
                for (var t = -1, n = e ? Lt(Qn(e, "length")) : 0, r = Xt(0 > n ? 0 : n); ++t < n;) r[t] = Qn(e, t);
                return r
            }

            function Ft(e, t) {
                for (var n = -1, r = e ? e.length : 0, i = {}; ++n < r;) {
                    var s = e[n];
                    t ? i[s] = t[n] : i[s[0]] = s[1]
                }
                return i
            }

            function It(e, t) {
                return Hn.fastBind || wn && 2 < arguments.length ? wn.call.apply(wn, arguments) : C(e, t, On.call(arguments, 2))
            }

            function qt(e, t, n) {
                function r() {
                    fn(h), fn(p), f = 0, h = p = y
                }

                function i() {
                    var t = d && (!v || 1 < f);
                    r(), t && (c !== !1 && (l = new $t), u = e.apply(a, o))
                }

                function s() {
                    r(), (d || c !== t) && (l = new $t, u = e.apply(a, o))
                }
                var o, u, a, f = 0,
                    l = 0,
                    c = b,
                    h = y,
                    p = y,
                    d = g;
                if (t = Cn(0, t || 0), n === g) var v = g,
                    d = b;
                else gt(n) && (v = n.leading, c = "maxWait" in n && Cn(t, n.maxWait || 0), d = "trailing" in n ? n.trailing : d);
                return function () {
                    if (o = arguments, a = this, f++, fn(p), c === !1) v && 2 > f && (u = e.apply(a, o));
                    else {
                        var n = new $t;
                        !h && !v && (l = n);
                        var r = c - (n - l);
                        0 < r ? h || (h = yn(s, r)) : (fn(h), h = y, l = n, u = e.apply(a, o))
                    }
                    return t !== c && (p = yn(i, t)), u
                }
            }

            function Rt(e) {
                var t = On.call(arguments, 1);
                return yn(function () {
                    e.apply(m, t)
                }, 1)
            }

            function Ut(e) {
                return e
            }

            function zt(e) {
                Ct(pt(e), function (t) {
                    var n = w[t] = e[t];
                    w.prototype[t] = function () {
                        var e = this.__wrapped__,
                            t = [e];
                        return vn.apply(t, arguments), t = n.apply(w, t), e && typeof e == "object" && e === t ? this : new E(t)
                    }
                })
            }

            function Wt() {
                return this.__wrapped__
            }
            r = r ? st.defaults(e.Object(), r, st.pick(e, R)) : e;
            var Xt = r.Array,
                Vt = r.Boolean,
                $t = r.Date,
                Jt = r.Function,
                Kt = r.Math,
                Qt = r.Number,
                Gt = r.Object,
                Yt = r.RegExp,
                Zt = r.String,
                en = r.TypeError,
                tn = [],
                nn = r.Error.prototype,
                rn = Gt.prototype,
                sn = Zt.prototype,
                on = r._,
                un = Yt("^" + Zt(rn.valueOf).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/valueOf|for [^\]]+/g, ".+?") + "$"),
                an = Kt.ceil,
                fn = r.clearTimeout,
                ln = tn.concat,
                cn = Kt.floor,
                hn = Jt.prototype.toString,
                pn = un.test(pn = Gt.getPrototypeOf) && pn,
                dn = rn.hasOwnProperty,
                vn = tn.push,
                mn = rn.propertyIsEnumerable,
                gn = r.setImmediate,
                yn = r.setTimeout,
                bn = rn.toString,
                wn = un.test(wn = bn.bind) && wn,
                En = un.test(En = Gt.create) && En,
                Sn = un.test(Sn = Xt.isArray) && Sn,
                xn = r.isFinite,
                Tn = r.isNaN,
                Nn = un.test(Nn = Gt.keys) && Nn,
                Cn = Kt.max,
                kn = Kt.min,
                Ln = r.parseInt,
                An = Kt.random,
                On = tn.slice,
                Mn = un.test(r.attachEvent),
                _n = wn && !/\n|true/.test(wn + Mn),
                Dn = {};
            Dn[W] = Xt, Dn[X] = Vt, Dn[V] = $t, Dn[J] = Jt, Dn[Q] = Gt, Dn[K] = Qt, Dn[G] = Yt, Dn[Y] = Zt;
            var Pn = {};
            Pn[W] = Pn[V] = Pn[K] = {
                    constructor: g,
                    toLocaleString: g,
                    toString: g,
                    valueOf: g
                }, Pn[X] = Pn[Y] = {
                    constructor: g,
                    toString: g,
                    valueOf: g
                }, Pn[$] = Pn[J] = Pn[G] = {
                    constructor: g,
                    toString: g
                }, Pn[Q] = {
                    constructor: g
                },
                function () {
                    for (var e = U.length; e--;) {
                        var t, n = U[e];
                        for (t in Pn) dn.call(Pn, t) && !dn.call(Pn[t], n) && (Pn[t][n] = b)
                    }
                }(), E.prototype = w.prototype;
            var Hn = w.support = {};
            ! function () {
                function e() {
                    this.x = 1
                }
                var t = {
                        0: 1,
                        length: 1
                    },
                    n = [];
                e.prototype = {
                    valueOf: 1
                };
                for (var r in new e) n.push(r);
                for (r in arguments);
                Hn.argsObject = arguments.constructor == Gt && !(arguments instanceof Xt), Hn.argsClass = ct(arguments), Hn.enumErrorProps = mn.call(nn, "message") || mn.call(nn, "name"), Hn.enumPrototypes = mn.call(e, "prototype"), Hn.fastBind = wn && !_n, Hn.ownLast = "x" != n[0], Hn.nonEnumArgs = 0 != r, Hn.nonEnumShadows = !/valueOf/.test(n), Hn.spliceObjects = (tn.splice.call(t, 0, 1), !t[0]), Hn.unindexedChars = "xx" != "x" [0] + Gt("x")[0];
                try {
                    Hn.nodeClass = bn.call(document) != Q || !!({
                        toString: 0
                    } + "")
                } catch (i) {
                    Hn.nodeClass = g
                }
            }(1), w.templateSettings = {
                escape: /<%-([\s\S]+?)%>/g,
                evaluate: /<%([\s\S]+?)%>/g,
                interpolate: P,
                variable: "",
                imports: {
                    _: w
                }
            };
            var Bn = {
                    a: "x,F,k",
                    h: "var a=arguments,b=0,c=typeof k=='number'?2:a.length;while(++b<c){r=a[b];if(r&&z[typeof r]){",
                    f: "if(typeof C[m]=='undefined')C[m]=r[m]",
                    c: "}}"
                },
                jn = {
                    a: "f,d,I",
                    h: "d=d&&typeof I=='undefined'?d:u.createCallback(d,I)",
                    b: "typeof s=='number'",
                    f: "if(d(r[m],m,f)===false)return C"
                },
                Fn = {
                    h: "if(!z[typeof r])return C;" + jn.h,
                    b: b
                };
            En || (nt = function (e) {
                if (gt(e)) {
                    c.prototype = e;
                    var t = new c;
                    c.prototype = y
                }
                return t || {}
            }), Hn.argsClass || (ct = function (e) {
                return e ? dn.call(e, "callee") : b
            });
            var In = Sn || function (e) {
                    return e ? typeof e == "object" && bn.call(e) == W : b
                },
                qn = tt({
                    a: "x",
                    e: "[]",
                    h: "if(!(z[typeof x]))return C",
                    f: "C.push(m)"
                }),
                Rn = Nn ? function (e) {
                    return gt(e) ? Hn.enumPrototypes && typeof e == "function" || Hn.nonEnumArgs && e.length && ct(e) ? qn(e) : Nn(e) : []
                } : qn,
                Un = tt(jn),
                zn = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;"
                },
                Wn = dt(zn),
                Xn = tt(Bn, {
                    h: Bn.h.replace(";", ";if(c>3&&typeof a[c-2]=='function'){var d=u.createCallback(a[--c-1],a[c--],2)}else if(c>2&&typeof a[c-1]=='function'){d=a[--c]}"),
                    f: "C[m]=d?d(C[m],r[m]):r[m]"
                }),
                Vn = tt(Bn),
                $n = tt(jn, Fn, {
                    i: b
                }),
                Jn = tt(jn, Fn);
            mt(/x/) && (mt = function (e) {
                return typeof e == "function" && bn.call(e) == J
            });
            var Kn = pn ? function (e) {
                    if (!e || bn.call(e) != Q || !Hn.argsClass && ct(e)) return b;
                    var t = e.valueOf,
                        n = typeof t == "function" && (n = pn(t)) && pn(n);
                    return n ? e == n || pn(e) == n : ft(e)
                } : ft,
                Qn = kt,
                Gn = ut(function er(e, t, n) {
                    for (var r = -1, i = e ? e.length : 0, s = []; ++r < i;) {
                        var o = e[r];
                        n && (o = n(o, r, e)), In(o) ? vn.apply(s, t ? o : er(o)) : s.push(o)
                    }
                    return s
                }),
                Yn = ut(function (e, r, i) {
                    var s = -1,
                        u = ot(),
                        f = e ? e.length : 0,
                        l = [],
                        c = !r && f >= N && u === t,
                        d = i || c ? a() : l;
                    if (c) {
                        var v = o(d);
                        v ? (u = n, d = v) : (c = b, d = i ? d : (h(d), l))
                    }
                    for (; ++s < f;) {
                        var v = e[s],
                            m = i ? i(v, s, e) : v;
                        (r ? !s || d[d.length - 1] !== m : 0 > u(d, m)) && ((i || c) && d.push(m), l.push(v))
                    }
                    return c ? (h(d.b), p(d)) : i && h(d), l
                });
            _n && rt && typeof gn == "function" && (Rt = It(gn, r));
            var Zn = 8 == Ln(B + "08") ? Ln : function (e, t) {
                return Ln(bt(e) ? e.replace(j, "") : e, t || 0)
            };
            return w.after = function (e, t) {
                return 1 > e ? t() : function () {
                    return 1 > --e ? t.apply(this, arguments) : void 0
                }
            }, w.assign = Xn, w.at = function (e) {
                var t = -1,
                    n = ln.apply(tn, On.call(arguments, 1)),
                    r = n.length,
                    i = Xt(r);
                for (Hn.unindexedChars && bt(e) && (e = e.split("")); ++t < r;) i[t] = e[n[t]];
                return i
            }, w.bind = It, w.bindAll = function (e) {
                for (var t = 1 < arguments.length ? ln.apply(tn, On.call(arguments, 1)) : pt(e), n = -1, r = t.length; ++n < r;) {
                    var i = t[n];
                    e[i] = It(e[i], e)
                }
                return e
            }, w.bindKey = function (e, t) {
                return C(e, t, On.call(arguments, 2), x)
            }, w.compact = function (e) {
                for (var t = -1, n = e ? e.length : 0, r = []; ++t < n;) {
                    var i = e[t];
                    i && r.push(i)
                }
                return r
            }, w.compose = function () {
                var e = arguments;
                return function () {
                    for (var t = arguments, n = e.length; n--;) t = [e[n].apply(this, t)];
                    return t[0]
                }
            }, w.countBy = function (e, t, n) {
                var r = {};
                return t = w.createCallback(t, n), Ct(e, function (e, n, i) {
                    n = Zt(t(e, n, i)), dn.call(r, n) ? r[n]++ : r[n] = 1
                }), r
            }, w.createCallback = function (e, t, n) {
                if (e == y) return Ut;
                var r = typeof e;
                if ("function" != r) {
                    if ("object" != r) return function (t) {
                        return t[e]
                    };
                    var i = Rn(e);
                    return function (t) {
                        for (var n = i.length, r = b; n-- && (r = vt(t[i[n]], e[i[n]], x)););
                        return r
                    }
                }
                return typeof t == "undefined" || H && !H.test(hn.call(e)) ? e : 1 === n ? function (n) {
                    return e.call(t, n)
                } : 2 === n ? function (n, r) {
                    return e.call(t, n, r)
                } : 4 === n ? function (n, r, i, s) {
                    return e.call(t, n, r, i, s)
                } : function (n, r, i) {
                    return e.call(t, n, r, i)
                }
            }, w.debounce = qt, w.defaults = Vn, w.defer = Rt, w.delay = function (e, t) {
                var n = On.call(arguments, 2);
                return yn(function () {
                    e.apply(m, n)
                }, t)
            }, w.difference = _t, w.filter = Tt, w.flatten = Gn, w.forEach = Ct, w.forIn = $n, w.forOwn = Jn, w.functions = pt, w.groupBy = function (e, t, n) {
                var r = {};
                return t = w.createCallback(t, n), Ct(e, function (e, n, i) {
                    n = Zt(t(e, n, i)), (dn.call(r, n) ? r[n] : r[n] = []).push(e)
                }), r
            }, w.initial = function (e, t, n) {
                if (!e) return [];
                var r = 0,
                    i = e.length;
                if (typeof t != "number" && t != y) {
                    var s = i;
                    for (t = w.createCallback(t, n); s-- && t(e[s], s, e);) r++
                } else r = t == y || n ? 1 : t || r;
                return d(e, 0, kn(Cn(0, i - r), i))
            }, w.intersection = function (e) {
                for (var r = arguments, i = r.length, s = -1, u = a(), f = -1, l = ot(), c = e ? e.length : 0, d = [], v = a(); ++s < i;) {
                    var m = r[s];
                    u[s] = l === t && (m ? m.length : 0) >= N && o(s ? r[s] : v)
                }
                e: for (; ++f < c;) {
                    var g = u[0],
                        m = e[f];
                    if (0 > (g ? n(g, m) : l(v, m))) {
                        for (s = i, (g || v).push(m); --s;)
                            if (g = u[s], 0 > (g ? n(g, m) : l(r[s], m))) continue e;
                        d.push(m)
                    }
                }
                for (; i--;)(g = u[i]) && p(g);
                return h(u), h(v), d
            }, w.invert = dt, w.invoke = function (e, t) {
                var n = On.call(arguments, 2),
                    r = -1,
                    i = typeof t == "function",
                    s = e ? e.length : 0,
                    o = Xt(typeof s == "number" ? s : 0);
                return Ct(e, function (e) {
                    o[++r] = (i ? t : e[t]).apply(e, n)
                }), o
            }, w.keys = Rn, w.map = kt, w.max = Lt, w.memoize = function (e, t) {
                function n() {
                    var r = n.cache,
                        i = T + (t ? t.apply(this, arguments) : arguments[0]);
                    return dn.call(r, i) ? r[i] : r[i] = e.apply(this, arguments)
                }
                return n.cache = {}, n
            }, w.merge = wt, w.min = function (e, t, n) {
                var r = 1 / 0,
                    s = r;
                if (!t && In(e)) {
                    n = -1;
                    for (var o = e.length; ++n < o;) {
                        var u = e[n];
                        u < s && (s = u)
                    }
                } else t = !t && bt(e) ? i : w.createCallback(t, n), Un(e, function (e, n, i) {
                    n = t(e, n, i), n < r && (r = n, s = e)
                });
                return s
            }, w.omit = function (e, t, n) {
                var r = ot(),
                    i = typeof t == "function",
                    s = {};
                if (i) t = w.createCallback(t, n);
                else var o = ln.apply(tn, On.call(arguments, 1));
                return $n(e, function (e, n, u) {
                    (i ? !t(e, n, u) : 0 > r(o, n)) && (s[n] = e)
                }), s
            }, w.once = function (e) {
                var t, n;
                return function () {
                    return t ? n : (t = g, n = e.apply(this, arguments), e = y, n)
                }
            }, w.pairs = function (e) {
                for (var t = -1, n = Rn(e), r = n.length, i = Xt(r); ++t < r;) {
                    var s = n[t];
                    i[t] = [s, e[s]]
                }
                return i
            }, w.partial = function (e) {
                return C(e, On.call(arguments, 1))
            }, w.partialRight = function (e) {
                return C(e, On.call(arguments, 1), y, x)
            }, w.pick = function (e, t, n) {
                var r = {};
                if (typeof t != "function")
                    for (var i = -1, s = ln.apply(tn, On.call(arguments, 1)), o = gt(e) ? s.length : 0; ++i < o;) {
                        var u = s[i];
                        u in e && (r[u] = e[u])
                    } else t = w.createCallback(t, n), $n(e, function (e, n, i) {
                        t(e, n, i) && (r[n] = e)
                    });
                return r
            }, w.pluck = Qn, w.range = function (e, t, n) {
                e = +e || 0, n = +n || 1, t == y && (t = e, e = 0);
                var r = -1;
                t = Cn(0, an((t - e) / n));
                for (var i = Xt(t); ++r < t;) i[r] = e, e += n;
                return i
            }, w.reject = function (e, t, n) {
                return t = w.createCallback(t, n), Tt(e, function (e, n, r) {
                    return !t(e, n, r)
                })
            }, w.rest = Ht, w.shuffle = function (e) {
                var t = -1,
                    n = e ? e.length : 0,
                    r = Xt(typeof n == "number" ? n : 0);
                return Ct(e, function (e) {
                    var n = cn(An() * (++t + 1));
                    r[t] = r[n], r[n] = e
                }), r
            }, w.sortBy = function (e, t, n) {
                var r = -1,
                    i = e ? e.length : 0,
                    o = Xt(typeof i == "number" ? i : 0);
                for (t = w.createCallback(t, n), Ct(e, function (e, n, i) {
                        var s = o[++r] = f();
                        s.l = t(e, n, i), s.m = r, s.n = e
                    }), i = o.length, o.sort(s); i--;) e = o[i], o[i] = e.n, p(e);
                return o
            }, w.tap = function (e, t) {
                return t(e), e
            }, w.throttle = function (e, t, n) {
                var r = g,
                    i = g;
                return n === !1 ? r = b : gt(n) && (r = "leading" in n ? n.leading : r, i = "trailing" in n ? n.trailing : i), n = f(), n.leading = r, n.maxWait = t, n.trailing = i, e = qt(e, t, n), p(n), e
            }, w.times = function (e, t, n) {
                e = -1 < (e = +e) ? e : 0;
                var r = -1,
                    i = Xt(e);
                for (t = w.createCallback(t, n, 1); ++r < e;) i[r] = t(r);
                return i
            }, w.toArray = function (e) {
                return e && typeof e.length == "number" ? Hn.unindexedChars && bt(e) ? e.split("") : d(e) : Et(e)
            }, w.transform = function (e, t, n, r) {
                var i = In(e);
                return t = w.createCallback(t, r, 4), n == y && (i ? n = [] : (r = e && e.constructor, n = nt(r && r.prototype))), (i ? Un : Jn)(e, function (e, r, i) {
                    return t(n, e, r, i)
                }), n
            }, w.union = function (e) {
                return In(e) || (arguments[0] = e ? On.call(e) : tn), Yn(ln.apply(tn, arguments))
            }, w.uniq = Yn, w.unzip = jt, w.values = Et, w.where = Tt, w.without = function (e) {
                return _t(e, On.call(arguments, 1))
            }, w.wrap = function (e, t) {
                return function () {
                    var n = [e];
                    return vn.apply(n, arguments), t.apply(this, n)
                }
            }, w.zip = function (e) {
                return e ? jt(arguments) : []
            }, w.zipObject = Ft, w.collect = kt, w.drop = Ht, w.each = Ct, w.extend = Xn, w.methods = pt, w.object = Ft, w.select = Tt, w.tail = Ht, w.unique = Yn, zt(w), w.chain = w, w.prototype.chain = function () {
                return this
            }, w.clone = ht, w.cloneDeep = function (e, t, n) {
                return ht(e, g, t, n)
            }, w.contains = St, w.escape = function (e) {
                return e == y ? "" : Zt(e).replace(I, it)
            }, w.every = xt, w.find = Nt, w.findIndex = function (e, t, n) {
                var r = -1,
                    i = e ? e.length : 0;
                for (t = w.createCallback(t, n); ++r < i;)
                    if (t(e[r], r, e)) return r;
                return -1
            }, w.findKey = function (e, t, n) {
                var r;
                return t = w.createCallback(t, n), Jn(e, function (e, n, i) {
                    return t(e, n, i) ? (r = n, b) : void 0
                }), r
            }, w.has = function (e, t) {
                return e ? dn.call(e, t) : b
            }, w.identity = Ut, w.indexOf = Pt, w.isArguments = ct, w.isArray = In, w.isBoolean = function (e) {
                return e === g || e === !1 || bn.call(e) == X
            }, w.isDate = function (e) {
                return e ? typeof e == "object" && bn.call(e) == V : b
            }, w.isElement = function (e) {
                return e ? 1 === e.nodeType : b
            }, w.isEmpty = function (e) {
                var t = g;
                if (!e) return t;
                var n = bn.call(e),
                    r = e.length;
                return n == W || n == Y || (Hn.argsClass ? n == z : ct(e)) || n == Q && typeof r == "number" && mt(e.splice) ? !r : (Jn(e, function () {
                    return t = b
                }), t)
            }, w.isEqual = vt, w.isFinite = function (e) {
                return xn(e) && !Tn(parseFloat(e))
            }, w.isFunction = mt, w.isNaN = function (e) {
                return yt(e) && e != +e
            }, w.isNull = function (e) {
                return e === y
            }, w.isNumber = yt, w.isObject = gt, w.isPlainObject = Kn, w.isRegExp = function (e) {
                return !!e && !!et[typeof e] && bn.call(e) == G
            }, w.isString = bt, w.isUndefined = function (e) {
                return typeof e == "undefined"
            }, w.lastIndexOf = function (e, t, n) {
                var r = e ? e.length : 0;
                for (typeof n == "number" && (r = (0 > n ? Cn(0, r + n) : kn(n, r - 1)) + 1); r--;)
                    if (e[r] === t) return r;
                return -1
            }, w.mixin = zt, w.noConflict = function () {
                return r._ = on, this
            }, w.parseInt = Zn, w.random = function (e, t) {
                e == y && t == y && (t = 1), e = +e || 0, t == y ? (t = e, e = 0) : t = +t || 0;
                var n = An();
                return e % 1 || t % 1 ? e + kn(n * (t - e + parseFloat("1e-" + ((n + "").length - 1))), t) : e + cn(n * (t - e + 1))
            }, w.reduce = At, w.reduceRight = Ot, w.result = function (e, t) {
                var n = e ? e[t] : m;
                return mt(n) ? e[t]() : n
            }, w.runInContext = v, w.size = function (e) {
                var t = e ? e.length : 0;
                return typeof t == "number" ? t : Rn(e).length
            }, w.some = Mt, w.sortedIndex = Bt, w.template = function (e, t, n) {
                var r = w.templateSettings;
                e || (e = ""), n = Vn({}, n, r);
                var i, s = Vn({}, n.imports, r.imports),
                    r = Rn(s),
                    s = Et(s),
                    o = 0,
                    a = n.interpolate || F,
                    f = "__p+='",
                    a = Yt((n.escape || F).source + "|" + a.source + "|" + (a === P ? _ : F).source + "|" + (n.evaluate || F).source + "|$", "g");
                e.replace(a, function (t, n, r, s, a, l) {
                    return r || (r = s), f += e.slice(o, l).replace(q, u), n && (f += "'+__e(" + n + ")+'"), a && (i = g, f += "';" + a + ";__p+='"), r && (f += "'+((__t=(" + r + "))==null?'':__t)+'"), o = l + t.length, t
                }), f += "';\n", a = n = n.variable, a || (n = "obj", f = "with(" + n + "){" + f + "}"), f = (i ? f.replace(L, "") : f).replace(A, "$1").replace(O, "$1;"), f = "function(" + n + "){" + (a ? "" : n + "||(" + n + "={});") + "var __t,__p='',__e=_.escape" + (i ? ",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}" : ";") + f + "return __p}";
                try {
                    var l = Jt(r, "return " + f).apply(m, s)
                } catch (c) {
                    throw c.source = f, c
                }
                return t ? l(t) : (l.source = f, l)
            }, w.unescape = function (e) {
                return e == y ? "" : Zt(e).replace(M, lt)
            }, w.uniqueId = function (e) {
                var t = ++S;
                return Zt(e == y ? "" : e) + t
            }, w.all = xt, w.any = Mt, w.detect = Nt, w.findWhere = Nt, w.foldl = At, w.foldr = Ot, w.include = St, w.inject = At, Jn(w, function (e, t) {
                w.prototype[t] || (w.prototype[t] = function () {
                    var t = [this.__wrapped__];
                    return vn.apply(t, arguments), e.apply(w, t)
                })
            }), w.first = Dt, w.last = function (e, t, n) {
                if (e) {
                    var r = 0,
                        i = e.length;
                    if (typeof t != "number" && t != y) {
                        var s = i;
                        for (t = w.createCallback(t, n); s-- && t(e[s], s, e);) r++
                    } else if (r = t, r == y || n) return e[i - 1];
                    return d(e, Cn(0, i - r))
                }
            }, w.take = Dt, w.head = Dt, Jn(w, function (e, t) {
                w.prototype[t] || (w.prototype[t] = function (t, n) {
                    var r = e(this.__wrapped__, t, n);
                    return t == y || n && typeof t != "function" ? r : new E(r)
                })
            }), w.VERSION = "1.3.1", w.prototype.toString = function () {
                return Zt(this.__wrapped__)
            }, w.prototype.value = Wt, w.prototype.valueOf = Wt, Un(["join", "pop", "shift"], function (e) {
                var t = tn[e];
                w.prototype[e] = function () {
                    return t.apply(this.__wrapped__, arguments)
                }
            }), Un(["push", "reverse", "sort", "unshift"], function (e) {
                var t = tn[e];
                w.prototype[e] = function () {
                    return t.apply(this.__wrapped__, arguments), this
                }
            }), Un(["concat", "slice", "splice"], function (e) {
                var t = tn[e];
                w.prototype[e] = function () {
                    return new E(t.apply(this.__wrapped__, arguments))
                }
            }), Hn.spliceObjects || Un(["pop", "shift", "splice"], function (e) {
                var t = tn[e],
                    n = "splice" == e;
                w.prototype[e] = function () {
                    var e = this.__wrapped__,
                        r = t.apply(e, arguments);
                    return 0 === e.length && delete e[0], n ? new E(r) : r
                }
            }), w
        }
        var m, g = !0,
            y = null,
            b = !1,
            w = [],
            E = [],
            S = 0,
            x = {},
            T = +(new Date) + "",
            N = 75,
            C = 40,
            L = /\b__p\+='';/g,
            A = /\b(__p\+=)''\+/g,
            O = /(__e\(.*?\)|\b__t\))\+'';/g,
            M = /&(?:amp|lt|gt|quot|#39);/g,
            _ = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            D = /\w*$/,
            P = /<%=([\s\S]+?)%>/g,
            H = (H = /\bthis\b/) && H.test(v) && H,
            B = " 	\f ﻿\n\r\u2028\u2029 ᠎             　",
            j = RegExp("^[" + B + "]*0+(?=.$)"),
            F = /($^)/,
            I = /[&<>"']/g,
            q = /['\n\r\t\u2028\u2029\\]/g,
            R = "Array Boolean Date Error Function Math Number Object RegExp String _ attachEvent clearTimeout isFinite isNaN parseInt setImmediate setTimeout".split(" "),
            U = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),
            z = "[object Arguments]",
            W = "[object Array]",
            X = "[object Boolean]",
            V = "[object Date]",
            $ = "[object Error]",
            J = "[object Function]",
            K = "[object Number]",
            Q = "[object Object]",
            G = "[object RegExp]",
            Y = "[object String]",
            Z = {};
        Z[J] = b, Z[z] = Z[W] = Z[X] = Z[V] = Z[K] = Z[Q] = Z[G] = Z[Y] = g;
        var et = {
                "boolean": b,
                "function": g,
                object: g,
                number: b,
                string: b,
                "undefined": b
            },
            tt = {
                "\\": "\\",
                "'": "'",
                "\n": "n",
                "\r": "r",
                "	": "t",
                "\u2028": "u2028",
                "\u2029": "u2029"
            },
            nt = et[typeof exports] && exports,
            rt = et[typeof module] && module && module.exports == nt && module,
            it = et[typeof global] && global;
        !it || it.global !== it && it.window !== it || (e = it);
        var st = v();
        typeof define == "function" && typeof define.amd == "object" && define.amd ? (e._ = st, define("underscore", [], function () {
            return st
        })) : nt && !nt.nodeType ? rt ? (rt.exports = st)._ = st : nt._ = st : e._ = st
    }(this), ! function (e, t) {
        "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function (e) {
            if (!e.document) throw new Error("jQuery requires a window with a document");
            return t(e)
        } : t(e)
    }("undefined" != typeof window ? window : this, function (e, t) {
        function g(e) {
            var t = e.length,
                n = h.type(e);
            return "function" === n || h.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e
        }

        function S(e, t, n) {
            if (h.isFunction(t)) return h.grep(e, function (e, r) {
                return !!t.call(e, r, e) !== n
            });
            if (t.nodeType) return h.grep(e, function (e) {
                return e === t !== n
            });
            if ("string" == typeof t) {
                if (E.test(t)) return h.filter(t, e, n);
                t = h.filter(t, e)
            }
            return h.grep(e, function (e) {
                return h.inArray(e, t) >= 0 !== n
            })
        }

        function A(e, t) {
            do e = e[t]; while (e && 1 !== e.nodeType);
            return e
        }

        function _(e) {
            var t = M[e] = {};
            return h.each(e.match(O) || [], function (e, n) {
                t[n] = !0
            }), t
        }

        function P() {
            T.addEventListener ? (T.removeEventListener("DOMContentLoaded", H, !1), e.removeEventListener("load", H, !1)) : (T.detachEvent("onreadystatechange", H), e.detachEvent("onload", H))
        }

        function H() {
            (T.addEventListener || "load" === event.type || "complete" === T.readyState) && (P(), h.ready())
        }

        function q(e, t, n) {
            if (void 0 === n && 1 === e.nodeType) {
                var r = "data-" + t.replace(I, "-$1").toLowerCase();
                if (n = e.getAttribute(r), "string" == typeof n) {
                    try {
                        n = "true" === n ? !0 : "false" === n ? !1 : "null" === n ? null : +n + "" === n ? +n : F.test(n) ? h.parseJSON(n) : n
                    } catch (i) {}
                    h.data(e, t, n)
                } else n = void 0
            }
            return n
        }

        function R(e) {
            var t;
            for (t in e)
                if (("data" !== t || !h.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
            return !0
        }

        function U(e, t, r, i) {
            if (h.acceptData(e)) {
                var s, o, u = h.expando,
                    a = e.nodeType,
                    f = a ? h.cache : e,
                    l = a ? e[u] : e[u] && u;
                if (l && f[l] && (i || f[l].data) || void 0 !== r || "string" != typeof t) return l || (l = a ? e[u] = n.pop() || h.guid++ : u), f[l] || (f[l] = a ? {} : {
                    toJSON: h.noop
                }), ("object" == typeof t || "function" == typeof t) && (i ? f[l] = h.extend(f[l], t) : f[l].data = h.extend(f[l].data, t)), o = f[l], i || (o.data || (o.data = {}), o = o.data), void 0 !== r && (o[h.camelCase(t)] = r), "string" == typeof t ? (s = o[t], null == s && (s = o[h.camelCase(t)])) : s = o, s
            }
        }

        function z(e, t, n) {
            if (h.acceptData(e)) {
                var r, i, s = e.nodeType,
                    o = s ? h.cache : e,
                    u = s ? e[h.expando] : h.expando;
                if (o[u]) {
                    if (t && (r = n ? o[u] : o[u].data)) {
                        h.isArray(t) ? t = t.concat(h.map(t, h.camelCase)) : t in r ? t = [t] : (t = h.camelCase(t), t = t in r ? [t] : t.split(" ")), i = t.length;
                        while (i--) delete r[t[i]];
                        if (n ? !R(r) : !h.isEmptyObject(r)) return
                    }(n || (delete o[u].data, R(o[u]))) && (s ? h.cleanData([e], !0) : l.deleteExpando || o != o.window ? delete o[u] : o[u] = null)
                }
            }
        }

        function et() {
            return !0
        }

        function tt() {
            return !1
        }

        function nt() {
            try {
                return T.activeElement
            } catch (e) {}
        }

        function rt(e) {
            var t = it.split("|"),
                n = e.createDocumentFragment();
            if (n.createElement)
                while (t.length) n.createElement(t.pop());
            return n
        }

        function wt(e, t) {
            var n, r, i = 0,
                s = typeof e.getElementsByTagName !== B ? e.getElementsByTagName(t || "*") : typeof e.querySelectorAll !== B ? e.querySelectorAll(t || "*") : void 0;
            if (!s)
                for (s = [], n = e.childNodes || e; null != (r = n[i]); i++) !t || h.nodeName(r, t) ? s.push(r) : h.merge(s, wt(r, t));
            return void 0 === t || t && h.nodeName(e, t) ? h.merge([e], s) : s
        }

        function Et(e) {
            J.test(e.type) && (e.defaultChecked = e.checked)
        }

        function St(e, t) {
            return h.nodeName(e, "table") && h.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e
        }

        function xt(e) {
            return e.type = (null !== h.find.attr(e, "type")) + "/" + e.type, e
        }

        function Tt(e) {
            var t = vt.exec(e.type);
            return t ? e.type = t[1] : e.removeAttribute("type"), e
        }

        function Nt(e, t) {
            for (var n, r = 0; null != (n = e[r]); r++) h._data(n, "globalEval", !t || h._data(t[r], "globalEval"))
        }

        function Ct(e, t) {
            if (1 === t.nodeType && h.hasData(e)) {
                var n, r, i, s = h._data(e),
                    o = h._data(t, s),
                    u = s.events;
                if (u) {
                    delete o.handle, o.events = {};
                    for (n in u)
                        for (r = 0, i = u[n].length; i > r; r++) h.event.add(t, n, u[n][r])
                }
                o.data && (o.data = h.extend({}, o.data))
            }
        }

        function kt(e, t) {
            var n, r, i;
            if (1 === t.nodeType) {
                if (n = t.nodeName.toLowerCase(), !l.noCloneEvent && t[h.expando]) {
                    i = h._data(t);
                    for (r in i.events) h.removeEvent(t, r, i.handle);
                    t.removeAttribute(h.expando)
                }
                "script" === n && t.text !== e.text ? (xt(t).text = e.text, Tt(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), l.html5Clone && e.innerHTML && !h.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && J.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue)
            }
        }

        function Ot(t, n) {
            var r, i = h(n.createElement(t)).appendTo(n.body),
                s = e.getDefaultComputedStyle && (r = e.getDefaultComputedStyle(i[0])) ? r.display : h.css(i[0], "display");
            return i.detach(), s
        }

        function Mt(e) {
            var t = T,
                n = At[e];
            return n || (n = Ot(e, t), "none" !== n && n || (Lt = (Lt || h("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement), t = (Lt[0].contentWindow || Lt[0].contentDocument).document, t.write(), t.close(), n = Ot(e, t), Lt.detach()), At[e] = n), n
        }

        function jt(e, t) {
            return {
                get: function () {
                    var n = e();
                    if (null != n) return n ? void delete this.get : (this.get = t).apply(this, arguments)
                }
            }
        }

        function Vt(e, t) {
            if (t in e) return t;
            var n = t.charAt(0).toUpperCase() + t.slice(1),
                r = t,
                i = Xt.length;
            while (i--)
                if (t = Xt[i] + n, t in e) return t;
            return r
        }

        function $t(e, t) {
            for (var n, r, i, s = [], o = 0, u = e.length; u > o; o++) r = e[o], r.style && (s[o] = h._data(r, "olddisplay"), n = r.style.display, t ? (s[o] || "none" !== n || (r.style.display = ""), "" === r.style.display && V(r) && (s[o] = h._data(r, "olddisplay", Mt(r.nodeName)))) : (i = V(r), (n && "none" !== n || !i) && h._data(r, "olddisplay", i ? n : h.css(r, "display"))));
            for (o = 0; u > o; o++) r = e[o], r.style && (t && "none" !== r.style.display && "" !== r.style.display || (r.style.display = t ? s[o] || "" : "none"));
            return e
        }

        function Jt(e, t, n) {
            var r = Rt.exec(t);
            return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t
        }

        function Kt(e, t, n, r, i) {
            for (var s = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, o = 0; 4 > s; s += 2) "margin" === n && (o += h.css(e, n + X[s], !0, i)), r ? ("content" === n && (o -= h.css(e, "padding" + X[s], !0, i)), "margin" !== n && (o -= h.css(e, "border" + X[s] + "Width", !0, i))) : (o += h.css(e, "padding" + X[s], !0, i), "padding" !== n && (o += h.css(e, "border" + X[s] + "Width", !0, i)));
            return o
        }

        function Qt(e, t, n) {
            var r = !0,
                i = "width" === t ? e.offsetWidth : e.offsetHeight,
                s = Pt(e),
                o = l.boxSizing && "border-box" === h.css(e, "boxSizing", !1, s);
            if (0 >= i || null == i) {
                if (i = Ht(e, t, s), (0 > i || null == i) && (i = e.style[t]), Dt.test(i)) return i;
                r = o && (l.boxSizingReliable() || i === e.style[t]), i = parseFloat(i) || 0
            }
            return i + Kt(e, t, n || (o ? "border" : "content"), r, s) + "px"
        }

        function Gt(e, t, n, r, i) {
            return new Gt.prototype.init(e, t, n, r, i)
        }

        function on() {
            return setTimeout(function () {
                Yt = void 0
            }), Yt = h.now()
        }

        function un(e, t) {
            var n, r = {
                    height: e
                },
                i = 0;
            for (t = t ? 1 : 0; 4 > i; i += 2 - t) n = X[i], r["margin" + n] = r["padding" + n] = e;
            return t && (r.opacity = r.width = e), r
        }

        function an(e, t, n) {
            for (var r, i = (sn[t] || []).concat(sn["*"]), s = 0, o = i.length; o > s; s++)
                if (r = i[s].call(n, t, e)) return r
        }

        function fn(e, t, n) {
            var r, i, s, o, u, a, f, c, p = this,
                d = {},
                v = e.style,
                m = e.nodeType && V(e),
                g = h._data(e, "fxshow");
            n.queue || (u = h._queueHooks(e, "fx"), null == u.unqueued && (u.unqueued = 0, a = u.empty.fire, u.empty.fire = function () {
                u.unqueued || a()
            }), u.unqueued++, p.always(function () {
                p.always(function () {
                    u.unqueued--, h.queue(e, "fx").length || u.empty.fire()
                })
            })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [v.overflow, v.overflowX, v.overflowY], f = h.css(e, "display"), c = "none" === f ? h._data(e, "olddisplay") || Mt(e.nodeName) : f, "inline" === c && "none" === h.css(e, "float") && (l.inlineBlockNeedsLayout && "inline" !== Mt(e.nodeName) ? v.zoom = 1 : v.display = "inline-block")), n.overflow && (v.overflow = "hidden", l.shrinkWrapBlocks() || p.always(function () {
                v.overflow = n.overflow[0], v.overflowX = n.overflow[1], v.overflowY = n.overflow[2]
            }));
            for (r in t)
                if (i = t[r], en.exec(i)) {
                    if (delete t[r], s = s || "toggle" === i, i === (m ? "hide" : "show")) {
                        if ("show" !== i || !g || void 0 === g[r]) continue;
                        m = !0
                    }
                    d[r] = g && g[r] || h.style(e, r)
                } else f = void 0;
            if (h.isEmptyObject(d)) "inline" === ("none" === f ? Mt(e.nodeName) : f) && (v.display = f);
            else {
                g ? "hidden" in g && (m = g.hidden) : g = h._data(e, "fxshow", {}), s && (g.hidden = !m), m ? h(e).show() : p.done(function () {
                    h(e).hide()
                }), p.done(function () {
                    var t;
                    h._removeData(e, "fxshow");
                    for (t in d) h.style(e, t, d[t])
                });
                for (r in d) o = an(m ? g[r] : 0, r, p), r in g || (g[r] = o.start, m && (o.end = o.start, o.start = "width" === r || "height" === r ? 1 : 0))
            }
        }

        function ln(e, t) {
            var n, r, i, s, o;
            for (n in e)
                if (r = h.camelCase(n), i = t[r], s = e[n], h.isArray(s) && (i = s[1], s = e[n] = s[0]), n !== r && (e[r] = s, delete e[n]), o = h.cssHooks[r], o && "expand" in o) {
                    s = o.expand(s), delete e[r];
                    for (n in s) n in e || (e[n] = s[n], t[n] = i)
                } else t[r] = i
        }

        function cn(e, t, n) {
            var r, i, s = 0,
                o = rn.length,
                u = h.Deferred().always(function () {
                    delete a.elem
                }),
                a = function () {
                    if (i) return !1;
                    for (var t = Yt || on(), n = Math.max(0, f.startTime + f.duration - t), r = n / f.duration || 0, s = 1 - r, o = 0, a = f.tweens.length; a > o; o++) f.tweens[o].run(s);
                    return u.notifyWith(e, [f, s, n]), 1 > s && a ? n : (u.resolveWith(e, [f]), !1)
                },
                f = u.promise({
                    elem: e,
                    props: h.extend({}, t),
                    opts: h.extend(!0, {
                        specialEasing: {}
                    }, n),
                    originalProperties: t,
                    originalOptions: n,
                    startTime: Yt || on(),
                    duration: n.duration,
                    tweens: [],
                    createTween: function (t, n) {
                        var r = h.Tween(e, f.opts, t, n, f.opts.specialEasing[t] || f.opts.easing);
                        return f.tweens.push(r), r
                    },
                    stop: function (t) {
                        var n = 0,
                            r = t ? f.tweens.length : 0;
                        if (i) return this;
                        for (i = !0; r > n; n++) f.tweens[n].run(1);
                        return t ? u.resolveWith(e, [f, t]) : u.rejectWith(e, [f, t]), this
                    }
                }),
                l = f.props;
            for (ln(l, f.opts.specialEasing); o > s; s++)
                if (r = rn[s].call(f, e, l, f.opts)) return r;
            return h.map(l, an, f), h.isFunction(f.opts.start) && f.opts.start.call(e, f), h.fx.timer(h.extend(a, {
                elem: e,
                anim: f,
                queue: f.opts.queue
            })), f.progress(f.opts.progress).done(f.opts.done, f.opts.complete).fail(f.opts.fail).always(f.opts.always)
        }

        function Fn(e) {
            return function (t, n) {
                "string" != typeof t && (n = t, t = "*");
                var r, i = 0,
                    s = t.toLowerCase().match(O) || [];
                if (h.isFunction(n))
                    while (r = s[i++]) "+" === r.charAt(0) ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
            }
        }

        function In(e, t, n, r) {
            function o(u) {
                var a;
                return i[u] = !0, h.each(e[u] || [], function (e, u) {
                    var f = u(t, n, r);
                    return "string" != typeof f || s || i[f] ? s ? !(a = f) : void 0 : (t.dataTypes.unshift(f), o(f), !1)
                }), a
            }
            var i = {},
                s = e === Hn;
            return o(t.dataTypes[0]) || !i["*"] && o("*")
        }

        function qn(e, t) {
            var n, r, i = h.ajaxSettings.flatOptions || {};
            for (r in t) void 0 !== t[r] && ((i[r] ? e : n || (n = {}))[r] = t[r]);
            return n && h.extend(!0, e, n), e
        }

        function Rn(e, t, n) {
            var r, i, s, o, u = e.contents,
                a = e.dataTypes;
            while ("*" === a[0]) a.shift(), void 0 === i && (i = e.mimeType || t.getResponseHeader("Content-Type"));
            if (i)
                for (o in u)
                    if (u[o] && u[o].test(i)) {
                        a.unshift(o);
                        break
                    } if (a[0] in n) s = a[0];
            else {
                for (o in n) {
                    if (!a[0] || e.converters[o + " " + a[0]]) {
                        s = o;
                        break
                    }
                    r || (r = o)
                }
                s = s || r
            }
            return s ? (s !== a[0] && a.unshift(s), n[s]) : void 0
        }

        function Un(e, t, n, r) {
            var i, s, o, u, a, f = {},
                l = e.dataTypes.slice();
            if (l[1])
                for (o in e.converters) f[o.toLowerCase()] = e.converters[o];
            s = l.shift();
            while (s)
                if (e.responseFields[s] && (n[e.responseFields[s]] = t), !a && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), a = s, s = l.shift())
                    if ("*" === s) s = a;
                    else if ("*" !== a && a !== s) {
                if (o = f[a + " " + s] || f["* " + s], !o)
                    for (i in f)
                        if (u = i.split(" "), u[1] === s && (o = f[a + " " + u[0]] || f["* " + u[0]])) {
                            o === !0 ? o = f[i] : f[i] !== !0 && (s = u[0], l.unshift(u[1]));
                            break
                        } if (o !== !0)
                    if (o && e["throws"]) t = o(t);
                    else try {
                        t = o(t)
                    } catch (c) {
                        return {
                            state: "parsererror",
                            error: o ? c : "No conversion from " + a + " to " + s
                        }
                    }
            }
            return {
                state: "success",
                data: t
            }
        }

        function Jn(e, t, n, r) {
            var i;
            if (h.isArray(t)) h.each(t, function (t, i) {
                n || Wn.test(e) ? r(e, i) : Jn(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r)
            });
            else if (n || "object" !== h.type(t)) r(e, t);
            else
                for (i in t) Jn(e + "[" + i + "]", t[i], n, r)
        }

        function Yn() {
            try {
                return new e.XMLHttpRequest
            } catch (t) {}
        }

        function Zn() {
            try {
                return new e.ActiveXObject("Microsoft.XMLHTTP")
            } catch (t) {}
        }

        function ir(e) {
            return h.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1
        }
        var n = [],
            r = n.slice,
            i = n.concat,
            s = n.push,
            o = n.indexOf,
            u = {},
            a = u.toString,
            f = u.hasOwnProperty,
            l = {},
            c = "1.11.1",
            h = function (e, t) {
                return new h.fn.init(e, t)
            },
            p = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
            d = /^-ms-/,
            v = /-([\da-z])/gi,
            m = function (e, t) {
                return t.toUpperCase()
            };
        h.fn = h.prototype = {
            jquery: c,
            constructor: h,
            selector: "",
            length: 0,
            toArray: function () {
                return r.call(this)
            },
            get: function (e) {
                return null != e ? 0 > e ? this[e + this.length] : this[e] : r.call(this)
            },
            pushStack: function (e) {
                var t = h.merge(this.constructor(), e);
                return t.prevObject = this, t.context = this.context, t
            },
            each: function (e, t) {
                return h.each(this, e, t)
            },
            map: function (e) {
                return this.pushStack(h.map(this, function (t, n) {
                    return e.call(t, n, t)
                }))
            },
            slice: function () {
                return this.pushStack(r.apply(this, arguments))
            },
            first: function () {
                return this.eq(0)
            },
            last: function () {
                return this.eq(-1)
            },
            eq: function (e) {
                var t = this.length,
                    n = +e + (0 > e ? t : 0);
                return this.pushStack(n >= 0 && t > n ? [this[n]] : [])
            },
            end: function () {
                return this.prevObject || this.constructor(null)
            },
            push: s,
            sort: n.sort,
            splice: n.splice
        }, h.extend = h.fn.extend = function () {
            var e, t, n, r, i, s, o = arguments[0] || {},
                u = 1,
                a = arguments.length,
                f = !1;
            for ("boolean" == typeof o && (f = o, o = arguments[u] || {}, u++), "object" == typeof o || h.isFunction(o) || (o = {}), u === a && (o = this, u--); a > u; u++)
                if (null != (i = arguments[u]))
                    for (r in i) e = o[r], n = i[r], o !== n && (f && n && (h.isPlainObject(n) || (t = h.isArray(n))) ? (t ? (t = !1, s = e && h.isArray(e) ? e : []) : s = e && h.isPlainObject(e) ? e : {}, o[r] = h.extend(f, s, n)) : void 0 !== n && (o[r] = n));
            return o
        }, h.extend({
            expando: "jQuery" + (c + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function (e) {
                throw new Error(e)
            },
            noop: function () {},
            isFunction: function (e) {
                return "function" === h.type(e)
            },
            isArray: Array.isArray || function (e) {
                return "array" === h.type(e)
            },
            isWindow: function (e) {
                return null != e && e == e.window
            },
            isNumeric: function (e) {
                return !h.isArray(e) && e - parseFloat(e) >= 0
            },
            isEmptyObject: function (e) {
                var t;
                for (t in e) return !1;
                return !0
            },
            isPlainObject: function (e) {
                var t;
                if (!e || "object" !== h.type(e) || e.nodeType || h.isWindow(e)) return !1;
                try {
                    if (e.constructor && !f.call(e, "constructor") && !f.call(e.constructor.prototype, "isPrototypeOf")) return !1
                } catch (n) {
                    return !1
                }
                if (l.ownLast)
                    for (t in e) return f.call(e, t);
                for (t in e);
                return void 0 === t || f.call(e, t)
            },
            type: function (e) {
                return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? u[a.call(e)] || "object" : typeof e
            },
            globalEval: function (t) {
                t && h.trim(t) && (e.execScript || function (t) {
                    e.eval.call(e, t)
                })(t)
            },
            camelCase: function (e) {
                return e.replace(d, "ms-").replace(v, m)
            },
            nodeName: function (e, t) {
                return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
            },
            each: function (e, t, n) {
                var r, i = 0,
                    s = e.length,
                    o = g(e);
                if (n) {
                    if (o) {
                        for (; s > i; i++)
                            if (r = t.apply(e[i], n), r === !1) break
                    } else
                        for (i in e)
                            if (r = t.apply(e[i], n), r === !1) break
                } else if (o) {
                    for (; s > i; i++)
                        if (r = t.call(e[i], i, e[i]), r === !1) break
                } else
                    for (i in e)
                        if (r = t.call(e[i], i, e[i]), r === !1) break;
                return e
            },
            trim: function (e) {
                return null == e ? "" : (e + "").replace(p, "")
            },
            makeArray: function (e, t) {
                var n = t || [];
                return null != e && (g(Object(e)) ? h.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)), n
            },
            inArray: function (e, t, n) {
                var r;
                if (t) {
                    if (o) return o.call(t, e, n);
                    for (r = t.length, n = n ? 0 > n ? Math.max(0, r + n) : n : 0; r > n; n++)
                        if (n in t && t[n] === e) return n
                }
                return -1
            },
            merge: function (e, t) {
                var n = +t.length,
                    r = 0,
                    i = e.length;
                while (n > r) e[i++] = t[r++];
                if (n !== n)
                    while (void 0 !== t[r]) e[i++] = t[r++];
                return e.length = i, e
            },
            grep: function (e, t, n) {
                for (var r, i = [], s = 0, o = e.length, u = !n; o > s; s++) r = !t(e[s], s), r !== u && i.push(e[s]);
                return i
            },
            map: function (e, t, n) {
                var r, s = 0,
                    o = e.length,
                    u = g(e),
                    a = [];
                if (u)
                    for (; o > s; s++) r = t(e[s], s, n), null != r && a.push(r);
                else
                    for (s in e) r = t(e[s], s, n), null != r && a.push(r);
                return i.apply([], a)
            },
            guid: 1,
            proxy: function (e, t) {
                var n, i, s;
                return "string" == typeof t && (s = e[t], t = e, e = s), h.isFunction(e) ? (n = r.call(arguments, 2), i = function () {
                    return e.apply(t || this, n.concat(r.call(arguments)))
                }, i.guid = e.guid = e.guid || h.guid++, i) : void 0
            },
            now: function () {
                return +(new Date)
            },
            support: l
        }), h.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) {
            u["[object " + t + "]"] = t.toLowerCase()
        });
        var y = function (e) {
            function st(e, t, r, i) {
                var s, u, f, l, c, d, g, y, S, x;
                if ((t ? t.ownerDocument || t : E) !== p && h(t), t = t || p, r = r || [], !e || "string" != typeof e) return r;
                if (1 !== (l = t.nodeType) && 9 !== l) return [];
                if (v && !i) {
                    if (s = Z.exec(e))
                        if (f = s[1]) {
                            if (9 === l) {
                                if (u = t.getElementById(f), !u || !u.parentNode) return r;
                                if (u.id === f) return r.push(u), r
                            } else if (t.ownerDocument && (u = t.ownerDocument.getElementById(f)) && b(t, u) && u.id === f) return r.push(u), r
                        } else {
                            if (s[2]) return P.apply(r, t.getElementsByTagName(e)), r;
                            if ((f = s[3]) && n.getElementsByClassName && t.getElementsByClassName) return P.apply(r, t.getElementsByClassName(f)), r
                        } if (n.qsa && (!m || !m.test(e))) {
                        if (y = g = w, S = t, x = 9 === l && e, 1 === l && "object" !== t.nodeName.toLowerCase()) {
                            d = o(e), (g = t.getAttribute("id")) ? y = g.replace(tt, "\\$&") : t.setAttribute("id", y), y = "[id='" + y + "'] ", c = d.length;
                            while (c--) d[c] = y + mt(d[c]);
                            S = et.test(e) && dt(t.parentNode) || t, x = d.join(",")
                        }
                        if (x) try {
                            return P.apply(r, S.querySelectorAll(x)), r
                        } catch (T) {} finally {
                            g || t.removeAttribute("id")
                        }
                    }
                }
                return a(e.replace(z, "$1"), t, r, i)
            }

            function ot() {
                function t(n, i) {
                    return e.push(n + " ") > r.cacheLength && delete t[e.shift()], t[n + " "] = i
                }
                var e = [];
                return t
            }

            function ut(e) {
                return e[w] = !0, e
            }

            function at(e) {
                var t = p.createElement("div");
                try {
                    return !!e(t)
                } catch (n) {
                    return !1
                } finally {
                    t.parentNode && t.parentNode.removeChild(t), t = null
                }
            }

            function ft(e, t) {
                var n = e.split("|"),
                    i = e.length;
                while (i--) r.attrHandle[n[i]] = t
            }

            function lt(e, t) {
                var n = t && e,
                    r = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || A) - (~e.sourceIndex || A);
                if (r) return r;
                if (n)
                    while (n = n.nextSibling)
                        if (n === t) return -1;
                return e ? 1 : -1
            }

            function ct(e) {
                return function (t) {
                    var n = t.nodeName.toLowerCase();
                    return "input" === n && t.type === e
                }
            }

            function ht(e) {
                return function (t) {
                    var n = t.nodeName.toLowerCase();
                    return ("input" === n || "button" === n) && t.type === e
                }
            }

            function pt(e) {
                return ut(function (t) {
                    return t = +t, ut(function (n, r) {
                        var i, s = e([], n.length, t),
                            o = s.length;
                        while (o--) n[i = s[o]] && (n[i] = !(r[i] = n[i]))
                    })
                })
            }

            function dt(e) {
                return e && typeof e.getElementsByTagName !== L && e
            }

            function vt() {}

            function mt(e) {
                for (var t = 0, n = e.length, r = ""; n > t; t++) r += e[t].value;
                return r
            }

            function gt(e, t, n) {
                var r = t.dir,
                    i = n && "parentNode" === r,
                    s = x++;
                return t.first ? function (t, n, s) {
                    while (t = t[r])
                        if (1 === t.nodeType || i) return e(t, n, s)
                } : function (t, n, o) {
                    var u, a, f = [S, s];
                    if (o) {
                        while (t = t[r])
                            if ((1 === t.nodeType || i) && e(t, n, o)) return !0
                    } else
                        while (t = t[r])
                            if (1 === t.nodeType || i) {
                                if (a = t[w] || (t[w] = {}), (u = a[r]) && u[0] === S && u[1] === s) return f[2] = u[2];
                                if (a[r] = f, f[2] = e(t, n, o)) return !0
                            }
                }
            }

            function yt(e) {
                return e.length > 1 ? function (t, n, r) {
                    var i = e.length;
                    while (i--)
                        if (!e[i](t, n, r)) return !1;
                    return !0
                } : e[0]
            }

            function bt(e, t, n) {
                for (var r = 0, i = t.length; i > r; r++) st(e, t[r], n);
                return n
            }

            function wt(e, t, n, r, i) {
                for (var s, o = [], u = 0, a = e.length, f = null != t; a > u; u++)(s = e[u]) && (!n || n(s, r, i)) && (o.push(s), f && t.push(u));
                return o
            }

            function Et(e, t, n, r, i, s) {
                return r && !r[w] && (r = Et(r)), i && !i[w] && (i = Et(i, s)), ut(function (s, o, u, a) {
                    var f, l, c, h = [],
                        p = [],
                        d = o.length,
                        v = s || bt(t || "*", u.nodeType ? [u] : u, []),
                        m = !e || !s && t ? v : wt(v, h, e, u, a),
                        g = n ? i || (s ? e : d || r) ? [] : o : m;
                    if (n && n(m, g, u, a), r) {
                        f = wt(g, p), r(f, [], u, a), l = f.length;
                        while (l--)(c = f[l]) && (g[p[l]] = !(m[p[l]] = c))
                    }
                    if (s) {
                        if (i || e) {
                            if (i) {
                                f = [], l = g.length;
                                while (l--)(c = g[l]) && f.push(m[l] = c);
                                i(null, g = [], f, a)
                            }
                            l = g.length;
                            while (l--)(c = g[l]) && (f = i ? B.call(s, c) : h[l]) > -1 && (s[f] = !(o[f] = c))
                        }
                    } else g = wt(g === o ? g.splice(d, g.length) : g), i ? i(null, o, g, a) : P.apply(o, g)
                })
            }

            function St(e) {
                for (var t, n, i, s = e.length, o = r.relative[e[0].type], u = o || r.relative[" "], a = o ? 1 : 0, l = gt(function (e) {
                        return e === t
                    }, u, !0), c = gt(function (e) {
                        return B.call(t, e) > -1
                    }, u, !0), h = [function (e, n, r) {
                        return !o && (r || n !== f) || ((t = n).nodeType ? l(e, n, r) : c(e, n, r))
                    }]; s > a; a++)
                    if (n = r.relative[e[a].type]) h = [gt(yt(h), n)];
                    else {
                        if (n = r.filter[e[a].type].apply(null, e[a].matches), n[w]) {
                            for (i = ++a; s > i; i++)
                                if (r.relative[e[i].type]) break;
                            return Et(a > 1 && yt(h), a > 1 && mt(e.slice(0, a - 1).concat({
                                value: " " === e[a - 2].type ? "*" : ""
                            })).replace(z, "$1"), n, i > a && St(e.slice(a, i)), s > i && St(e = e.slice(i)), s > i && mt(e))
                        }
                        h.push(n)
                    } return yt(h)
            }

            function xt(e, t) {
                var n = t.length > 0,
                    i = e.length > 0,
                    s = function (s, o, u, a, l) {
                        var c, h, d, v = 0,
                            m = "0",
                            g = s && [],
                            y = [],
                            b = f,
                            w = s || i && r.find.TAG("*", l),
                            E = S += null == b ? 1 : Math.random() || .1,
                            x = w.length;
                        for (l && (f = o !== p && o); m !== x && null != (c = w[m]); m++) {
                            if (i && c) {
                                h = 0;
                                while (d = e[h++])
                                    if (d(c, o, u)) {
                                        a.push(c);
                                        break
                                    } l && (S = E)
                            }
                            n && ((c = !d && c) && v--, s && g.push(c))
                        }
                        if (v += m, n && m !== v) {
                            h = 0;
                            while (d = t[h++]) d(g, y, o, u);
                            if (s) {
                                if (v > 0)
                                    while (m--) g[m] || y[m] || (y[m] = _.call(a));
                                y = wt(y)
                            }
                            P.apply(a, y), l && !s && y.length > 0 && v + t.length > 1 && st.uniqueSort(a)
                        }
                        return l && (S = E, f = b), g
                    };
                return n ? ut(s) : s
            }
            var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w = "sizzle" + -(new Date),
                E = e.document,
                S = 0,
                x = 0,
                T = ot(),
                N = ot(),
                C = ot(),
                k = function (e, t) {
                    return e === t && (c = !0), 0
                },
                L = "undefined",
                A = 1 << 31,
                O = {}.hasOwnProperty,
                M = [],
                _ = M.pop,
                D = M.push,
                P = M.push,
                H = M.slice,
                B = M.indexOf || function (e) {
                    for (var t = 0, n = this.length; n > t; t++)
                        if (this[t] === e) return t;
                    return -1
                },
                j = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                F = "[\\x20\\t\\r\\n\\f]",
                I = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
                q = I.replace("w", "w#"),
                R = "\\[" + F + "*(" + I + ")(?:" + F + "*([*^$|!~]?=)" + F + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + q + "))|)" + F + "*\\]",
                U = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + R + ")*)|.*)\\)|)",
                z = new RegExp("^" + F + "+|((?:^|[^\\\\])(?:\\\\.)*)" + F + "+$", "g"),
                W = new RegExp("^" + F + "*," + F + "*"),
                X = new RegExp("^" + F + "*([>+~]|" + F + ")" + F + "*"),
                V = new RegExp("=" + F + "*([^\\]'\"]*?)" + F + "*\\]", "g"),
                $ = new RegExp(U),
                J = new RegExp("^" + q + "$"),
                K = {
                    ID: new RegExp("^#(" + I + ")"),
                    CLASS: new RegExp("^\\.(" + I + ")"),
                    TAG: new RegExp("^(" + I.replace("w", "w*") + ")"),
                    ATTR: new RegExp("^" + R),
                    PSEUDO: new RegExp("^" + U),
                    CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + F + "*(even|odd|(([+-]|)(\\d*)n|)" + F + "*(?:([+-]|)" + F + "*(\\d+)|))" + F + "*\\)|)", "i"),
                    bool: new RegExp("^(?:" + j + ")$", "i"),
                    needsContext: new RegExp("^" + F + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + F + "*((?:-\\d)?\\d*)" + F + "*\\)|)(?=[^-]|$)", "i")
                },
                Q = /^(?:input|select|textarea|button)$/i,
                G = /^h\d$/i,
                Y = /^[^{]+\{\s*\[native \w/,
                Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                et = /[+~]/,
                tt = /'|\\/g,
                nt = new RegExp("\\\\([\\da-f]{1,6}" + F + "?|(" + F + ")|.)", "ig"),
                rt = function (e, t, n) {
                    var r = "0x" + t - 65536;
                    return r !== r || n ? t : 0 > r ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320)
                };
            try {
                P.apply(M = H.call(E.childNodes), E.childNodes), M[E.childNodes.length].nodeType
            } catch (it) {
                P = {
                    apply: M.length ? function (e, t) {
                        D.apply(e, H.call(t))
                    } : function (e, t) {
                        var n = e.length,
                            r = 0;
                        while (e[n++] = t[r++]);
                        e.length = n - 1
                    }
                }
            }
            n = st.support = {}, s = st.isXML = function (e) {
                var t = e && (e.ownerDocument || e).documentElement;
                return t ? "HTML" !== t.nodeName : !1
            }, h = st.setDocument = function (e) {
                var t, i = e ? e.ownerDocument || e : E,
                    o = i.defaultView;
                return i !== p && 9 === i.nodeType && i.documentElement ? (p = i, d = i.documentElement, v = !s(i), o && o !== o.top && (o.addEventListener ? o.addEventListener("unload", function () {
                    h()
                }, !1) : o.attachEvent && o.attachEvent("onunload", function () {
                    h()
                })), n.attributes = at(function (e) {
                    return e.className = "i", !e.getAttribute("className")
                }), n.getElementsByTagName = at(function (e) {
                    return e.appendChild(i.createComment("")), !e.getElementsByTagName("*").length
                }), n.getElementsByClassName = Y.test(i.getElementsByClassName) && at(function (e) {
                    return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length
                }), n.getById = at(function (e) {
                    return d.appendChild(e).id = w, !i.getElementsByName || !i.getElementsByName(w).length
                }), n.getById ? (r.find.ID = function (e, t) {
                    if (typeof t.getElementById !== L && v) {
                        var n = t.getElementById(e);
                        return n && n.parentNode ? [n] : []
                    }
                }, r.filter.ID = function (e) {
                    var t = e.replace(nt, rt);
                    return function (e) {
                        return e.getAttribute("id") === t
                    }
                }) : (delete r.find.ID, r.filter.ID = function (e) {
                    var t = e.replace(nt, rt);
                    return function (e) {
                        var n = typeof e.getAttributeNode !== L && e.getAttributeNode("id");
                        return n && n.value === t
                    }
                }), r.find.TAG = n.getElementsByTagName ? function (e, t) {
                    return typeof t.getElementsByTagName !== L ? t.getElementsByTagName(e) : void 0
                } : function (e, t) {
                    var n, r = [],
                        i = 0,
                        s = t.getElementsByTagName(e);
                    if ("*" === e) {
                        while (n = s[i++]) 1 === n.nodeType && r.push(n);
                        return r
                    }
                    return s
                }, r.find.CLASS = n.getElementsByClassName && function (e, t) {
                    return typeof t.getElementsByClassName !== L && v ? t.getElementsByClassName(e) : void 0
                }, g = [], m = [], (n.qsa = Y.test(i.querySelectorAll)) && (at(function (e) {
                    e.innerHTML = "<select msallowclip=''><option selected=''></option></select>", e.querySelectorAll("[msallowclip^='']").length && m.push("[*^$]=" + F + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || m.push("\\[" + F + "*(?:value|" + j + ")"), e.querySelectorAll(":checked").length || m.push(":checked")
                }), at(function (e) {
                    var t = i.createElement("input");
                    t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && m.push("name" + F + "*[*^$|!~]?="), e.querySelectorAll(":enabled").length || m.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), m.push(",.*:")
                })), (n.matchesSelector = Y.test(y = d.matches || d.webkitMatchesSelector || d.mozMatchesSelector || d.oMatchesSelector || d.msMatchesSelector)) && at(function (e) {
                    n.disconnectedMatch = y.call(e, "div"), y.call(e, "[s!='']:x"), g.push("!=", U)
                }), m = m.length && new RegExp(m.join("|")), g = g.length && new RegExp(g.join("|")), t = Y.test(d.compareDocumentPosition), b = t || Y.test(d.contains) ? function (e, t) {
                    var n = 9 === e.nodeType ? e.documentElement : e,
                        r = t && t.parentNode;
                    return e === r || !!r && 1 === r.nodeType && !!(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))
                } : function (e, t) {
                    if (t)
                        while (t = t.parentNode)
                            if (t === e) return !0;
                    return !1
                }, k = t ? function (e, t) {
                    if (e === t) return c = !0, 0;
                    var r = !e.compareDocumentPosition - !t.compareDocumentPosition;
                    return r ? r : (r = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1, 1 & r || !n.sortDetached && t.compareDocumentPosition(e) === r ? e === i || e.ownerDocument === E && b(E, e) ? -1 : t === i || t.ownerDocument === E && b(E, t) ? 1 : l ? B.call(l, e) - B.call(l, t) : 0 : 4 & r ? -1 : 1)
                } : function (e, t) {
                    if (e === t) return c = !0, 0;
                    var n, r = 0,
                        s = e.parentNode,
                        o = t.parentNode,
                        u = [e],
                        a = [t];
                    if (!s || !o) return e === i ? -1 : t === i ? 1 : s ? -1 : o ? 1 : l ? B.call(l, e) - B.call(l, t) : 0;
                    if (s === o) return lt(e, t);
                    n = e;
                    while (n = n.parentNode) u.unshift(n);
                    n = t;
                    while (n = n.parentNode) a.unshift(n);
                    while (u[r] === a[r]) r++;
                    return r ? lt(u[r], a[r]) : u[r] === E ? -1 : a[r] === E ? 1 : 0
                }, i) : p
            }, st.matches = function (e, t) {
                return st(e, null, null, t)
            }, st.matchesSelector = function (e, t) {
                if ((e.ownerDocument || e) !== p && h(e), t = t.replace(V, "='$1']"), !(!n.matchesSelector || !v || g && g.test(t) || m && m.test(t))) try {
                    var r = y.call(e, t);
                    if (r || n.disconnectedMatch || e.document && 11 !== e.document.nodeType) return r
                } catch (i) {}
                return st(t, p, null, [e]).length > 0
            }, st.contains = function (e, t) {
                return (e.ownerDocument || e) !== p && h(e), b(e, t)
            }, st.attr = function (e, t) {
                (e.ownerDocument || e) !== p && h(e);
                var i = r.attrHandle[t.toLowerCase()],
                    s = i && O.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !v) : void 0;
                return void 0 !== s ? s : n.attributes || !v ? e.getAttribute(t) : (s = e.getAttributeNode(t)) && s.specified ? s.value : null
            }, st.error = function (e) {
                throw new Error("Syntax error, unrecognized expression: " + e)
            }, st.uniqueSort = function (e) {
                var t, r = [],
                    i = 0,
                    s = 0;
                if (c = !n.detectDuplicates, l = !n.sortStable && e.slice(0), e.sort(k), c) {
                    while (t = e[s++]) t === e[s] && (i = r.push(s));
                    while (i--) e.splice(r[i], 1)
                }
                return l = null, e
            }, i = st.getText = function (e) {
                var t, n = "",
                    r = 0,
                    s = e.nodeType;
                if (s) {
                    if (1 === s || 9 === s || 11 === s) {
                        if ("string" == typeof e.textContent) return e.textContent;
                        for (e = e.firstChild; e; e = e.nextSibling) n += i(e)
                    } else if (3 === s || 4 === s) return e.nodeValue
                } else
                    while (t = e[r++]) n += i(t);
                return n
            }, r = st.selectors = {
                cacheLength: 50,
                createPseudo: ut,
                match: K,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function (e) {
                        return e[1] = e[1].replace(nt, rt), e[3] = (e[3] || e[4] || e[5] || "").replace(nt, rt), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                    },
                    CHILD: function (e) {
                        return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || st.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && st.error(e[0]), e
                    },
                    PSEUDO: function (e) {
                        var t, n = !e[6] && e[2];
                        return K.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && $.test(n) && (t = o(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function (e) {
                        var t = e.replace(nt, rt).toLowerCase();
                        return "*" === e ? function () {
                            return !0
                        } : function (e) {
                            return e.nodeName && e.nodeName.toLowerCase() === t
                        }
                    },
                    CLASS: function (e) {
                        var t = T[e + " "];
                        return t || (t = new RegExp("(^|" + F + ")" + e + "(" + F + "|$)")) && T(e, function (e) {
                            return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== L && e.getAttribute("class") || "")
                        })
                    },
                    ATTR: function (e, t, n) {
                        return function (r) {
                            var i = st.attr(r, e);
                            return null == i ? "!=" === t : t ? (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i + " ").indexOf(n) > -1 : "|=" === t ? i === n || i.slice(0, n.length + 1) === n + "-" : !1) : !0
                        }
                    },
                    CHILD: function (e, t, n, r, i) {
                        var s = "nth" !== e.slice(0, 3),
                            o = "last" !== e.slice(-4),
                            u = "of-type" === t;
                        return 1 === r && 0 === i ? function (e) {
                            return !!e.parentNode
                        } : function (t, n, a) {
                            var f, l, c, h, p, d, v = s !== o ? "nextSibling" : "previousSibling",
                                m = t.parentNode,
                                g = u && t.nodeName.toLowerCase(),
                                y = !a && !u;
                            if (m) {
                                if (s) {
                                    while (v) {
                                        c = t;
                                        while (c = c[v])
                                            if (u ? c.nodeName.toLowerCase() === g : 1 === c.nodeType) return !1;
                                        d = v = "only" === e && !d && "nextSibling"
                                    }
                                    return !0
                                }
                                if (d = [o ? m.firstChild : m.lastChild], o && y) {
                                    l = m[w] || (m[w] = {}), f = l[e] || [], p = f[0] === S && f[1], h = f[0] === S && f[2], c = p && m.childNodes[p];
                                    while (c = ++p && c && c[v] || (h = p = 0) || d.pop())
                                        if (1 === c.nodeType && ++h && c === t) {
                                            l[e] = [S, p, h];
                                            break
                                        }
                                } else if (y && (f = (t[w] || (t[w] = {}))[e]) && f[0] === S) h = f[1];
                                else
                                    while (c = ++p && c && c[v] || (h = p = 0) || d.pop())
                                        if ((u ? c.nodeName.toLowerCase() === g : 1 === c.nodeType) && ++h && (y && ((c[w] || (c[w] = {}))[e] = [S, h]), c === t)) break;
                                return h -= i, h === r || h % r === 0 && h / r >= 0
                            }
                        }
                    },
                    PSEUDO: function (e, t) {
                        var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || st.error("unsupported pseudo: " + e);
                        return i[w] ? i(t) : i.length > 1 ? (n = [e, e, "", t], r.setFilters.hasOwnProperty(e.toLowerCase()) ? ut(function (e, n) {
                            var r, s = i(e, t),
                                o = s.length;
                            while (o--) r = B.call(e, s[o]), e[r] = !(n[r] = s[o])
                        }) : function (e) {
                            return i(e, 0, n)
                        }) : i
                    }
                },
                pseudos: {
                    not: ut(function (e) {
                        var t = [],
                            n = [],
                            r = u(e.replace(z, "$1"));
                        return r[w] ? ut(function (e, t, n, i) {
                            var s, o = r(e, null, i, []),
                                u = e.length;
                            while (u--)(s = o[u]) && (e[u] = !(t[u] = s))
                        }) : function (e, i, s) {
                            return t[0] = e, r(t, null, s, n), !n.pop()
                        }
                    }),
                    has: ut(function (e) {
                        return function (t) {
                            return st(e, t).length > 0
                        }
                    }),
                    contains: ut(function (e) {
                        return function (t) {
                            return (t.textContent || t.innerText || i(t)).indexOf(e) > -1
                        }
                    }),
                    lang: ut(function (e) {
                        return J.test(e || "") || st.error("unsupported lang: " + e), e = e.replace(nt, rt).toLowerCase(),
                            function (t) {
                                var n;
                                do
                                    if (n = v ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-"); while ((t = t.parentNode) && 1 === t.nodeType);
                                return !1
                            }
                    }),
                    target: function (t) {
                        var n = e.location && e.location.hash;
                        return n && n.slice(1) === t.id
                    },
                    root: function (e) {
                        return e === d
                    },
                    focus: function (e) {
                        return e === p.activeElement && (!p.hasFocus || p.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                    },
                    enabled: function (e) {
                        return e.disabled === !1
                    },
                    disabled: function (e) {
                        return e.disabled === !0
                    },
                    checked: function (e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && !!e.checked || "option" === t && !!e.selected
                    },
                    selected: function (e) {
                        return e.parentNode && e.parentNode.selectedIndex, e.selected === !0
                    },
                    empty: function (e) {
                        for (e = e.firstChild; e; e = e.nextSibling)
                            if (e.nodeType < 6) return !1;
                        return !0
                    },
                    parent: function (e) {
                        return !r.pseudos.empty(e)
                    },
                    header: function (e) {
                        return G.test(e.nodeName)
                    },
                    input: function (e) {
                        return Q.test(e.nodeName)
                    },
                    button: function (e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && "button" === e.type || "button" === t
                    },
                    text: function (e) {
                        var t;
                        return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                    },
                    first: pt(function () {
                        return [0]
                    }),
                    last: pt(function (e, t) {
                        return [t - 1]
                    }),
                    eq: pt(function (e, t, n) {
                        return [0 > n ? n + t : n]
                    }),
                    even: pt(function (e, t) {
                        for (var n = 0; t > n; n += 2) e.push(n);
                        return e
                    }),
                    odd: pt(function (e, t) {
                        for (var n = 1; t > n; n += 2) e.push(n);
                        return e
                    }),
                    lt: pt(function (e, t, n) {
                        for (var r = 0 > n ? n + t : n; --r >= 0;) e.push(r);
                        return e
                    }),
                    gt: pt(function (e, t, n) {
                        for (var r = 0 > n ? n + t : n; ++r < t;) e.push(r);
                        return e
                    })
                }
            }, r.pseudos.nth = r.pseudos.eq;
            for (t in {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                }) r.pseudos[t] = ct(t);
            for (t in {
                    submit: !0,
                    reset: !0
                }) r.pseudos[t] = ht(t);
            return vt.prototype = r.filters = r.pseudos, r.setFilters = new vt, o = st.tokenize = function (e, t) {
                var n, i, s, o, u, a, f, l = N[e + " "];
                if (l) return t ? 0 : l.slice(0);
                u = e, a = [], f = r.preFilter;
                while (u) {
                    (!n || (i = W.exec(u))) && (i && (u = u.slice(i[0].length) || u), a.push(s = [])), n = !1, (i = X.exec(u)) && (n = i.shift(), s.push({
                        value: n,
                        type: i[0].replace(z, " ")
                    }), u = u.slice(n.length));
                    for (o in r.filter) !(i = K[o].exec(u)) || f[o] && !(i = f[o](i)) || (n = i.shift(), s.push({
                        value: n,
                        type: o,
                        matches: i
                    }), u = u.slice(n.length));
                    if (!n) break
                }
                return t ? u.length : u ? st.error(e) : N(e, a).slice(0)
            }, u = st.compile = function (e, t) {
                var n, r = [],
                    i = [],
                    s = C[e + " "];
                if (!s) {
                    t || (t = o(e)), n = t.length;
                    while (n--) s = St(t[n]), s[w] ? r.push(s) : i.push(s);
                    s = C(e, xt(i, r)), s.selector = e
                }
                return s
            }, a = st.select = function (e, t, i, s) {
                var a, f, l, c, h, p = "function" == typeof e && e,
                    d = !s && o(e = p.selector || e);
                if (i = i || [], 1 === d.length) {
                    if (f = d[0] = d[0].slice(0), f.length > 2 && "ID" === (l = f[0]).type && n.getById && 9 === t.nodeType && v && r.relative[f[1].type]) {
                        if (t = (r.find.ID(l.matches[0].replace(nt, rt), t) || [])[0], !t) return i;
                        p && (t = t.parentNode), e = e.slice(f.shift().value.length)
                    }
                    a = K.needsContext.test(e) ? 0 : f.length;
                    while (a--) {
                        if (l = f[a], r.relative[c = l.type]) break;
                        if ((h = r.find[c]) && (s = h(l.matches[0].replace(nt, rt), et.test(f[0].type) && dt(t.parentNode) || t))) {
                            if (f.splice(a, 1), e = s.length && mt(f), !e) return P.apply(i, s), i;
                            break
                        }
                    }
                }
                return (p || u(e, d))(s, t, !v, i, et.test(e) && dt(t.parentNode) || t), i
            }, n.sortStable = w.split("").sort(k).join("") === w, n.detectDuplicates = !!c, h(), n.sortDetached = at(function (e) {
                return 1 & e.compareDocumentPosition(p.createElement("div"))
            }), at(function (e) {
                return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
            }) || ft("type|href|height|width", function (e, t, n) {
                return n ? void 0 : e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
            }), n.attributes && at(function (e) {
                return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
            }) || ft("value", function (e, t, n) {
                return n || "input" !== e.nodeName.toLowerCase() ? void 0 : e.defaultValue
            }), at(function (e) {
                return null == e.getAttribute("disabled")
            }) || ft(j, function (e, t, n) {
                var r;
                return n ? void 0 : e[t] === !0 ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null
            }), st
        }(e);
        h.find = y, h.expr = y.selectors, h.expr[":"] = h.expr.pseudos, h.unique = y.uniqueSort, h.text = y.getText, h.isXMLDoc = y.isXML, h.contains = y.contains;
        var b = h.expr.match.needsContext,
            w = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
            E = /^.[^:#\[\.,]*$/;
        h.filter = function (e, t, n) {
            var r = t[0];
            return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? h.find.matchesSelector(r, e) ? [r] : [] : h.find.matches(e, h.grep(t, function (e) {
                return 1 === e.nodeType
            }))
        }, h.fn.extend({
            find: function (e) {
                var t, n = [],
                    r = this,
                    i = r.length;
                if ("string" != typeof e) return this.pushStack(h(e).filter(function () {
                    for (t = 0; i > t; t++)
                        if (h.contains(r[t], this)) return !0
                }));
                for (t = 0; i > t; t++) h.find(e, r[t], n);
                return n = this.pushStack(i > 1 ? h.unique(n) : n), n.selector = this.selector ? this.selector + " " + e : e, n
            },
            filter: function (e) {
                return this.pushStack(S(this, e || [], !1))
            },
            not: function (e) {
                return this.pushStack(S(this, e || [], !0))
            },
            is: function (e) {
                return !!S(this, "string" == typeof e && b.test(e) ? h(e) : e || [], !1).length
            }
        });
        var x, T = e.document,
            N = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
            C = h.fn.init = function (e, t) {
                var n, r;
                if (!e) return this;
                if ("string" == typeof e) {
                    if (n = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : N.exec(e), !n || !n[1] && t) return !t || t.jquery ? (t || x).find(e) : this.constructor(t).find(e);
                    if (n[1]) {
                        if (t = t instanceof h ? t[0] : t, h.merge(this, h.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : T, !0)), w.test(n[1]) && h.isPlainObject(t))
                            for (n in t) h.isFunction(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
                        return this
                    }
                    if (r = T.getElementById(n[2]), r && r.parentNode) {
                        if (r.id !== n[2]) return x.find(e);
                        this.length = 1, this[0] = r
                    }
                    return this.context = T, this.selector = e, this
                }
                return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : h.isFunction(e) ? "undefined" != typeof x.ready ? x.ready(e) : e(h) : (void 0 !== e.selector && (this.selector = e.selector, this.context = e.context), h.makeArray(e, this))
            };
        C.prototype = h.fn, x = h(T);
        var k = /^(?:parents|prev(?:Until|All))/,
            L = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
        h.extend({
            dir: function (e, t, n) {
                var r = [],
                    i = e[t];
                while (i && 9 !== i.nodeType && (void 0 === n || 1 !== i.nodeType || !h(i).is(n))) 1 === i.nodeType && r.push(i), i = i[t];
                return r
            },
            sibling: function (e, t) {
                for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
                return n
            }
        }), h.fn.extend({
            has: function (e) {
                var t, n = h(e, this),
                    r = n.length;
                return this.filter(function () {
                    for (t = 0; r > t; t++)
                        if (h.contains(this, n[t])) return !0
                })
            },
            closest: function (e, t) {
                for (var n, r = 0, i = this.length, s = [], o = b.test(e) || "string" != typeof e ? h(e, t || this.context) : 0; i > r; r++)
                    for (n = this[r]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (o ? o.index(n) > -1 : 1 === n.nodeType && h.find.matchesSelector(n, e))) {
                            s.push(n);
                            break
                        } return this.pushStack(s.length > 1 ? h.unique(s) : s)
            },
            index: function (e) {
                return e ? "string" == typeof e ? h.inArray(this[0], h(e)) : h.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function (e, t) {
                return this.pushStack(h.unique(h.merge(this.get(), h(e, t))))
            },
            addBack: function (e) {
                return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
            }
        }), h.each({
            parent: function (e) {
                var t = e.parentNode;
                return t && 11 !== t.nodeType ? t : null
            },
            parents: function (e) {
                return h.dir(e, "parentNode")
            },
            parentsUntil: function (e, t, n) {
                return h.dir(e, "parentNode", n)
            },
            next: function (e) {
                return A(e, "nextSibling")
            },
            prev: function (e) {
                return A(e, "previousSibling")
            },
            nextAll: function (e) {
                return h.dir(e, "nextSibling")
            },
            prevAll: function (e) {
                return h.dir(e, "previousSibling")
            },
            nextUntil: function (e, t, n) {
                return h.dir(e, "nextSibling", n)
            },
            prevUntil: function (e, t, n) {
                return h.dir(e, "previousSibling", n)
            },
            siblings: function (e) {
                return h.sibling((e.parentNode || {}).firstChild, e)
            },
            children: function (e) {
                return h.sibling(e.firstChild)
            },
            contents: function (e) {
                return h.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : h.merge([], e.childNodes)
            }
        }, function (e, t) {
            h.fn[e] = function (n, r) {
                var i = h.map(this, t, n);
                return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = h.filter(r, i)), this.length > 1 && (L[e] || (i = h.unique(i)), k.test(e) && (i = i.reverse())), this.pushStack(i)
            }
        });
        var O = /\S+/g,
            M = {};
        h.Callbacks = function (e) {
            e = "string" == typeof e ? M[e] || _(e) : h.extend({}, e);
            var t, n, r, i, s, o, u = [],
                a = !e.once && [],
                f = function (c) {
                    for (n = e.memory && c, r = !0, s = o || 0, o = 0, i = u.length, t = !0; u && i > s; s++)
                        if (u[s].apply(c[0], c[1]) === !1 && e.stopOnFalse) {
                            n = !1;
                            break
                        } t = !1, u && (a ? a.length && f(a.shift()) : n ? u = [] : l.disable())
                },
                l = {
                    add: function () {
                        if (u) {
                            var r = u.length;
                            ! function s(t) {
                                h.each(t, function (t, n) {
                                    var r = h.type(n);
                                    "function" === r ? e.unique && l.has(n) || u.push(n) : n && n.length && "string" !== r && s(n)
                                })
                            }(arguments), t ? i = u.length : n && (o = r, f(n))
                        }
                        return this
                    },
                    remove: function () {
                        return u && h.each(arguments, function (e, n) {
                            var r;
                            while ((r = h.inArray(n, u, r)) > -1) u.splice(r, 1), t && (i >= r && i--, s >= r && s--)
                        }), this
                    },
                    has: function (e) {
                        return e ? h.inArray(e, u) > -1 : !!u && !!u.length
                    },
                    empty: function () {
                        return u = [], i = 0, this
                    },
                    disable: function () {
                        return u = a = n = void 0, this
                    },
                    disabled: function () {
                        return !u
                    },
                    lock: function () {
                        return a = void 0, n || l.disable(), this
                    },
                    locked: function () {
                        return !a
                    },
                    fireWith: function (e, n) {
                        return !u || r && !a || (n = n || [], n = [e, n.slice ? n.slice() : n], t ? a.push(n) : f(n)), this
                    },
                    fire: function () {
                        return l.fireWith(this, arguments), this
                    },
                    fired: function () {
                        return !!r
                    }
                };
            return l
        }, h.extend({
            Deferred: function (e) {
                var t = [["resolve", "done", h.Callbacks("once memory"), "resolved"], ["reject", "fail", h.Callbacks("once memory"), "rejected"], ["notify", "progress", h.Callbacks("memory")]],
                    n = "pending",
                    r = {
                        state: function () {
                            return n
                        },
                        always: function () {
                            return i.done(arguments).fail(arguments), this
                        },
                        then: function () {
                            var e = arguments;
                            return h.Deferred(function (n) {
                                h.each(t, function (t, s) {
                                    var o = h.isFunction(e[t]) && e[t];
                                    i[s[1]](function () {
                                        var e = o && o.apply(this, arguments);
                                        e && h.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[s[0] + "With"](this === r ? n.promise() : this, o ? [e] : arguments)
                                    })
                                }), e = null
                            }).promise()
                        },
                        promise: function (e) {
                            return null != e ? h.extend(e, r) : r
                        }
                    },
                    i = {};
                return r.pipe = r.then, h.each(t, function (e, s) {
                    var o = s[2],
                        u = s[3];
                    r[s[1]] = o.add, u && o.add(function () {
                        n = u
                    }, t[1 ^ e][2].disable, t[2][2].lock), i[s[0]] = function () {
                        return i[s[0] + "With"](this === i ? r : this, arguments), this
                    }, i[s[0] + "With"] = o.fireWith
                }), r.promise(i), e && e.call(i, i), i
            },
            when: function (e) {
                var t = 0,
                    n = r.call(arguments),
                    i = n.length,
                    s = 1 !== i || e && h.isFunction(e.promise) ? i : 0,
                    o = 1 === s ? e : h.Deferred(),
                    u = function (e, t, n) {
                        return function (i) {
                            t[e] = this, n[e] = arguments.length > 1 ? r.call(arguments) : i, n === a ? o.notifyWith(t, n) : --s || o.resolveWith(t, n)
                        }
                    },
                    a, f, l;
                if (i > 1)
                    for (a = new Array(i), f = new Array(i), l = new Array(i); i > t; t++) n[t] && h.isFunction(n[t].promise) ? n[t].promise().done(u(t, l, n)).fail(o.reject).progress(u(t, f, a)) : --s;
                return s || o.resolveWith(l, n), o.promise()
            }
        });
        var D;
        h.fn.ready = function (e) {
            return h.ready.promise().done(e), this
        }, h.extend({
            isReady: !1,
            readyWait: 1,
            holdReady: function (e) {
                e ? h.readyWait++ : h.ready(!0)
            },
            ready: function (e) {
                if (e === !0 ? !--h.readyWait : !h.isReady) {
                    if (!T.body) return setTimeout(h.ready);
                    h.isReady = !0, e !== !0 && --h.readyWait > 0 || (D.resolveWith(T, [h]), h.fn.triggerHandler && (h(T).triggerHandler("ready"), h(T).off("ready")))
                }
            }
        }), h.ready.promise = function (t) {
            if (!D)
                if (D = h.Deferred(), "complete" === T.readyState) setTimeout(h.ready);
                else if (T.addEventListener) T.addEventListener("DOMContentLoaded", H, !1), e.addEventListener("load", H, !1);
            else {
                T.attachEvent("onreadystatechange", H), e.attachEvent("onload", H);
                var n = !1;
                try {
                    n = null == e.frameElement && T.documentElement
                } catch (r) {}
                n && n.doScroll && ! function i() {
                    if (!h.isReady) {
                        try {
                            n.doScroll("left")
                        } catch (e) {
                            return setTimeout(i, 50)
                        }
                        P(), h.ready()
                    }
                }()
            }
            return D.promise(t)
        };
        var B = "undefined",
            j;
        for (j in h(l)) break;
        l.ownLast = "0" !== j, l.inlineBlockNeedsLayout = !1, h(function () {
                var e, t, n, r;
                n = T.getElementsByTagName("body")[0], n && n.style && (t = T.createElement("div"), r = T.createElement("div"), r.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(r).appendChild(t), typeof t.style.zoom !== B && (t.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", l.inlineBlockNeedsLayout = e = 3 === t.offsetWidth, e && (n.style.zoom = 1)), n.removeChild(r))
            }),
            function () {
                var e = T.createElement("div");
                if (null == l.deleteExpando) {
                    l.deleteExpando = !0;
                    try {
                        delete e.test
                    } catch (t) {
                        l.deleteExpando = !1
                    }
                }
                e = null
            }(), h.acceptData = function (e) {
                var t = h.noData[(e.nodeName + " ").toLowerCase()],
                    n = +e.nodeType || 1;
                return 1 !== n && 9 !== n ? !1 : !t || t !== !0 && e.getAttribute("classid") === t
            };
        var F = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
            I = /([A-Z])/g;
        h.extend({
            cache: {},
            noData: {
                "applet ": !0,
                "embed ": !0,
                "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
            },
            hasData: function (e) {
                return e = e.nodeType ? h.cache[e[h.expando]] : e[h.expando], !!e && !R(e)
            },
            data: function (e, t, n) {
                return U(e, t, n)
            },
            removeData: function (e, t) {
                return z(e, t)
            },
            _data: function (e, t, n) {
                return U(e, t, n, !0)
            },
            _removeData: function (e, t) {
                return z(e, t, !0)
            }
        }), h.fn.extend({
            data: function (e, t) {
                var n, r, i, s = this[0],
                    o = s && s.attributes;
                if (void 0 === e) {
                    if (this.length && (i = h.data(s), 1 === s.nodeType && !h._data(s, "parsedAttrs"))) {
                        n = o.length;
                        while (n--) o[n] && (r = o[n].name, 0 === r.indexOf("data-") && (r = h.camelCase(r.slice(5)), q(s, r, i[r])));
                        h._data(s, "parsedAttrs", !0)
                    }
                    return i
                }
                return "object" == typeof e ? this.each(function () {
                    h.data(this, e)
                }) : arguments.length > 1 ? this.each(function () {
                    h.data(this, e, t)
                }) : s ? q(s, e, h.data(s, e)) : void 0
            },
            removeData: function (e) {
                return this.each(function () {
                    h.removeData(this, e)
                })
            }
        }), h.extend({
            queue: function (e, t, n) {
                var r;
                return e ? (t = (t || "fx") + "queue", r = h._data(e, t), n && (!r || h.isArray(n) ? r = h._data(e, t, h.makeArray(n)) : r.push(n)), r || []) : void 0
            },
            dequeue: function (e, t) {
                t = t || "fx";
                var n = h.queue(e, t),
                    r = n.length,
                    i = n.shift(),
                    s = h._queueHooks(e, t),
                    o = function () {
                        h.dequeue(e, t)
                    };
                "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete s.stop, i.call(e, o, s)), !r && s && s.empty.fire()
            },
            _queueHooks: function (e, t) {
                var n = t + "queueHooks";
                return h._data(e, n) || h._data(e, n, {
                    empty: h.Callbacks("once memory").add(function () {
                        h._removeData(e, t + "queue"), h._removeData(e, n)
                    })
                })
            }
        }), h.fn.extend({
            queue: function (e, t) {
                var n = 2;
                return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? h.queue(this[0], e) : void 0 === t ? this : this.each(function () {
                    var n = h.queue(this, e, t);
                    h._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && h.dequeue(this, e)
                })
            },
            dequeue: function (e) {
                return this.each(function () {
                    h.dequeue(this, e)
                })
            },
            clearQueue: function (e) {
                return this.queue(e || "fx", [])
            },
            promise: function (e, t) {
                var n, r = 1,
                    i = h.Deferred(),
                    s = this,
                    o = this.length,
                    u = function () {
                        --r || i.resolveWith(s, [s])
                    };
                "string" != typeof e && (t = e, e = void 0), e = e || "fx";
                while (o--) n = h._data(s[o], e + "queueHooks"), n && n.empty && (r++, n.empty.add(u));
                return u(), i.promise(t)
            }
        });
        var W = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
            X = ["Top", "Right", "Bottom", "Left"],
            V = function (e, t) {
                return e = t || e, "none" === h.css(e, "display") || !h.contains(e.ownerDocument, e)
            },
            $ = h.access = function (e, t, n, r, i, s, o) {
                var u = 0,
                    a = e.length,
                    f = null == n;
                if ("object" === h.type(n)) {
                    i = !0;
                    for (u in n) h.access(e, t, u, n[u], !0, s, o)
                } else if (void 0 !== r && (i = !0, h.isFunction(r) || (o = !0), f && (o ? (t.call(e, r), t = null) : (f = t, t = function (e, t, n) {
                        return f.call(h(e), n)
                    })), t))
                    for (; a > u; u++) t(e[u], n, o ? r : r.call(e[u], u, t(e[u], n)));
                return i ? e : f ? t.call(e) : a ? t(e[0], n) : s
            },
            J = /^(?:checkbox|radio)$/i;
        ! function () {
            var e = T.createElement("input"),
                t = T.createElement("div"),
                n = T.createDocumentFragment();
            if (t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", l.leadingWhitespace = 3 === t.firstChild.nodeType, l.tbody = !t.getElementsByTagName("tbody").length, l.htmlSerialize = !!t.getElementsByTagName("link").length, l.html5Clone = "<:nav></:nav>" !== T.createElement("nav").cloneNode(!0).outerHTML, e.type = "checkbox", e.checked = !0, n.appendChild(e), l.appendChecked = e.checked, t.innerHTML = "<textarea>x</textarea>", l.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue, n.appendChild(t), t.innerHTML = "<input type='radio' checked='checked' name='t'/>", l.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked, l.noCloneEvent = !0, t.attachEvent && (t.attachEvent("onclick", function () {
                    l.noCloneEvent = !1
                }), t.cloneNode(!0).click()), null == l.deleteExpando) {
                l.deleteExpando = !0;
                try {
                    delete t.test
                } catch (r) {
                    l.deleteExpando = !1
                }
            }
        }(),
        function () {
            var t, n, r = T.createElement("div");
            for (t in {
                    submit: !0,
                    change: !0,
                    focusin: !0
                }) n = "on" + t, (l[t + "Bubbles"] = n in e) || (r.setAttribute(n, "t"), l[t + "Bubbles"] = r.attributes[n].expando === !1);
            r = null
        }();
        var K = /^(?:input|select|textarea)$/i,
            Q = /^key/,
            G = /^(?:mouse|pointer|contextmenu)|click/,
            Y = /^(?:focusinfocus|focusoutblur)$/,
            Z = /^([^.]*)(?:\.(.+)|)$/;
        h.event = {
            global: {},
            add: function (e, t, n, r, i) {
                var s, o, u, a, f, l, c, p, d, v, m, g = h._data(e);
                if (g) {
                    n.handler && (a = n, n = a.handler, i = a.selector), n.guid || (n.guid = h.guid++), (o = g.events) || (o = g.events = {}), (l = g.handle) || (l = g.handle = function (e) {
                        return typeof h === B || e && h.event.triggered === e.type ? void 0 : h.event.dispatch.apply(l.elem, arguments)
                    }, l.elem = e), t = (t || "").match(O) || [""], u = t.length;
                    while (u--) s = Z.exec(t[u]) || [], d = m = s[1], v = (s[2] || "").split(".").sort(), d && (f = h.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = h.event.special[d] || {}, c = h.extend({
                        type: d,
                        origType: m,
                        data: r,
                        handler: n,
                        guid: n.guid,
                        selector: i,
                        needsContext: i && h.expr.match.needsContext.test(i),
                        namespace: v.join(".")
                    }, a), (p = o[d]) || (p = o[d] = [], p.delegateCount = 0, f.setup && f.setup.call(e, r, v, l) !== !1 || (e.addEventListener ? e.addEventListener(d, l, !1) : e.attachEvent && e.attachEvent("on" + d, l))), f.add && (f.add.call(e, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), h.event.global[d] = !0);
                    e = null
                }
            },
            remove: function (e, t, n, r, i) {
                var s, o, u, a, f, l, c, p, d, v, m, g = h.hasData(e) && h._data(e);
                if (g && (l = g.events)) {
                    t = (t || "").match(O) || [""], f = t.length;
                    while (f--)
                        if (u = Z.exec(t[f]) || [], d = m = u[1], v = (u[2] || "").split(".").sort(), d) {
                            c = h.event.special[d] || {}, d = (r ? c.delegateType : c.bindType) || d, p = l[d] || [], u = u[2] && new RegExp("(^|\\.)" + v.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = s = p.length;
                            while (s--) o = p[s], !i && m !== o.origType || n && n.guid !== o.guid || u && !u.test(o.namespace) || r && r !== o.selector && ("**" !== r || !o.selector) || (p.splice(s, 1), o.selector && p.delegateCount--, c.remove && c.remove.call(e, o));
                            a && !p.length && (c.teardown && c.teardown.call(e, v, g.handle) !== !1 || h.removeEvent(e, d, g.handle), delete l[d])
                        } else
                            for (d in l) h.event.remove(e, d + t[f], n, r, !0);
                    h.isEmptyObject(l) && (delete g.handle, h._removeData(e, "events"))
                }
            },
            trigger: function (t, n, r, i) {
                var s, o, u, a, l, c, p, d = [r || T],
                    v = f.call(t, "type") ? t.type : t,
                    m = f.call(t, "namespace") ? t.namespace.split(".") : [];
                if (u = c = r = r || T, 3 !== r.nodeType && 8 !== r.nodeType && !Y.test(v + h.event.triggered) && (v.indexOf(".") >= 0 && (m = v.split("."), v = m.shift(), m.sort()), o = v.indexOf(":") < 0 && "on" + v, t = t[h.expando] ? t : new h.Event(v, "object" == typeof t && t), t.isTrigger = i ? 2 : 3, t.namespace = m.join("."), t.namespace_re = t.namespace ? new RegExp("(^|\\.)" + m.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = void 0, t.target || (t.target = r), n = null == n ? [t] : h.makeArray(n, [t]), l = h.event.special[v] || {}, i || !l.trigger || l.trigger.apply(r, n) !== !1)) {
                    if (!i && !l.noBubble && !h.isWindow(r)) {
                        for (a = l.delegateType || v, Y.test(a + v) || (u = u.parentNode); u; u = u.parentNode) d.push(u), c = u;
                        c === (r.ownerDocument || T) && d.push(c.defaultView || c.parentWindow || e)
                    }
                    p = 0;
                    while ((u = d[p++]) && !t.isPropagationStopped()) t.type = p > 1 ? a : l.bindType || v, s = (h._data(u, "events") || {})[t.type] && h._data(u, "handle"), s && s.apply(u, n), s = o && u[o], s && s.apply && h.acceptData(u) && (t.result = s.apply(u, n), t.result === !1 && t.preventDefault());
                    if (t.type = v, !i && !t.isDefaultPrevented() && (!l._default || l._default.apply(d.pop(), n) === !1) && h.acceptData(r) && o && r[v] && !h.isWindow(r)) {
                        c = r[o], c && (r[o] = null), h.event.triggered = v;
                        try {
                            r[v]()
                        } catch (g) {}
                        h.event.triggered = void 0, c && (r[o] = c)
                    }
                    return t.result
                }
            },
            dispatch: function (e) {
                e = h.event.fix(e);
                var t, n, i, s, o, u = [],
                    a = r.call(arguments),
                    f = (h._data(this, "events") || {})[e.type] || [],
                    l = h.event.special[e.type] || {};
                if (a[0] = e, e.delegateTarget = this, !l.preDispatch || l.preDispatch.call(this, e) !== !1) {
                    u = h.event.handlers.call(this, e, f), t = 0;
                    while ((s = u[t++]) && !e.isPropagationStopped()) {
                        e.currentTarget = s.elem, o = 0;
                        while ((i = s.handlers[o++]) && !e.isImmediatePropagationStopped())(!e.namespace_re || e.namespace_re.test(i.namespace)) && (e.handleObj = i, e.data = i.data, n = ((h.event.special[i.origType] || {}).handle || i.handler).apply(s.elem, a), void 0 !== n && (e.result = n) === !1 && (e.preventDefault(), e.stopPropagation()))
                    }
                    return l.postDispatch && l.postDispatch.call(this, e), e.result
                }
            },
            handlers: function (e, t) {
                var n, r, i, s, o = [],
                    u = t.delegateCount,
                    a = e.target;
                if (u && a.nodeType && (!e.button || "click" !== e.type))
                    for (; a != this; a = a.parentNode || this)
                        if (1 === a.nodeType && (a.disabled !== !0 || "click" !== e.type)) {
                            for (i = [], s = 0; u > s; s++) r = t[s], n = r.selector + " ", void 0 === i[n] && (i[n] = r.needsContext ? h(n, this).index(a) >= 0 : h.find(n, this, null, [a]).length), i[n] && i.push(r);
                            i.length && o.push({
                                elem: a,
                                handlers: i
                            })
                        } return u < t.length && o.push({
                    elem: this,
                    handlers: t.slice(u)
                }), o
            },
            fix: function (e) {
                if (e[h.expando]) return e;
                var t, n, r, i = e.type,
                    s = e,
                    o = this.fixHooks[i];
                o || (this.fixHooks[i] = o = G.test(i) ? this.mouseHooks : Q.test(i) ? this.keyHooks : {}), r = o.props ? this.props.concat(o.props) : this.props, e = new h.Event(s), t = r.length;
                while (t--) n = r[t], e[n] = s[n];
                return e.target || (e.target = s.srcElement || T), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, o.filter ? o.filter(e, s) : e
            },
            props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
            fixHooks: {},
            keyHooks: {
                props: "char charCode key keyCode".split(" "),
                filter: function (e, t) {
                    return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e
                }
            },
            mouseHooks: {
                props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                filter: function (e, t) {
                    var n, r, i, s = t.button,
                        o = t.fromElement;
                    return null == e.pageX && null != t.clientX && (r = e.target.ownerDocument || T, i = r.documentElement, n = r.body, e.pageX = t.clientX + (i && i.scrollLeft || n && n.scrollLeft || 0) - (i && i.clientLeft || n && n.clientLeft || 0), e.pageY = t.clientY + (i && i.scrollTop || n && n.scrollTop || 0) - (i && i.clientTop || n && n.clientTop || 0)), !e.relatedTarget && o && (e.relatedTarget = o === e.target ? t.toElement : o), e.which || void 0 === s || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), e
                }
            },
            special: {
                load: {
                    noBubble: !0
                },
                focus: {
                    trigger: function () {
                        if (this !== nt() && this.focus) try {
                            return this.focus(), !1
                        } catch (e) {}
                    },
                    delegateType: "focusin"
                },
                blur: {
                    trigger: function () {
                        return this === nt() && this.blur ? (this.blur(), !1) : void 0
                    },
                    delegateType: "focusout"
                },
                click: {
                    trigger: function () {
                        return h.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : void 0
                    },
                    _default: function (e) {
                        return h.nodeName(e.target, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function (e) {
                        void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                    }
                }
            },
            simulate: function (e, t, n, r) {
                var i = h.extend(new h.Event, n, {
                    type: e,
                    isSimulated: !0,
                    originalEvent: {}
                });
                r ? h.event.trigger(i, null, t) : h.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault()
            }
        }, h.removeEvent = T.removeEventListener ? function (e, t, n) {
            e.removeEventListener && e.removeEventListener(t, n, !1)
        } : function (e, t, n) {
            var r = "on" + t;
            e.detachEvent && (typeof e[r] === B && (e[r] = null), e.detachEvent(r, n))
        }, h.Event = function (e, t) {
            return this instanceof h.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && e.returnValue === !1 ? et : tt) : this.type = e, t && h.extend(this, t), this.timeStamp = e && e.timeStamp || h.now(), void(this[h.expando] = !0)) : new h.Event(e, t)
        }, h.Event.prototype = {
            isDefaultPrevented: tt,
            isPropagationStopped: tt,
            isImmediatePropagationStopped: tt,
            preventDefault: function () {
                var e = this.originalEvent;
                this.isDefaultPrevented = et, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
            },
            stopPropagation: function () {
                var e = this.originalEvent;
                this.isPropagationStopped = et, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
            },
            stopImmediatePropagation: function () {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = et, e && e.stopImmediatePropagation && e.stopImmediatePropagation(), this.stopPropagation()
            }
        }, h.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function (e, t) {
            h.event.special[e] = {
                delegateType: t,
                bindType: t,
                handle: function (e) {
                    var n, r = this,
                        i = e.relatedTarget,
                        s = e.handleObj;
                    return (!i || i !== r && !h.contains(r, i)) && (e.type = s.origType, n = s.handler.apply(this, arguments), e.type = t), n
                }
            }
        }), l.submitBubbles || (h.event.special.submit = {
            setup: function () {
                return h.nodeName(this, "form") ? !1 : void h.event.add(this, "click._submit keypress._submit", function (e) {
                    var t = e.target,
                        n = h.nodeName(t, "input") || h.nodeName(t, "button") ? t.form : void 0;
                    n && !h._data(n, "submitBubbles") && (h.event.add(n, "submit._submit", function (e) {
                        e._submit_bubble = !0
                    }), h._data(n, "submitBubbles", !0))
                })
            },
            postDispatch: function (e) {
                e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && h.event.simulate("submit", this.parentNode, e, !0))
            },
            teardown: function () {
                return h.nodeName(this, "form") ? !1 : void h.event.remove(this, "._submit")
            }
        }), l.changeBubbles || (h.event.special.change = {
            setup: function () {
                return K.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (h.event.add(this, "propertychange._change", function (e) {
                    "checked" === e.originalEvent.propertyName && (this._just_changed = !0)
                }), h.event.add(this, "click._change", function (e) {
                    this._just_changed && !e.isTrigger && (this._just_changed = !1), h.event.simulate("change", this, e, !0)
                })), !1) : void h.event.add(this, "beforeactivate._change", function (e) {
                    var t = e.target;
                    K.test(t.nodeName) && !h._data(t, "changeBubbles") && (h.event.add(t, "change._change", function (e) {
                        !this.parentNode || e.isSimulated || e.isTrigger || h.event.simulate("change", this.parentNode, e, !0)
                    }), h._data(t, "changeBubbles", !0))
                })
            },
            handle: function (e) {
                var t = e.target;
                return this !== t || e.isSimulated || e.isTrigger || "radio" !== t.type && "checkbox" !== t.type ? e.handleObj.handler.apply(this, arguments) : void 0
            },
            teardown: function () {
                return h.event.remove(this, "._change"), !K.test(this.nodeName)
            }
        }), l.focusinBubbles || h.each({
            focus: "focusin",
            blur: "focusout"
        }, function (e, t) {
            var n = function (e) {
                h.event.simulate(t, e.target, h.event.fix(e), !0)
            };
            h.event.special[t] = {
                setup: function () {
                    var r = this.ownerDocument || this,
                        i = h._data(r, t);
                    i || r.addEventListener(e, n, !0), h._data(r, t, (i || 0) + 1)
                },
                teardown: function () {
                    var r = this.ownerDocument || this,
                        i = h._data(r, t) - 1;
                    i ? h._data(r, t, i) : (r.removeEventListener(e, n, !0), h._removeData(r, t))
                }
            }
        }), h.fn.extend({
            on: function (e, t, n, r, i) {
                var s, o;
                if ("object" == typeof e) {
                    "string" != typeof t && (n = n || t, t = void 0);
                    for (s in e) this.on(s, t, n, e[s], i);
                    return this
                }
                if (null == n && null == r ? (r = t, n = t = void 0) : null == r && ("string" == typeof t ? (r = n, n = void 0) : (r = n, n = t, t = void 0)), r === !1) r = tt;
                else if (!r) return this;
                return 1 === i && (o = r, r = function (e) {
                    return h().off(e), o.apply(this, arguments)
                }, r.guid = o.guid || (o.guid = h.guid++)), this.each(function () {
                    h.event.add(this, e, r, n, t)
                })
            },
            one: function (e, t, n, r) {
                return this.on(e, t, n, r, 1)
            },
            off: function (e, t, n) {
                var r, i;
                if (e && e.preventDefault && e.handleObj) return r = e.handleObj, h(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
                if ("object" == typeof e) {
                    for (i in e) this.off(i, t, e[i]);
                    return this
                }
                return (t === !1 || "function" == typeof t) && (n = t, t = void 0), n === !1 && (n = tt), this.each(function () {
                    h.event.remove(this, e, n, t)
                })
            },
            trigger: function (e, t) {
                return this.each(function () {
                    h.event.trigger(e, t, this)
                })
            },
            triggerHandler: function (e, t) {
                var n = this[0];
                return n ? h.event.trigger(e, t, n, !0) : void 0
            }
        });
        var it = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
            st = / jQuery\d+="(?:null|\d+)"/g,
            ot = new RegExp("<(?:" + it + ")[\\s/>]", "i"),
            ut = /^\s+/,
            at = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
            ft = /<([\w:]+)/,
            lt = /<tbody/i,
            ct = /<|&#?\w+;/,
            ht = /<(?:script|style|link)/i,
            pt = /checked\s*(?:[^=]|=\s*.checked.)/i,
            dt = /^$|\/(?:java|ecma)script/i,
            vt = /^true\/(.*)/,
            mt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
            gt = {
                option: [1, "<select multiple='multiple'>", "</select>"],
                legend: [1, "<fieldset>", "</fieldset>"],
                area: [1, "<map>", "</map>"],
                param: [1, "<object>", "</object>"],
                thead: [1, "<table>", "</table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: l.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
            },
            yt = rt(T),
            bt = yt.appendChild(T.createElement("div"));
        gt.optgroup = gt.option, gt.tbody = gt.tfoot = gt.colgroup = gt.caption = gt.thead, gt.th = gt.td, h.extend({
            clone: function (e, t, n) {
                var r, i, s, o, u, a = h.contains(e.ownerDocument, e);
                if (l.html5Clone || h.isXMLDoc(e) || !ot.test("<" + e.nodeName + ">") ? s = e.cloneNode(!0) : (bt.innerHTML = e.outerHTML, bt.removeChild(s = bt.firstChild)), !(l.noCloneEvent && l.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || h.isXMLDoc(e)))
                    for (r = wt(s), u = wt(e), o = 0; null != (i = u[o]); ++o) r[o] && kt(i, r[o]);
                if (t)
                    if (n)
                        for (u = u || wt(e), r = r || wt(s), o = 0; null != (i = u[o]); o++) Ct(i, r[o]);
                    else Ct(e, s);
                return r = wt(s, "script"), r.length > 0 && Nt(r, !a && wt(e, "script")), r = u = i = null, s
            },
            buildFragment: function (e, t, n, r) {
                for (var i, s, o, u, a, f, c, p = e.length, d = rt(t), v = [], m = 0; p > m; m++)
                    if (s = e[m], s || 0 === s)
                        if ("object" === h.type(s)) h.merge(v, s.nodeType ? [s] : s);
                        else if (ct.test(s)) {
                    u = u || d.appendChild(t.createElement("div")), a = (ft.exec(s) || ["", ""])[1].toLowerCase(), c = gt[a] || gt._default, u.innerHTML = c[1] + s.replace(at, "<$1></$2>") + c[2], i = c[0];
                    while (i--) u = u.lastChild;
                    if (!l.leadingWhitespace && ut.test(s) && v.push(t.createTextNode(ut.exec(s)[0])), !l.tbody) {
                        s = "table" !== a || lt.test(s) ? "<table>" !== c[1] || lt.test(s) ? 0 : u : u.firstChild, i = s && s.childNodes.length;
                        while (i--) h.nodeName(f = s.childNodes[i], "tbody") && !f.childNodes.length && s.removeChild(f)
                    }
                    h.merge(v, u.childNodes), u.textContent = "";
                    while (u.firstChild) u.removeChild(u.firstChild);
                    u = d.lastChild
                } else v.push(t.createTextNode(s));
                u && d.removeChild(u), l.appendChecked || h.grep(wt(v, "input"), Et), m = 0;
                while (s = v[m++])
                    if ((!r || -1 === h.inArray(s, r)) && (o = h.contains(s.ownerDocument, s), u = wt(d.appendChild(s), "script"), o && Nt(u), n)) {
                        i = 0;
                        while (s = u[i++]) dt.test(s.type || "") && n.push(s)
                    } return u = null, d
            },
            cleanData: function (e, t) {
                for (var r, i, s, o, u = 0, a = h.expando, f = h.cache, c = l.deleteExpando, p = h.event.special; null != (r = e[u]); u++)
                    if ((t || h.acceptData(r)) && (s = r[a], o = s && f[s])) {
                        if (o.events)
                            for (i in o.events) p[i] ? h.event.remove(r, i) : h.removeEvent(r, i, o.handle);
                        f[s] && (delete f[s], c ? delete r[a] : typeof r.removeAttribute !== B ? r.removeAttribute(a) : r[a] = null, n.push(s))
                    }
            }
        }), h.fn.extend({
            text: function (e) {
                return $(this, function (e) {
                    return void 0 === e ? h.text(this) : this.empty().append((this[0] && this[0].ownerDocument || T).createTextNode(e))
                }, null, e, arguments.length)
            },
            append: function () {
                return this.domManip(arguments, function (e) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var t = St(this, e);
                        t.appendChild(e)
                    }
                })
            },
            prepend: function () {
                return this.domManip(arguments, function (e) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var t = St(this, e);
                        t.insertBefore(e, t.firstChild)
                    }
                })
            },
            before: function () {
                return this.domManip(arguments, function (e) {
                    this.parentNode && this.parentNode.insertBefore(e, this)
                })
            },
            after: function () {
                return this.domManip(arguments, function (e) {
                    this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                })
            },
            remove: function (e, t) {
                for (var n, r = e ? h.filter(e, this) : this, i = 0; null != (n = r[i]); i++) t || 1 !== n.nodeType || h.cleanData(wt(n)), n.parentNode && (t && h.contains(n.ownerDocument, n) && Nt(wt(n, "script")), n.parentNode.removeChild(n));
                return this
            },
            empty: function () {
                for (var e, t = 0; null != (e = this[t]); t++) {
                    1 === e.nodeType && h.cleanData(wt(e, !1));
                    while (e.firstChild) e.removeChild(e.firstChild);
                    e.options && h.nodeName(e, "select") && (e.options.length = 0)
                }
                return this
            },
            clone: function (e, t) {
                return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () {
                    return h.clone(this, e, t)
                })
            },
            html: function (e) {
                return $(this, function (e) {
                    var t = this[0] || {},
                        n = 0,
                        r = this.length;
                    if (void 0 === e) return 1 === t.nodeType ? t.innerHTML.replace(st, "") : void 0;
                    if (!("string" != typeof e || ht.test(e) || !l.htmlSerialize && ot.test(e) || !l.leadingWhitespace && ut.test(e) || gt[(ft.exec(e) || ["", ""])[1].toLowerCase()])) {
                        e = e.replace(at, "<$1></$2>");
                        try {
                            for (; r > n; n++) t = this[n] || {}, 1 === t.nodeType && (h.cleanData(wt(t, !1)), t.innerHTML = e);
                            t = 0
                        } catch (i) {}
                    }
                    t && this.empty().append(e)
                }, null, e, arguments.length)
            },
            replaceWith: function () {
                var e = arguments[0];
                return this.domManip(arguments, function (t) {
                    e = this.parentNode, h.cleanData(wt(this)), e && e.replaceChild(t, this)
                }), e && (e.length || e.nodeType) ? this : this.remove()
            },
            detach: function (e) {
                return this.remove(e, !0)
            },
            domManip: function (e, t) {
                e = i.apply([], e);
                var n, r, s, o, u, a, f = 0,
                    c = this.length,
                    p = this,
                    d = c - 1,
                    v = e[0],
                    m = h.isFunction(v);
                if (m || c > 1 && "string" == typeof v && !l.checkClone && pt.test(v)) return this.each(function (n) {
                    var r = p.eq(n);
                    m && (e[0] = v.call(this, n, r.html())), r.domManip(e, t)
                });
                if (c && (a = h.buildFragment(e, this[0].ownerDocument, !1, this), n = a.firstChild, 1 === a.childNodes.length && (a = n), n)) {
                    for (o = h.map(wt(a, "script"), xt), s = o.length; c > f; f++) r = a, f !== d && (r = h.clone(r, !0, !0), s && h.merge(o, wt(r, "script"))), t.call(this[f], r, f);
                    if (s)
                        for (u = o[o.length - 1].ownerDocument, h.map(o, Tt), f = 0; s > f; f++) r = o[f], dt.test(r.type || "") && !h._data(r, "globalEval") && h.contains(u, r) && (r.src ? h._evalUrl && h._evalUrl(r.src) : h.globalEval((r.text || r.textContent || r.innerHTML || "").replace(mt, "")));
                    a = n = null
                }
                return this
            }
        }), h.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function (e, t) {
            h.fn[e] = function (e) {
                for (var n, r = 0, i = [], o = h(e), u = o.length - 1; u >= r; r++) n = r === u ? this : this.clone(!0), h(o[r])[t](n), s.apply(i, n.get());
                return this.pushStack(i)
            }
        });
        var Lt, At = {};
        ! function () {
            var e;
            l.shrinkWrapBlocks = function () {
                if (null != e) return e;
                e = !1;
                var t, n, r;
                return n = T.getElementsByTagName("body")[0], n && n.style ? (t = T.createElement("div"), r = T.createElement("div"), r.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(r).appendChild(t), typeof t.style.zoom !== B && (t.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", t.appendChild(T.createElement("div")).style.width = "5px", e = 3 !== t.offsetWidth), n.removeChild(r), e) : void 0
            }
        }();
        var _t = /^margin/,
            Dt = new RegExp("^(" + W + ")(?!px)[a-z%]+$", "i"),
            Pt, Ht, Bt = /^(top|right|bottom|left)$/;
        e.getComputedStyle ? (Pt = function (e) {
            return e.ownerDocument.defaultView.getComputedStyle(e, null)
        }, Ht = function (e, t, n) {
            var r, i, s, o, u = e.style;
            return n = n || Pt(e), o = n ? n.getPropertyValue(t) || n[t] : void 0, n && ("" !== o || h.contains(e.ownerDocument, e) || (o = h.style(e, t)), Dt.test(o) && _t.test(t) && (r = u.width, i = u.minWidth, s = u.maxWidth, u.minWidth = u.maxWidth = u.width = o, o = n.width, u.width = r, u.minWidth = i, u.maxWidth = s)), void 0 === o ? o : o + ""
        }) : T.documentElement.currentStyle && (Pt = function (e) {
            return e.currentStyle
        }, Ht = function (e, t, n) {
            var r, i, s, o, u = e.style;
            return n = n || Pt(e), o = n ? n[t] : void 0, null == o && u && u[t] && (o = u[t]), Dt.test(o) && !Bt.test(t) && (r = u.left, i = e.runtimeStyle, s = i && i.left, s && (i.left = e.currentStyle.left), u.left = "fontSize" === t ? "1em" : o, o = u.pixelLeft + "px", u.left = r, s && (i.left = s)), void 0 === o ? o : o + "" || "auto"
        }), ! function () {
            var t, n, r, i, s, o, u;
            if (t = T.createElement("div"), t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", r = t.getElementsByTagName("a")[0], n = r && r.style) {
                n.cssText = "float:left;opacity:.5", l.opacity = "0.5" === n.opacity, l.cssFloat = !!n.cssFloat, t.style.backgroundClip = "content-box", t.cloneNode(!0).style.backgroundClip = "", l.clearCloneStyle = "content-box" === t.style.backgroundClip, l.boxSizing = "" === n.boxSizing || "" === n.MozBoxSizing || "" === n.WebkitBoxSizing, h.extend(l, {
                    reliableHiddenOffsets: function () {
                        return null == o && a(), o
                    },
                    boxSizingReliable: function () {
                        return null == s && a(), s
                    },
                    pixelPosition: function () {
                        return null == i && a(), i
                    },
                    reliableMarginRight: function () {
                        return null == u && a(), u
                    }
                });

                function a() {
                    var t, n, r, a;
                    n = T.getElementsByTagName("body")[0], n && n.style && (t = T.createElement("div"), r = T.createElement("div"), r.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(r).appendChild(t), t.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", i = s = !1, u = !0, e.getComputedStyle && (i = "1%" !== (e.getComputedStyle(t, null) || {}).top, s = "4px" === (e.getComputedStyle(t, null) || {
                        width: "4px"
                    }).width, a = t.appendChild(T.createElement("div")), a.style.cssText = t.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", a.style.marginRight = a.style.width = "0", t.style.width = "1px", u = !parseFloat((e.getComputedStyle(a, null) || {}).marginRight)), t.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", a = t.getElementsByTagName("td"), a[0].style.cssText = "margin:0;border:0;padding:0;display:none", o = 0 === a[0].offsetHeight, o && (a[0].style.display = "", a[1].style.display = "none", o = 0 === a[0].offsetHeight), n.removeChild(r))
                }
            }
        }(), h.swap = function (e, t, n, r) {
            var i, s, o = {};
            for (s in t) o[s] = e.style[s], e.style[s] = t[s];
            i = n.apply(e, r || []);
            for (s in t) e.style[s] = o[s];
            return i
        };
        var Ft = /alpha\([^)]*\)/i,
            It = /opacity\s*=\s*([^)]*)/,
            qt = /^(none|table(?!-c[ea]).+)/,
            Rt = new RegExp("^(" + W + ")(.*)$", "i"),
            Ut = new RegExp("^([+-])=(" + W + ")", "i"),
            zt = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            },
            Wt = {
                letterSpacing: "0",
                fontWeight: "400"
            },
            Xt = ["Webkit", "O", "Moz", "ms"];
        h.extend({
            cssHooks: {
                opacity: {
                    get: function (e, t) {
                        if (t) {
                            var n = Ht(e, "opacity");
                            return "" === n ? "1" : n
                        }
                    }
                }
            },
            cssNumber: {
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {
                "float": l.cssFloat ? "cssFloat" : "styleFloat"
            },
            style: function (e, t, n, r) {
                if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                    var i, s, o, u = h.camelCase(t),
                        a = e.style;
                    if (t = h.cssProps[u] || (h.cssProps[u] = Vt(a, u)), o = h.cssHooks[t] || h.cssHooks[u], void 0 === n) return o && "get" in o && void 0 !== (i = o.get(e, !1, r)) ? i : a[t];
                    if (s = typeof n, "string" === s && (i = Ut.exec(n)) && (n = (i[1] + 1) * i[2] + parseFloat(h.css(e, t)), s = "number"), null != n && n === n && ("number" !== s || h.cssNumber[u] || (n += "px"), l.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (a[t] = "inherit"), !(o && "set" in o && void 0 === (n = o.set(e, n, r))))) try {
                        a[t] = n
                    } catch (f) {}
                }
            },
            css: function (e, t, n, r) {
                var i, s, o, u = h.camelCase(t);
                return t = h.cssProps[u] || (h.cssProps[u] = Vt(e.style, u)), o = h.cssHooks[t] || h.cssHooks[u], o && "get" in o && (s = o.get(e, !0, n)), void 0 === s && (s = Ht(e, t, r)), "normal" === s && t in Wt && (s = Wt[t]), "" === n || n ? (i = parseFloat(s), n === !0 || h.isNumeric(i) ? i || 0 : s) : s
            }
        }), h.each(["height", "width"], function (e, t) {
            h.cssHooks[t] = {
                get: function (e, n, r) {
                    return n ? qt.test(h.css(e, "display")) && 0 === e.offsetWidth ? h.swap(e, zt, function () {
                        return Qt(e, t, r)
                    }) : Qt(e, t, r) : void 0
                },
                set: function (e, n, r) {
                    var i = r && Pt(e);
                    return Jt(e, n, r ? Kt(e, t, r, l.boxSizing && "border-box" === h.css(e, "boxSizing", !1, i), i) : 0)
                }
            }
        }), l.opacity || (h.cssHooks.opacity = {
            get: function (e, t) {
                return It.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
            },
            set: function (e, t) {
                var n = e.style,
                    r = e.currentStyle,
                    i = h.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
                    s = r && r.filter || n.filter || "";
                n.zoom = 1, (t >= 1 || "" === t) && "" === h.trim(s.replace(Ft, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || r && !r.filter) || (n.filter = Ft.test(s) ? s.replace(Ft, i) : s + " " + i)
            }
        }), h.cssHooks.marginRight = jt(l.reliableMarginRight, function (e, t) {
            return t ? h.swap(e, {
                display: "inline-block"
            }, Ht, [e, "marginRight"]) : void 0
        }), h.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function (e, t) {
            h.cssHooks[e + t] = {
                expand: function (n) {
                    for (var r = 0, i = {}, s = "string" == typeof n ? n.split(" ") : [n]; 4 > r; r++) i[e + X[r] + t] = s[r] || s[r - 2] || s[0];
                    return i
                }
            }, _t.test(e) || (h.cssHooks[e + t].set = Jt)
        }), h.fn.extend({
            css: function (e, t) {
                return $(this, function (e, t, n) {
                    var r, i, s = {},
                        o = 0;
                    if (h.isArray(t)) {
                        for (r = Pt(e), i = t.length; i > o; o++) s[t[o]] = h.css(e, t[o], !1, r);
                        return s
                    }
                    return void 0 !== n ? h.style(e, t, n) : h.css(e, t)
                }, e, t, arguments.length > 1)
            },
            show: function () {
                return $t(this, !0)
            },
            hide: function () {
                return $t(this)
            },
            toggle: function (e) {
                return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
                    V(this) ? h(this).show() : h(this).hide()
                })
            }
        }), h.Tween = Gt, Gt.prototype = {
            constructor: Gt,
            init: function (e, t, n, r, i, s) {
                this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = s || (h.cssNumber[n] ? "" : "px")
            },
            cur: function () {
                var e = Gt.propHooks[this.prop];
                return e && e.get ? e.get(this) : Gt.propHooks._default.get(this)
            },
            run: function (e) {
                var t, n = Gt.propHooks[this.prop];
                return this.pos = t = this.options.duration ? h.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : Gt.propHooks._default.set(this), this
            }
        }, Gt.prototype.init.prototype = Gt.prototype, Gt.propHooks = {
            _default: {
                get: function (e) {
                    var t;
                    return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = h.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop]
                },
                set: function (e) {
                    h.fx.step[e.prop] ? h.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[h.cssProps[e.prop]] || h.cssHooks[e.prop]) ? h.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
                }
            }
        }, Gt.propHooks.scrollTop = Gt.propHooks.scrollLeft = {
            set: function (e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        }, h.easing = {
            linear: function (e) {
                return e
            },
            swing: function (e) {
                return .5 - Math.cos(e * Math.PI) / 2
            }
        }, h.fx = Gt.prototype.init, h.fx.step = {};
        var Yt, Zt, en = /^(?:toggle|show|hide)$/,
            tn = new RegExp("^(?:([+-])=|)(" + W + ")([a-z%]*)$", "i"),
            nn = /queueHooks$/,
            rn = [fn],
            sn = {
                "*": [function (e, t) {
                    var n = this.createTween(e, t),
                        r = n.cur(),
                        i = tn.exec(t),
                        s = i && i[3] || (h.cssNumber[e] ? "" : "px"),
                        o = (h.cssNumber[e] || "px" !== s && +r) && tn.exec(h.css(n.elem, e)),
                        u = 1,
                        a = 20;
                    if (o && o[3] !== s) {
                        s = s || o[3], i = i || [], o = +r || 1;
                        do u = u || ".5", o /= u, h.style(n.elem, e, o + s); while (u !== (u = n.cur() / r) && 1 !== u && --a)
                    }
                    return i && (o = n.start = +o || +r || 0, n.unit = s, n.end = i[1] ? o + (i[1] + 1) * i[2] : +i[2]), n
                }]
            };
        h.Animation = h.extend(cn, {
                tweener: function (e, t) {
                    h.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" ");
                    for (var n, r = 0, i = e.length; i > r; r++) n = e[r], sn[n] = sn[n] || [], sn[n].unshift(t)
                },
                prefilter: function (e, t) {
                    t ? rn.unshift(e) : rn.push(e)
                }
            }), h.speed = function (e, t, n) {
                var r = e && "object" == typeof e ? h.extend({}, e) : {
                    complete: n || !n && t || h.isFunction(e) && e,
                    duration: e,
                    easing: n && t || t && !h.isFunction(t) && t
                };
                return r.duration = h.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in h.fx.speeds ? h.fx.speeds[r.duration] : h.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = "fx"), r.old = r.complete, r.complete = function () {
                    h.isFunction(r.old) && r.old.call(this), r.queue && h.dequeue(this, r.queue)
                }, r
            }, h.fn.extend({
                fadeTo: function (e, t, n, r) {
                    return this.filter(V).css("opacity", 0).show().end().animate({
                        opacity: t
                    }, e, n, r)
                },
                animate: function (e, t, n, r) {
                    var i = h.isEmptyObject(e),
                        s = h.speed(t, n, r),
                        o = function () {
                            var t = cn(this, h.extend({}, e), s);
                            (i || h._data(this, "finish")) && t.stop(!0)
                        };
                    return o.finish = o, i || s.queue === !1 ? this.each(o) : this.queue(s.queue, o)
                },
                stop: function (e, t, n) {
                    var r = function (e) {
                        var t = e.stop;
                        delete e.stop, t(n)
                    };
                    return "string" != typeof e && (n = t, t = e, e = void 0), t && e !== !1 && this.queue(e || "fx", []), this.each(function () {
                        var t = !0,
                            i = null != e && e + "queueHooks",
                            s = h.timers,
                            o = h._data(this);
                        if (i) o[i] && o[i].stop && r(o[i]);
                        else
                            for (i in o) o[i] && o[i].stop && nn.test(i) && r(o[i]);
                        for (i = s.length; i--;) s[i].elem !== this || null != e && s[i].queue !== e || (s[i].anim.stop(n), t = !1, s.splice(i, 1));
                        (t || !n) && h.dequeue(this, e)
                    })
                },
                finish: function (e) {
                    return e !== !1 && (e = e || "fx"), this.each(function () {
                        var t, n = h._data(this),
                            r = n[e + "queue"],
                            i = n[e + "queueHooks"],
                            s = h.timers,
                            o = r ? r.length : 0;
                        for (n.finish = !0, h.queue(this, e, []), i && i.stop && i.stop.call(this, !0), t = s.length; t--;) s[t].elem === this && s[t].queue === e && (s[t].anim.stop(!0), s.splice(t, 1));
                        for (t = 0; o > t; t++) r[t] && r[t].finish && r[t].finish.call(this);
                        delete n.finish
                    })
                }
            }), h.each(["toggle", "show", "hide"], function (e, t) {
                var n = h.fn[t];
                h.fn[t] = function (e, r, i) {
                    return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(un(t, !0), e, r, i)
                }
            }), h.each({
                slideDown: un("show"),
                slideUp: un("hide"),
                slideToggle: un("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function (e, t) {
                h.fn[e] = function (e, n, r) {
                    return this.animate(t, e, n, r)
                }
            }), h.timers = [], h.fx.tick = function () {
                var e, t = h.timers,
                    n = 0;
                for (Yt = h.now(); n < t.length; n++) e = t[n], e() || t[n] !== e || t.splice(n--, 1);
                t.length || h.fx.stop(), Yt = void 0
            }, h.fx.timer = function (e) {
                h.timers.push(e), e() ? h.fx.start() : h.timers.pop()
            }, h.fx.interval = 13, h.fx.start = function () {
                Zt || (Zt = setInterval(h.fx.tick, h.fx.interval))
            }, h.fx.stop = function () {
                clearInterval(Zt), Zt = null
            }, h.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            }, h.fn.delay = function (e, t) {
                return e = h.fx ? h.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) {
                    var r = setTimeout(t, e);
                    n.stop = function () {
                        clearTimeout(r)
                    }
                })
            },
            function () {
                var e, t, n, r, i;
                t = T.createElement("div"), t.setAttribute("className", "t"), t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", r = t.getElementsByTagName("a")[0], n = T.createElement("select"), i = n.appendChild(T.createElement("option")), e = t.getElementsByTagName("input")[0], r.style.cssText = "top:1px", l.getSetAttribute = "t" !== t.className, l.style = /top/.test(r.getAttribute("style")), l.hrefNormalized = "/a" === r.getAttribute("href"), l.checkOn = !!e.value, l.optSelected = i.selected, l.enctype = !!T.createElement("form").enctype, n.disabled = !0, l.optDisabled = !i.disabled, e = T.createElement("input"), e.setAttribute("value", ""), l.input = "" === e.getAttribute("value"), e.value = "t", e.setAttribute("type", "radio"), l.radioValue = "t" === e.value
            }();
        var hn = /\r/g;
        h.fn.extend({
            val: function (e) {
                var t, n, r, i = this[0];
                if (arguments.length) return r = h.isFunction(e), this.each(function (n) {
                    var i;
                    1 === this.nodeType && (i = r ? e.call(this, n, h(this).val()) : e, null == i ? i = "" : "number" == typeof i ? i += "" : h.isArray(i) && (i = h.map(i, function (e) {
                        return null == e ? "" : e + ""
                    })), t = h.valHooks[this.type] || h.valHooks[this.nodeName.toLowerCase()], t && "set" in t && void 0 !== t.set(this, i, "value") || (this.value = i))
                });
                if (i) return t = h.valHooks[i.type] || h.valHooks[i.nodeName.toLowerCase()], t && "get" in t && void 0 !== (n = t.get(i, "value")) ? n : (n = i.value, "string" == typeof n ? n.replace(hn, "") : null == n ? "" : n)
            }
        }), h.extend({
            valHooks: {
                option: {
                    get: function (e) {
                        var t = h.find.attr(e, "value");
                        return null != t ? t : h.trim(h.text(e))
                    }
                },
                select: {
                    get: function (e) {
                        for (var t, n, r = e.options, i = e.selectedIndex, s = "select-one" === e.type || 0 > i, o = s ? null : [], u = s ? i + 1 : r.length, a = 0 > i ? u : s ? i : 0; u > a; a++)
                            if (n = r[a], !(!n.selected && a !== i || (l.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && h.nodeName(n.parentNode, "optgroup"))) {
                                if (t = h(n).val(), s) return t;
                                o.push(t)
                            } return o
                    },
                    set: function (e, t) {
                        var n, r, i = e.options,
                            s = h.makeArray(t),
                            o = i.length;
                        while (o--)
                            if (r = i[o], h.inArray(h.valHooks.option.get(r), s) >= 0) try {
                                r.selected = n = !0
                            } catch (u) {
                                r.scrollHeight
                            } else r.selected = !1;
                        return n || (e.selectedIndex = -1), i
                    }
                }
            }
        }), h.each(["radio", "checkbox"], function () {
            h.valHooks[this] = {
                set: function (e, t) {
                    return h.isArray(t) ? e.checked = h.inArray(h(e).val(), t) >= 0 : void 0
                }
            }, l.checkOn || (h.valHooks[this].get = function (e) {
                return null === e.getAttribute("value") ? "on" : e.value
            })
        });
        var pn, dn, vn = h.expr.attrHandle,
            mn = /^(?:checked|selected)$/i,
            gn = l.getSetAttribute,
            yn = l.input;
        h.fn.extend({
            attr: function (e, t) {
                return $(this, h.attr, e, t, arguments.length > 1)
            },
            removeAttr: function (e) {
                return this.each(function () {
                    h.removeAttr(this, e)
                })
            }
        }), h.extend({
            attr: function (e, t, n) {
                var r, i, s = e.nodeType;
                if (e && 3 !== s && 8 !== s && 2 !== s) return typeof e.getAttribute === B ? h.prop(e, t, n) : (1 === s && h.isXMLDoc(e) || (t = t.toLowerCase(), r = h.attrHooks[t] || (h.expr.match.bool.test(t) ? dn : pn)), void 0 === n ? r && "get" in r && null !== (i = r.get(e, t)) ? i : (i = h.find.attr(e, t), null == i ? void 0 : i) : null !== n ? r && "set" in r && void 0 !== (i = r.set(e, n, t)) ? i : (e.setAttribute(t, n + ""), n) : void h.removeAttr(e, t))
            },
            removeAttr: function (e, t) {
                var n, r, i = 0,
                    s = t && t.match(O);
                if (s && 1 === e.nodeType)
                    while (n = s[i++]) r = h.propFix[n] || n, h.expr.match.bool.test(n) ? yn && gn || !mn.test(n) ? e[r] = !1 : e[h.camelCase("default-" + n)] = e[r] = !1 : h.attr(e, n, ""), e.removeAttribute(gn ? n : r)
            },
            attrHooks: {
                type: {
                    set: function (e, t) {
                        if (!l.radioValue && "radio" === t && h.nodeName(e, "input")) {
                            var n = e.value;
                            return e.setAttribute("type", t), n && (e.value = n), t
                        }
                    }
                }
            }
        }), dn = {
            set: function (e, t, n) {
                return t === !1 ? h.removeAttr(e, n) : yn && gn || !mn.test(n) ? e.setAttribute(!gn && h.propFix[n] || n, n) : e[h.camelCase("default-" + n)] = e[n] = !0, n
            }
        }, h.each(h.expr.match.bool.source.match(/\w+/g), function (e, t) {
            var n = vn[t] || h.find.attr;
            vn[t] = yn && gn || !mn.test(t) ? function (e, t, r) {
                var i, s;
                return r || (s = vn[t], vn[t] = i, i = null != n(e, t, r) ? t.toLowerCase() : null, vn[t] = s), i
            } : function (e, t, n) {
                return n ? void 0 : e[h.camelCase("default-" + t)] ? t.toLowerCase() : null
            }
        }), yn && gn || (h.attrHooks.value = {
            set: function (e, t, n) {
                return h.nodeName(e, "input") ? void(e.defaultValue = t) : pn && pn.set(e, t, n)
            }
        }), gn || (pn = {
            set: function (e, t, n) {
                var r = e.getAttributeNode(n);
                return r || e.setAttributeNode(r = e.ownerDocument.createAttribute(n)), r.value = t += "", "value" === n || t === e.getAttribute(n) ? t : void 0
            }
        }, vn.id = vn.name = vn.coords = function (e, t, n) {
            var r;
            return n ? void 0 : (r = e.getAttributeNode(t)) && "" !== r.value ? r.value : null
        }, h.valHooks.button = {
            get: function (e, t) {
                var n = e.getAttributeNode(t);
                return n && n.specified ? n.value : void 0
            },
            set: pn.set
        }, h.attrHooks.contenteditable = {
            set: function (e, t, n) {
                pn.set(e, "" === t ? !1 : t, n)
            }
        }, h.each(["width", "height"], function (e, t) {
            h.attrHooks[t] = {
                set: function (e, n) {
                    return "" === n ? (e.setAttribute(t, "auto"), n) : void 0
                }
            }
        })), l.style || (h.attrHooks.style = {
            get: function (e) {
                return e.style.cssText || void 0
            },
            set: function (e, t) {
                return e.style.cssText = t + ""
            }
        });
        var bn = /^(?:input|select|textarea|button|object)$/i,
            wn = /^(?:a|area)$/i;
        h.fn.extend({
            prop: function (e, t) {
                return $(this, h.prop, e, t, arguments.length > 1)
            },
            removeProp: function (e) {
                return e = h.propFix[e] || e, this.each(function () {
                    try {
                        this[e] = void 0, delete this[e]
                    } catch (t) {}
                })
            }
        }), h.extend({
            propFix: {
                "for": "htmlFor",
                "class": "className"
            },
            prop: function (e, t, n) {
                var r, i, s, o = e.nodeType;
                if (e && 3 !== o && 8 !== o && 2 !== o) return s = 1 !== o || !h.isXMLDoc(e), s && (t = h.propFix[t] || t, i = h.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t]
            },
            propHooks: {
                tabIndex: {
                    get: function (e) {
                        var t = h.find.attr(e, "tabindex");
                        return t ? parseInt(t, 10) : bn.test(e.nodeName) || wn.test(e.nodeName) && e.href ? 0 : -1
                    }
                }
            }
        }), l.hrefNormalized || h.each(["href", "src"], function (e, t) {
            h.propHooks[t] = {
                get: function (e) {
                    return e.getAttribute(t, 4)
                }
            }
        }), l.optSelected || (h.propHooks.selected = {
            get: function (e) {
                var t = e.parentNode;
                return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null
            }
        }), h.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
            h.propFix[this.toLowerCase()] = this
        }), l.enctype || (h.propFix.enctype = "encoding");
        var En = /[\t\r\n\f]/g;
        h.fn.extend({
            addClass: function (e) {
                var t, n, r, i, s, o, u = 0,
                    a = this.length,
                    f = "string" == typeof e && e;
                if (h.isFunction(e)) return this.each(function (t) {
                    h(this).addClass(e.call(this, t, this.className))
                });
                if (f)
                    for (t = (e || "").match(O) || []; a > u; u++)
                        if (n = this[u], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(En, " ") : " ")) {
                            s = 0;
                            while (i = t[s++]) r.indexOf(" " + i + " ") < 0 && (r += i + " ");
                            o = h.trim(r), n.className !== o && (n.className = o)
                        } return this
            },
            removeClass: function (e) {
                var t, n, r, i, s, o, u = 0,
                    a = this.length,
                    f = 0 === arguments.length || "string" == typeof e && e;
                if (h.isFunction(e)) return this.each(function (t) {
                    h(this).removeClass(e.call(this, t, this.className))
                });
                if (f)
                    for (t = (e || "").match(O) || []; a > u; u++)
                        if (n = this[u], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(En, " ") : "")) {
                            s = 0;
                            while (i = t[s++])
                                while (r.indexOf(" " + i + " ") >= 0) r = r.replace(" " + i + " ", " ");
                            o = e ? h.trim(r) : "", n.className !== o && (n.className = o)
                        } return this
            },
            toggleClass: function (e, t) {
                var n = typeof e;
                return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : this.each(h.isFunction(e) ? function (n) {
                    h(this).toggleClass(e.call(this, n, this.className, t), t)
                } : function () {
                    if ("string" === n) {
                        var t, r = 0,
                            i = h(this),
                            s = e.match(O) || [];
                        while (t = s[r++]) i.hasClass(t) ? i.removeClass(t) : i.addClass(t)
                    } else(n === B || "boolean" === n) && (this.className && h._data(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : h._data(this, "__className__") || "")
                })
            },
            hasClass: function (e) {
                for (var t = " " + e + " ", n = 0, r = this.length; r > n; n++)
                    if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(En, " ").indexOf(t) >= 0) return !0;
                return !1
            }
        }), h.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) {
            h.fn[t] = function (e, n) {
                return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
            }
        }), h.fn.extend({
            hover: function (e, t) {
                return this.mouseenter(e).mouseleave(t || e)
            },
            bind: function (e, t, n) {
                return this.on(e, null, t, n)
            },
            unbind: function (e, t) {
                return this.off(e, null, t)
            },
            delegate: function (e, t, n, r) {
                return this.on(t, e, n, r)
            },
            undelegate: function (e, t, n) {
                return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
            }
        });
        var Sn = h.now(),
            xn = /\?/,
            Tn = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
        h.parseJSON = function (t) {
            if (e.JSON && e.JSON.parse) return e.JSON.parse(t + "");
            var n, r = null,
                i = h.trim(t + "");
            return i && !h.trim(i.replace(Tn, function (e, t, i, s) {
                return n && t && (r = 0), 0 === r ? e : (n = i || t, r += !s - !i, "")
            })) ? Function("return " + i)() : h.error("Invalid JSON: " + t)
        }, h.parseXML = function (t) {
            var n, r;
            if (!t || "string" != typeof t) return null;
            try {
                e.DOMParser ? (r = new DOMParser, n = r.parseFromString(t, "text/xml")) : (n = new ActiveXObject("Microsoft.XMLDOM"), n.async = "false", n.loadXML(t))
            } catch (i) {
                n = void 0
            }
            return n && n.documentElement && !n.getElementsByTagName("parsererror").length || h.error("Invalid XML: " + t), n
        };
        var Nn, Cn, kn = /#.*$/,
            Ln = /([?&])_=[^&]*/,
            An = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
            On = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
            Mn = /^(?:GET|HEAD)$/,
            _n = /^\/\//,
            Dn = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
            Pn = {},
            Hn = {},
            Bn = "*/".concat("*");
        try {
            Cn = location.href
        } catch (jn) {
            Cn = T.createElement("a"), Cn.href = "", Cn = Cn.href
        }
        Nn = Dn.exec(Cn.toLowerCase()) || [], h.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: Cn,
                type: "GET",
                isLocal: On.test(Nn[1]),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": Bn,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /xml/,
                    html: /html/,
                    json: /json/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": h.parseJSON,
                    "text xml": h.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function (e, t) {
                return t ? qn(qn(e, h.ajaxSettings), t) : qn(h.ajaxSettings, e)
            },
            ajaxPrefilter: Fn(Pn),
            ajaxTransport: Fn(Hn),
            ajax: function (e, t) {
                function x(e, t, n, r) {
                    var f, g, y, w, S, x = t;
                    2 !== b && (b = 2, o && clearTimeout(o), a = void 0, s = r || "", E.readyState = e > 0 ? 4 : 0, f = e >= 200 && 300 > e || 304 === e, n && (w = Rn(l, E, n)), w = Un(l, w, E, f), f ? (l.ifModified && (S = E.getResponseHeader("Last-Modified"), S && (h.lastModified[i] = S), S = E.getResponseHeader("etag"), S && (h.etag[i] = S)), 204 === e || "HEAD" === l.type ? x = "nocontent" : 304 === e ? x = "notmodified" : (x = w.state, g = w.data, y = w.error, f = !y)) : (y = x, (e || !x) && (x = "error", 0 > e && (e = 0))), E.status = e, E.statusText = (t || x) + "", f ? d.resolveWith(c, [g, x, E]) : d.rejectWith(c, [E, x, y]), E.statusCode(m), m = void 0, u && p.trigger(f ? "ajaxSuccess" : "ajaxError", [E, l, f ? g : y]), v.fireWith(c, [E, x]), u && (p.trigger("ajaxComplete", [E, l]), --h.active || h.event.trigger("ajaxStop")))
                }
                "object" == typeof e && (t = e, e = void 0), t = t || {};
                var n, r, i, s, o, u, a, f, l = h.ajaxSetup({}, t),
                    c = l.context || l,
                    p = l.context && (c.nodeType || c.jquery) ? h(c) : h.event,
                    d = h.Deferred(),
                    v = h.Callbacks("once memory"),
                    m = l.statusCode || {},
                    g = {},
                    y = {},
                    b = 0,
                    w = "canceled",
                    E = {
                        readyState: 0,
                        getResponseHeader: function (e) {
                            var t;
                            if (2 === b) {
                                if (!f) {
                                    f = {};
                                    while (t = An.exec(s)) f[t[1].toLowerCase()] = t[2]
                                }
                                t = f[e.toLowerCase()]
                            }
                            return null == t ? null : t
                        },
                        getAllResponseHeaders: function () {
                            return 2 === b ? s : null
                        },
                        setRequestHeader: function (e, t) {
                            var n = e.toLowerCase();
                            return b || (e = y[n] = y[n] || e, g[e] = t), this
                        },
                        overrideMimeType: function (e) {
                            return b || (l.mimeType = e), this
                        },
                        statusCode: function (e) {
                            var t;
                            if (e)
                                if (2 > b)
                                    for (t in e) m[t] = [m[t], e[t]];
                                else E.always(e[E.status]);
                            return this
                        },
                        abort: function (e) {
                            var t = e || w;
                            return a && a.abort(t), x(0, t), this
                        }
                    };
                if (d.promise(E).complete = v.add, E.success = E.done, E.error = E.fail, l.url = ((e || l.url || Cn) + "").replace(kn, "").replace(_n, Nn[1] + "//"), l.type = t.method || t.type || l.method || l.type, l.dataTypes = h.trim(l.dataType || "*").toLowerCase().match(O) || [""], null == l.crossDomain && (n = Dn.exec(l.url.toLowerCase()), l.crossDomain = !(!n || n[1] === Nn[1] && n[2] === Nn[2] && (n[3] || ("http:" === n[1] ? "80" : "443")) === (Nn[3] || ("http:" === Nn[1] ? "80" : "443")))), l.data && l.processData && "string" != typeof l.data && (l.data = h.param(l.data, l.traditional)), In(Pn, l, t, E), 2 === b) return E;
                u = l.global, u && 0 === h.active++ && h.event.trigger("ajaxStart"), l.type = l.type.toUpperCase(), l.hasContent = !Mn.test(l.type), i = l.url, l.hasContent || (l.data && (i = l.url += (xn.test(i) ? "&" : "?") + l.data, delete l.data), l.cache === !1 && (l.url = Ln.test(i) ? i.replace(Ln, "$1_=" + Sn++) : i + (xn.test(i) ? "&" : "?") + "_=" + Sn++)), l.ifModified && (h.lastModified[i] && E.setRequestHeader("If-Modified-Since", h.lastModified[i]), h.etag[i] && E.setRequestHeader("If-None-Match", h.etag[i])), (l.data && l.hasContent && l.contentType !== !1 || t.contentType) && E.setRequestHeader("Content-Type", l.contentType), E.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + ("*" !== l.dataTypes[0] ? ", " + Bn + "; q=0.01" : "") : l.accepts["*"]);
                for (r in l.headers) E.setRequestHeader(r, l.headers[r]);
                if (!l.beforeSend || l.beforeSend.call(c, E, l) !== !1 && 2 !== b) {
                    w = "abort";
                    for (r in {
                            success: 1,
                            error: 1,
                            complete: 1
                        }) E[r](l[r]);
                    if (a = In(Hn, l, t, E)) {
                        E.readyState = 1, u && p.trigger("ajaxSend", [E, l]), l.async && l.timeout > 0 && (o = setTimeout(function () {
                            E.abort("timeout")
                        }, l.timeout));
                        try {
                            b = 1, a.send(g, x)
                        } catch (S) {
                            if (!(2 > b)) throw S;
                            x(-1, S)
                        }
                    } else x(-1, "No Transport");
                    return E
                }
                return E.abort()
            },
            getJSON: function (e, t, n) {
                return h.get(e, t, n, "json")
            },
            getScript: function (e, t) {
                return h.get(e, void 0, t, "script")
            }
        }), h.each(["get", "post"], function (e, t) {
            h[t] = function (e, n, r, i) {
                return h.isFunction(n) && (i = i || r, r = n, n = void 0), h.ajax({
                    url: e,
                    type: t,
                    dataType: i,
                    data: n,
                    success: r
                })
            }
        }), h.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
            h.fn[t] = function (e) {
                return this.on(t, e)
            }
        }), h._evalUrl = function (e) {
            return h.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                async: !1,
                global: !1,
                "throws": !0
            })
        }, h.fn.extend({
            wrapAll: function (e) {
                if (h.isFunction(e)) return this.each(function (t) {
                    h(this).wrapAll(e.call(this, t))
                });
                if (this[0]) {
                    var t = h(e, this[0].ownerDocument).eq(0).clone(!0);
                    this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
                        var e = this;
                        while (e.firstChild && 1 === e.firstChild.nodeType) e = e.firstChild;
                        return e
                    }).append(this)
                }
                return this
            },
            wrapInner: function (e) {
                return this.each(h.isFunction(e) ? function (t) {
                    h(this).wrapInner(e.call(this, t))
                } : function () {
                    var t = h(this),
                        n = t.contents();
                    n.length ? n.wrapAll(e) : t.append(e)
                })
            },
            wrap: function (e) {
                var t = h.isFunction(e);
                return this.each(function (n) {
                    h(this).wrapAll(t ? e.call(this, n) : e)
                })
            },
            unwrap: function () {
                return this.parent().each(function () {
                    h.nodeName(this, "body") || h(this).replaceWith(this.childNodes)
                }).end()
            }
        }), h.expr.filters.hidden = function (e) {
            return e.offsetWidth <= 0 && e.offsetHeight <= 0 || !l.reliableHiddenOffsets() && "none" === (e.style && e.style.display || h.css(e, "display"))
        }, h.expr.filters.visible = function (e) {
            return !h.expr.filters.hidden(e)
        };
        var zn = /%20/g,
            Wn = /\[\]$/,
            Xn = /\r?\n/g,
            Vn = /^(?:submit|button|image|reset|file)$/i,
            $n = /^(?:input|select|textarea|keygen)/i;
        h.param = function (e, t) {
            var n, r = [],
                i = function (e, t) {
                    t = h.isFunction(t) ? t() : null == t ? "" : t, r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
                };
            if (void 0 === t && (t = h.ajaxSettings && h.ajaxSettings.traditional), h.isArray(e) || e.jquery && !h.isPlainObject(e)) h.each(e, function () {
                i(this.name, this.value)
            });
            else
                for (n in e) Jn(n, e[n], t, i);
            return r.join("&").replace(zn, "+")
        }, h.fn.extend({
            serialize: function () {
                return h.param(this.serializeArray())
            },
            serializeArray: function () {
                return this.map(function () {
                    var e = h.prop(this, "elements");
                    return e ? h.makeArray(e) : this
                }).filter(function () {
                    var e = this.type;
                    return this.name && !h(this).is(":disabled") && $n.test(this.nodeName) && !Vn.test(e) && (this.checked || !J.test(e))
                }).map(function (e, t) {
                    var n = h(this).val();
                    return null == n ? null : h.isArray(n) ? h.map(n, function (e) {
                        return {
                            name: t.name,
                            value: e.replace(Xn, "\r\n")
                        }
                    }) : {
                        name: t.name,
                        value: n.replace(Xn, "\r\n")
                    }
                }).get()
            }
        }), h.ajaxSettings.xhr = void 0 !== e.ActiveXObject ? function () {
            return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && Yn() || Zn()
        } : Yn;
        var Kn = 0,
            Qn = {},
            Gn = h.ajaxSettings.xhr();
        e.ActiveXObject && h(e).on("unload", function () {
            for (var e in Qn) Qn[e](void 0, !0)
        }), l.cors = !!Gn && "withCredentials" in Gn, Gn = l.ajax = !!Gn, Gn && h.ajaxTransport(function (e) {
            if (!e.crossDomain || l.cors) {
                var t;
                return {
                    send: function (n, r) {
                        var i, s = e.xhr(),
                            o = ++Kn;
                        if (s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields)
                            for (i in e.xhrFields) s[i] = e.xhrFields[i];
                        e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType), e.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest");
                        for (i in n) void 0 !== n[i] && s.setRequestHeader(i, n[i] + "");
                        s.send(e.hasContent && e.data || null), t = function (n, i) {
                            var u, a, f;
                            if (t && (i || 4 === s.readyState))
                                if (delete Qn[o], t = void 0, s.onreadystatechange = h.noop, i) 4 !== s.readyState && s.abort();
                                else {
                                    f = {}, u = s.status, "string" == typeof s.responseText && (f.text = s.responseText);
                                    try {
                                        a = s.statusText
                                    } catch (l) {
                                        a = ""
                                    }
                                    u || !e.isLocal || e.crossDomain ? 1223 === u && (u = 204) : u = f.text ? 200 : 404
                                } f && r(u, a, f, s.getAllResponseHeaders())
                        }, e.async ? 4 === s.readyState ? setTimeout(t) : s.onreadystatechange = Qn[o] = t : t()
                    },
                    abort: function () {
                        t && t(void 0, !0)
                    }
                }
            }
        }), h.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /(?:java|ecma)script/
            },
            converters: {
                "text script": function (e) {
                    return h.globalEval(e), e
                }
            }
        }), h.ajaxPrefilter("script", function (e) {
            void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1)
        }), h.ajaxTransport("script", function (e) {
            if (e.crossDomain) {
                var t, n = T.head || h("head")[0] || T.documentElement;
                return {
                    send: function (r, i) {
                        t = T.createElement("script"), t.async = !0, e.scriptCharset && (t.charset = e.scriptCharset), t.src = e.url, t.onload = t.onreadystatechange = function (e, n) {
                            (n || !t.readyState || /loaded|complete/.test(t.readyState)) && (t.onload = t.onreadystatechange = null, t.parentNode && t.parentNode.removeChild(t), t = null, n || i(200, "success"))
                        }, n.insertBefore(t, n.firstChild)
                    },
                    abort: function () {
                        t && t.onload(void 0, !0)
                    }
                }
            }
        });
        var er = [],
            tr = /(=)\?(?=&|$)|\?\?/;
        h.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function () {
                var e = er.pop() || h.expando + "_" + Sn++;
                return this[e] = !0, e
            }
        }), h.ajaxPrefilter("json jsonp", function (t, n, r) {
            var i, s, o, u = t.jsonp !== !1 && (tr.test(t.url) ? "url" : "string" == typeof t.data && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && tr.test(t.data) && "data");
            return u || "jsonp" === t.dataTypes[0] ? (i = t.jsonpCallback = h.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, u ? t[u] = t[u].replace(tr, "$1" + i) : t.jsonp !== !1 && (t.url += (xn.test(t.url) ? "&" : "?") + t.jsonp + "=" + i), t.converters["script json"] = function () {
                return o || h.error(i + " was not called"), o[0]
            }, t.dataTypes[0] = "json", s = e[i], e[i] = function () {
                o = arguments
            }, r.always(function () {
                e[i] = s, t[i] && (t.jsonpCallback = n.jsonpCallback, er.push(i)), o && h.isFunction(s) && s(o[0]), o = s = void 0
            }), "script") : void 0
        }), h.parseHTML = function (e, t, n) {
            if (!e || "string" != typeof e) return null;
            "boolean" == typeof t && (n = t, t = !1), t = t || T;
            var r = w.exec(e),
                i = !n && [];
            return r ? [t.createElement(r[1])] : (r = h.buildFragment([e], t, i), i && i.length && h(i).remove(), h.merge([], r.childNodes))
        };
        var nr = h.fn.load;
        h.fn.load = function (e, t, n) {
            if ("string" != typeof e && nr) return nr.apply(this, arguments);
            var r, i, s, o = this,
                u = e.indexOf(" ");
            return u >= 0 && (r = h.trim(e.slice(u, e.length)), e = e.slice(0, u)), h.isFunction(t) ? (n = t, t = void 0) : t && "object" == typeof t && (s = "POST"), o.length > 0 && h.ajax({
                url: e,
                type: s,
                dataType: "html",
                data: t
            }).done(function (e) {
                i = arguments, o.html(r ? h("<div>").append(h.parseHTML(e)).find(r) : e)
            }).complete(n && function (e, t) {
                o.each(n, i || [e.responseText, t, e])
            }), this
        }, h.expr.filters.animated = function (e) {
            return h.grep(h.timers, function (t) {
                return e === t.elem
            }).length
        };
        var rr = e.document.documentElement;
        h.offset = {
            setOffset: function (e, t, n) {
                var r, i, s, o, u, a, f, l = h.css(e, "position"),
                    c = h(e),
                    p = {};
                "static" === l && (e.style.position = "relative"), u = c.offset(), s = h.css(e, "top"), a = h.css(e, "left"), f = ("absolute" === l || "fixed" === l) && h.inArray("auto", [s, a]) > -1, f ? (r = c.position(), o = r.top, i = r.left) : (o = parseFloat(s) || 0, i = parseFloat(a) || 0), h.isFunction(t) && (t = t.call(e, n, u)), null != t.top && (p.top = t.top - u.top + o), null != t.left && (p.left = t.left - u.left + i), "using" in t ? t.using.call(e, p) : c.css(p)
            }
        }, h.fn.extend({
            offset: function (e) {
                if (arguments.length) return void 0 === e ? this : this.each(function (t) {
                    h.offset.setOffset(this, e, t)
                });
                var t, n, r = {
                        top: 0,
                        left: 0
                    },
                    i = this[0],
                    s = i && i.ownerDocument;
                if (s) return t = s.documentElement, h.contains(t, i) ? (typeof i.getBoundingClientRect !== B && (r = i.getBoundingClientRect()), n = ir(s), {
                    top: r.top + (n.pageYOffset || t.scrollTop) - (t.clientTop || 0),
                    left: r.left + (n.pageXOffset || t.scrollLeft) - (t.clientLeft || 0)
                }) : r
            },
            position: function () {
                if (this[0]) {
                    var e, t, n = {
                            top: 0,
                            left: 0
                        },
                        r = this[0];
                    return "fixed" === h.css(r, "position") ? t = r.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), h.nodeName(e[0], "html") || (n = e.offset()), n.top += h.css(e[0], "borderTopWidth", !0), n.left += h.css(e[0], "borderLeftWidth", !0)), {
                        top: t.top - n.top - h.css(r, "marginTop", !0),
                        left: t.left - n.left - h.css(r, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function () {
                return this.map(function () {
                    var e = this.offsetParent || rr;
                    while (e && !h.nodeName(e, "html") && "static" === h.css(e, "position")) e = e.offsetParent;
                    return e || rr
                })
            }
        }), h.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function (e, t) {
            var n = /Y/.test(t);
            h.fn[e] = function (r) {
                return $(this, function (e, r, i) {
                    var s = ir(e);
                    return void 0 === i ? s ? t in s ? s[t] : s.document.documentElement[r] : e[r] : void(s ? s.scrollTo(n ? h(s).scrollLeft() : i, n ? i : h(s).scrollTop()) : e[r] = i)
                }, e, r, arguments.length, null)
            }
        }), h.each(["top", "left"], function (e, t) {
            h.cssHooks[t] = jt(l.pixelPosition, function (e, n) {
                return n ? (n = Ht(e, t), Dt.test(n) ? h(e).position()[t] + "px" : n) : void 0
            })
        }), h.each({
            Height: "height",
            Width: "width"
        }, function (e, t) {
            h.each({
                padding: "inner" + e,
                content: t,
                "": "outer" + e
            }, function (n, r) {
                h.fn[r] = function (r, i) {
                    var s = arguments.length && (n || "boolean" != typeof r),
                        o = n || (r === !0 || i === !0 ? "margin" : "border");
                    return $(this, function (t, n, r) {
                        var i;
                        return h.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (i = t.documentElement, Math.max(t.body["scroll" + e], i["scroll" + e], t.body["offset" + e], i["offset" + e], i["client" + e])) : void 0 === r ? h.css(t, n, o) : h.style(t, n, r, o)
                    }, t, s ? r : void 0, s, null)
                }
            })
        }), h.fn.size = function () {
            return this.length
        }, h.fn.andSelf = h.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function () {
            return h
        });
        var sr = e.jQuery,
            or = e.$;
        return h.noConflict = function (t) {
            return e.$ === h && (e.$ = or), t && e.jQuery === h && (e.jQuery = sr), h
        }, typeof t === B && (e.jQuery = e.$ = h), h
    }),
    function (e, t) {
        if (typeof define == "function" && define.amd) define("backbone", ["underscore", "jquery", "exports"], function (n, r, i) {
            e.Backbone = t(e, i, n, r)
        });
        else if (typeof exports != "undefined") {
            var n = require("underscore");
            t(e, exports, n)
        } else e.Backbone = t(e, {}, e._, e.jQuery || e.Zepto || e.ender || e.$)
    }(this, function (e, t, n, r) {
        var i = e.Backbone,
            s = [],
            o = s.push,
            u = s.slice,
            a = s.splice;
        t.VERSION = "1.1.2", t.$ = r, t.noConflict = function () {
            return e.Backbone = i, this
        }, t.emulateHTTP = !1, t.emulateJSON = !1;
        var f = t.Events = {
                on: function (e, t, n) {
                    if (!c(this, "on", e, [t, n]) || !t) return this;
                    this._events || (this._events = {});
                    var r = this._events[e] || (this._events[e] = []);
                    return r.push({
                        callback: t,
                        context: n,
                        ctx: n || this
                    }), this
                },
                once: function (e, t, r) {
                    if (!c(this, "once", e, [t, r]) || !t) return this;
                    var i = this,
                        s = n.once(function () {
                            i.off(e, s), t.apply(this, arguments)
                        });
                    return s._callback = t, this.on(e, s, r)
                },
                off: function (e, t, r) {
                    var i, s, o, u, a, f, l, h;
                    if (!this._events || !c(this, "off", e, [t, r])) return this;
                    if (!e && !t && !r) return this._events = void 0, this;
                    u = e ? [e] : n.keys(this._events);
                    for (a = 0, f = u.length; a < f; a++) {
                        e = u[a];
                        if (o = this._events[e]) {
                            this._events[e] = i = [];
                            if (t || r)
                                for (l = 0, h = o.length; l < h; l++) s = o[l], (t && t !== s.callback && t !== s.callback._callback || r && r !== s.context) && i.push(s);
                            i.length || delete this._events[e]
                        }
                    }
                    return this
                },
                trigger: function (e) {
                    if (!this._events) return this;
                    var t = u.call(arguments, 1);
                    if (!c(this, "trigger", e, t)) return this;
                    var n = this._events[e],
                        r = this._events.all;
                    return n && h(n, t), r && h(r, arguments), this
                },
                stopListening: function (e, t, r) {
                    var i = this._listeningTo;
                    if (!i) return this;
                    var s = !t && !r;
                    !r && typeof t == "object" && (r = this), e && ((i = {})[e._listenId] = e);
                    for (var o in i) e = i[o], e.off(t, r, this), (s || n.isEmpty(e._events)) && delete this._listeningTo[o];
                    return this
                }
            },
            l = /\s+/,
            c = function (e, t, n, r) {
                if (!n) return !0;
                if (typeof n == "object") {
                    for (var i in n) e[t].apply(e, [i, n[i]].concat(r));
                    return !1
                }
                if (l.test(n)) {
                    var s = n.split(l);
                    for (var o = 0, u = s.length; o < u; o++) e[t].apply(e, [s[o]].concat(r));
                    return !1
                }
                return !0
            },
            h = function (e, t) {
                var n, r = -1,
                    i = e.length,
                    s = t[0],
                    o = t[1],
                    u = t[2];
                switch (t.length) {
                    case 0:
                        while (++r < i)(n = e[r]).callback.call(n.ctx);
                        return;
                    case 1:
                        while (++r < i)(n = e[r]).callback.call(n.ctx, s);
                        return;
                    case 2:
                        while (++r < i)(n = e[r]).callback.call(n.ctx, s, o);
                        return;
                    case 3:
                        while (++r < i)(n = e[r]).callback.call(n.ctx, s, o, u);
                        return;
                    default:
                        while (++r < i)(n = e[r]).callback.apply(n.ctx, t);
                        return
                }
            },
            p = {
                listenTo: "on",
                listenToOnce: "once"
            };
        n.each(p, function (e, t) {
            f[t] = function (t, r, i) {
                var s = this._listeningTo || (this._listeningTo = {}),
                    o = t._listenId || (t._listenId = n.uniqueId("l"));
                return s[o] = t, !i && typeof r == "object" && (i = this), t[e](r, i, this), this
            }
        }), f.bind = f.on, f.unbind = f.off, n.extend(t, f);
        var d = t.Model = function (e, t) {
            var r = e || {};
            t || (t = {}), this.cid = n.uniqueId("c"), this.attributes = {}, t.collection && (this.collection = t.collection), t.parse && (r = this.parse(r, t) || {}), r = n.defaults({}, r, n.result(this, "defaults")), this.set(r, t), this.changed = {}, this.initialize.apply(this, arguments)
        };
        n.extend(d.prototype, f, {
            changed: null,
            validationError: null,
            idAttribute: "id",
            initialize: function () {},
            toJSON: function (e) {
                return n.clone(this.attributes)
            },
            sync: function () {
                return t.sync.apply(this, arguments)
            },
            get: function (e) {
                return this.attributes[e]
            },
            escape: function (e) {
                return n.escape(this.get(e))
            },
            has: function (e) {
                return this.get(e) != null
            },
            set: function (e, t, r) {
                var i, s, o, u, a, f, l, c;
                if (e == null) return this;
                typeof e == "object" ? (s = e, r = t) : (s = {})[e] = t, r || (r = {});
                if (!this._validate(s, r)) return !1;
                o = r.unset, a = r.silent, u = [], f = this._changing, this._changing = !0, f || (this._previousAttributes = n.clone(this.attributes), this.changed = {}), c = this.attributes, l = this._previousAttributes, this.idAttribute in s && (this.id = s[this.idAttribute]);
                for (i in s) t = s[i], n.isEqual(c[i], t) || u.push(i), n.isEqual(l[i], t) ? delete this.changed[i] : this.changed[i] = t, o ? delete c[i] : c[i] = t;
                if (!a) {
                    u.length && (this._pending = r);
                    for (var h = 0, p = u.length; h < p; h++) this.trigger("change:" + u[h], this, c[u[h]], r)
                }
                if (f) return this;
                if (!a)
                    while (this._pending) r = this._pending, this._pending = !1, this.trigger("change", this, r);
                return this._pending = !1, this._changing = !1, this
            },
            unset: function (e, t) {
                return this.set(e, void 0, n.extend({}, t, {
                    unset: !0
                }))
            },
            clear: function (e) {
                var t = {};
                for (var r in this.attributes) t[r] = void 0;
                return this.set(t, n.extend({}, e, {
                    unset: !0
                }))
            },
            hasChanged: function (e) {
                return e == null ? !n.isEmpty(this.changed) : n.has(this.changed, e)
            },
            changedAttributes: function (e) {
                if (!e) return this.hasChanged() ? n.clone(this.changed) : !1;
                var t, r = !1,
                    i = this._changing ? this._previousAttributes : this.attributes;
                for (var s in e) {
                    if (n.isEqual(i[s], t = e[s])) continue;
                    (r || (r = {}))[s] = t
                }
                return r
            },
            previous: function (e) {
                return e == null || !this._previousAttributes ? null : this._previousAttributes[e]
            },
            previousAttributes: function () {
                return n.clone(this._previousAttributes)
            },
            fetch: function (e) {
                e = e ? n.clone(e) : {}, e.parse === void 0 && (e.parse = !0);
                var t = this,
                    r = e.success;
                return e.success = function (n) {
                    if (!t.set(t.parse(n, e), e)) return !1;
                    r && r(t, n, e), t.trigger("sync", t, n, e)
                }, I(this, e), this.sync("read", this, e)
            },
            save: function (e, t, r) {
                var i, s, o, u = this.attributes;
                e == null || typeof e == "object" ? (i = e, r = t) : (i = {})[e] = t, r = n.extend({
                    validate: !0
                }, r);
                if (i && !r.wait) {
                    if (!this.set(i, r)) return !1
                } else if (!this._validate(i, r)) return !1;
                i && r.wait && (this.attributes = n.extend({}, u, i)), r.parse === void 0 && (r.parse = !0);
                var a = this,
                    f = r.success;
                return r.success = function (e) {
                    a.attributes = u;
                    var t = a.parse(e, r);
                    r.wait && (t = n.extend(i || {}, t));
                    if (n.isObject(t) && !a.set(t, r)) return !1;
                    f && f(a, e, r), a.trigger("sync", a, e, r)
                }, I(this, r), s = this.isNew() ? "create" : r.patch ? "patch" : "update", s === "patch" && (r.attrs = i), o = this.sync(s, this, r), i && r.wait && (this.attributes = u), o
            },
            destroy: function (e) {
                e = e ? n.clone(e) : {};
                var t = this,
                    r = e.success,
                    i = function () {
                        t.trigger("destroy", t, t.collection, e)
                    };
                e.success = function (n) {
                    (e.wait || t.isNew()) && i(), r && r(t, n, e), t.isNew() || t.trigger("sync", t, n, e)
                };
                if (this.isNew()) return e.success(), !1;
                I(this, e);
                var s = this.sync("delete", this, e);
                return e.wait || i(), s
            },
            url: function () {
                var e = n.result(this, "urlRoot") || n.result(this.collection, "url") || F();
                return this.isNew() ? e : e.replace(/([^\/])$/, "$1/") + encodeURIComponent(this.id)
            },
            parse: function (e, t) {
                return e
            },
            clone: function () {
                return new this.constructor(this.attributes)
            },
            isNew: function () {
                return !this.has(this.idAttribute)
            },
            isValid: function (e) {
                return this._validate({}, n.extend(e || {}, {
                    validate: !0
                }))
            },
            _validate: function (e, t) {
                if (!t.validate || !this.validate) return !0;
                e = n.extend({}, this.attributes, e);
                var r = this.validationError = this.validate(e, t) || null;
                return r ? (this.trigger("invalid", this, r, n.extend(t, {
                    validationError: r
                })), !1) : !0
            }
        });
        var v = ["keys", "values", "pairs", "invert", "pick", "omit"];
        n.each(v, function (e) {
            d.prototype[e] = function () {
                var t = u.call(arguments);
                return t.unshift(this.attributes), n[e].apply(n, t)
            }
        });
        var m = t.Collection = function (e, t) {
                t || (t = {}), t.model && (this.model = t.model), t.comparator !== void 0 && (this.comparator = t.comparator), this._reset(), this.initialize.apply(this, arguments), e && this.reset(e, n.extend({
                    silent: !0
                }, t))
            },
            g = {
                add: !0,
                remove: !0,
                merge: !0
            },
            y = {
                add: !0,
                remove: !1
            };
        n.extend(m.prototype, f, {
            model: d,
            initialize: function () {},
            toJSON: function (e) {
                return this.map(function (t) {
                    return t.toJSON(e)
                })
            },
            sync: function () {
                return t.sync.apply(this, arguments)
            },
            add: function (e, t) {
                return this.set(e, n.extend({
                    merge: !1
                }, t, y))
            },
            remove: function (e, t) {
                var r = !n.isArray(e);
                e = r ? [e] : n.clone(e), t || (t = {});
                var i, s, o, u;
                for (i = 0, s = e.length; i < s; i++) {
                    u = e[i] = this.get(e[i]);
                    if (!u) continue;
                    delete this._byId[u.id], delete this._byId[u.cid], o = this.indexOf(u), this.models.splice(o, 1), this.length--, t.silent || (t.index = o, u.trigger("remove", u, this, t)), this._removeReference(u, t)
                }
                return r ? e[0] : e
            },
            set: function (e, t) {
                t = n.defaults({}, t, g), t.parse && (e = this.parse(e, t));
                var r = !n.isArray(e);
                e = r ? e ? [e] : [] : n.clone(e);
                var i, s, o, u, a, f, l, c = t.at,
                    h = this.model,
                    p = this.comparator && c == null && t.sort !== !1,
                    v = n.isString(this.comparator) ? this.comparator : null,
                    m = [],
                    y = [],
                    b = {},
                    w = t.add,
                    E = t.merge,
                    S = t.remove,
                    x = !p && w && S ? [] : !1;
                for (i = 0, s = e.length; i < s; i++) {
                    a = e[i] || {}, a instanceof d ? o = u = a : o = a[h.prototype.idAttribute || "id"];
                    if (f = this.get(o)) S && (b[f.cid] = !0), E && (a = a === u ? u.attributes : a, t.parse && (a = f.parse(a, t)), f.set(a, t), p && !l && f.hasChanged(v) && (l = !0)), e[i] = f;
                    else if (w) {
                        u = e[i] = this._prepareModel(a, t);
                        if (!u) continue;
                        m.push(u), this._addReference(u, t)
                    }
                    u = f || u, x && (u.isNew() || !b[u.id]) && x.push(u), b[u.id] = !0
                }
                if (S) {
                    for (i = 0, s = this.length; i < s; ++i) b[(u = this.models[i]).cid] || y.push(u);
                    y.length && this.remove(y, t)
                }
                if (m.length || x && x.length) {
                    p && (l = !0), this.length += m.length;
                    if (c != null)
                        for (i = 0, s = m.length; i < s; i++) this.models.splice(c + i, 0, m[i]);
                    else {
                        x && (this.models.length = 0);
                        var T = x || m;
                        for (i = 0, s = T.length; i < s; i++) this.models.push(T[i])
                    }
                }
                l && this.sort({
                    silent: !0
                });
                if (!t.silent) {
                    for (i = 0, s = m.length; i < s; i++)(u = m[i]).trigger("add", u, this, t);
                    (l || x && x.length) && this.trigger("sort", this, t)
                }
                return r ? e[0] : e
            },
            reset: function (e, t) {
                t || (t = {});
                for (var r = 0, i = this.models.length; r < i; r++) this._removeReference(this.models[r], t);
                return t.previousModels = this.models, this._reset(), e = this.add(e, n.extend({
                    silent: !0
                }, t)), t.silent || this.trigger("reset", this, t), e
            },
            push: function (e, t) {
                return this.add(e, n.extend({
                    at: this.length
                }, t))
            },
            pop: function (e) {
                var t = this.at(this.length - 1);
                return this.remove(t, e), t
            },
            unshift: function (e, t) {
                return this.add(e, n.extend({
                    at: 0
                }, t))
            },
            shift: function (e) {
                var t = this.at(0);
                return this.remove(t, e), t
            },
            slice: function () {
                return u.apply(this.models, arguments)
            },
            get: function (e) {
                return e == null ? void 0 : this._byId[e] || this._byId[e.id] || this._byId[e.cid]
            },
            at: function (e) {
                return this.models[e]
            },
            where: function (e, t) {
                return n.isEmpty(e) ? t ? void 0 : [] : this[t ? "find" : "filter"](function (t) {
                    for (var n in e)
                        if (e[n] !== t.get(n)) return !1;
                    return !0
                })
            },
            findWhere: function (e) {
                return this.where(e, !0)
            },
            sort: function (e) {
                if (!this.comparator) throw new Error("Cannot sort a set without a comparator");
                return e || (e = {}), n.isString(this.comparator) || this.comparator.length === 1 ? this.models = this.sortBy(this.comparator, this) : this.models.sort(n.bind(this.comparator, this)), e.silent || this.trigger("sort", this, e), this
            },
            pluck: function (e) {
                return n.invoke(this.models, "get", e)
            },
            fetch: function (e) {
                e = e ? n.clone(e) : {}, e.parse === void 0 && (e.parse = !0);
                var t = e.success,
                    r = this;
                return e.success = function (n) {
                    var i = e.reset ? "reset" : "set";
                    r[i](n, e), t && t(r, n, e), r.trigger("sync", r, n, e)
                }, I(this, e), this.sync("read", this, e)
            },
            create: function (e, t) {
                t = t ? n.clone(t) : {};
                if (!(e = this._prepareModel(e, t))) return !1;
                t.wait || this.add(e, t);
                var r = this,
                    i = t.success;
                return t.success = function (e, n) {
                    t.wait && r.add(e, t), i && i(e, n, t)
                }, e.save(null, t), e
            },
            parse: function (e, t) {
                return e
            },
            clone: function () {
                return new this.constructor(this.models)
            },
            _reset: function () {
                this.length = 0, this.models = [], this._byId = {}
            },
            _prepareModel: function (e, t) {
                if (e instanceof d) return e;
                t = t ? n.clone(t) : {}, t.collection = this;
                var r = new this.model(e, t);
                return r.validationError ? (this.trigger("invalid", this, r.validationError, t), !1) : r
            },
            _addReference: function (e, t) {
                this._byId[e.cid] = e, e.id != null && (this._byId[e.id] = e), e.collection || (e.collection = this), e.on("all", this._onModelEvent, this)
            },
            _removeReference: function (e, t) {
                this === e.collection && delete e.collection, e.off("all", this._onModelEvent, this)
            },
            _onModelEvent: function (e, t, n, r) {
                if ((e === "add" || e === "remove") && n !== this) return;
                e === "destroy" && this.remove(t, r), t && e === "change:" + t.idAttribute && (delete this._byId[t.previous(t.idAttribute)], t.id != null && (this._byId[t.id] = t)), this.trigger.apply(this, arguments)
            }
        });
        var b = ["forEach", "each", "map", "collect", "reduce", "foldl", "inject", "reduceRight", "foldr", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "max", "min", "toArray", "size", "first", "head", "take", "initial", "rest", "tail", "drop", "last", "without", "difference", "indexOf", "shuffle", "lastIndexOf", "isEmpty", "chain", "sample"];
        n.each(b, function (e) {
            m.prototype[e] = function () {
                var t = u.call(arguments);
                return t.unshift(this.models), n[e].apply(n, t)
            }
        });
        var w = ["groupBy", "countBy", "sortBy", "indexBy"];
        n.each(w, function (e) {
            m.prototype[e] = function (t, r) {
                var i = n.isFunction(t) ? t : function (e) {
                    return e.get(t)
                };
                return n[e](this.models, i, r)
            }
        });
        var E = t.View = function (e) {
                this.cid = n.uniqueId("view"), e || (e = {}), n.extend(this, n.pick(e, x)), this._ensureElement(), this.initialize.apply(this, arguments), this.delegateEvents()
            },
            S = /^(\S+)\s*(.*)$/,
            x = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
        n.extend(E.prototype, f, {
            tagName: "div",
            $: function (e) {
                return this.$el.find(e)
            },
            initialize: function () {},
            render: function () {
                return this
            },
            remove: function () {
                return this.$el.remove(), this.stopListening(), this
            },
            setElement: function (e, n) {
                return this.$el && this.undelegateEvents(), this.$el = e instanceof t.$ ? e : t.$(e), this.el = this.$el[0], n !== !1 && this.delegateEvents(), this
            },
            delegateEvents: function (e) {
                if (!e && !(e = n.result(this, "events"))) return this;
                this.undelegateEvents();
                for (var t in e) {
                    var r = e[t];
                    n.isFunction(r) || (r = this[e[t]]);
                    if (!r) continue;
                    var i = t.match(S),
                        s = i[1],
                        o = i[2];
                    r = n.bind(r, this), s += ".delegateEvents" + this.cid, o === "" ? this.$el.on(s, r) : this.$el.on(s, o, r)
                }
                return this
            },
            undelegateEvents: function () {
                return this.$el.off(".delegateEvents" + this.cid), this
            },
            _ensureElement: function () {
                if (!this.el) {
                    var e = n.extend({}, n.result(this, "attributes"));
                    this.id && (e.id = n.result(this, "id")), this.className && (e["class"] = n.result(this, "className"));
                    var r = t.$("<" + n.result(this, "tagName") + ">").attr(e);
                    this.setElement(r, !1)
                } else this.setElement(n.result(this, "el"), !1)
            }
        }), t.sync = function (e, r, i) {
            var s = N[e];
            n.defaults(i || (i = {}), {
                emulateHTTP: t.emulateHTTP,
                emulateJSON: t.emulateJSON
            });
            var o = {
                type: s,
                dataType: "json"
            };
            i.url || (o.url = n.result(r, "url") || F()), i.data == null && r && (e === "create" || e === "update" || e === "patch") && (o.contentType = "application/json", o.data = JSON.stringify(i.attrs || r.toJSON(i))), i.emulateJSON && (o.contentType = "application/x-www-form-urlencoded", o.data = o.data ? {
                model: o.data
            } : {});
            if (i.emulateHTTP && (s === "PUT" || s === "DELETE" || s === "PATCH")) {
                o.type = "POST", i.emulateJSON && (o.data._method = s);
                var u = i.beforeSend;
                i.beforeSend = function (e) {
                    e.setRequestHeader("X-HTTP-Method-Override", s);
                    if (u) return u.apply(this, arguments)
                }
            }
            o.type !== "GET" && !i.emulateJSON && (o.processData = !1), o.type === "PATCH" && T && (o.xhr = function () {
                return new ActiveXObject("Microsoft.XMLHTTP")
            });
            var a = i.xhr = t.ajax(n.extend(o, i));
            return r.trigger("request", r, a, i), a
        };
        var T = typeof window != "undefined" && !!window.ActiveXObject && (!window.XMLHttpRequest || !(new XMLHttpRequest).dispatchEvent),
            N = {
                create: "POST",
                update: "PUT",
                patch: "PATCH",
                "delete": "DELETE",
                read: "GET"
            };
        t.ajax = function () {
            return t.$.ajax.apply(t.$, arguments)
        };
        var C = t.Router = function (e) {
                e || (e = {}), e.routes && (this.routes = e.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
            },
            k = /\((.*?)\)/g,
            L = /(\(\?)?:\w+/g,
            A = /\*\w+/g,
            O = /[\-{}\[\]+?.,\\\^$|#\s]/g;
        n.extend(C.prototype, f, {
            initialize: function () {},
            route: function (e, r, i) {
                n.isRegExp(e) || (e = this._routeToRegExp(e)), n.isFunction(r) && (i = r, r = ""), i || (i = this[r]);
                var s = this;
                return t.history.route(e, function (n) {
                    var o = s._extractParameters(e, n);
                    s.execute(i, o), s.trigger.apply(s, ["route:" + r].concat(o)), s.trigger("route", r, o), t.history.trigger("route", s, r, o)
                }), this
            },
            execute: function (e, t) {
                e && e.apply(this, t)
            },
            navigate: function (e, n) {
                return t.history.navigate(e, n), this
            },
            _bindRoutes: function () {
                if (!this.routes) return;
                this.routes = n.result(this, "routes");
                var e, t = n.keys(this.routes);
                while ((e = t.pop()) != null) this.route(e, this.routes[e])
            },
            _routeToRegExp: function (e) {
                return e = e.replace(O, "\\$&").replace(k, "(?:$1)?").replace(L, function (e, t) {
                    return t ? e : "([^/?]+)"
                }).replace(A, "([^?]*?)"), new RegExp("^" + e + "(?:\\?([\\s\\S]*))?$")
            },
            _extractParameters: function (e, t) {
                var r = e.exec(t).slice(1);
                return n.map(r, function (e, t) {
                    return t === r.length - 1 ? e || null : e ? decodeURIComponent(e) : null
                })
            }
        });
        var M = t.History = function () {
                this.handlers = [], n.bindAll(this, "checkUrl"), typeof window != "undefined" && (this.location = window.location, this.history = window.history)
            },
            _ = /^[#\/]|\s+$/g,
            D = /^\/+|\/+$/g,
            P = /msie [\w.]+/,
            H = /\/$/,
            B = /#.*$/;
        M.started = !1, n.extend(M.prototype, f, {
            interval: 50,
            atRoot: function () {
                return this.location.pathname.replace(/[^\/]$/, "$&/") === this.root
            },
            getHash: function (e) {
                var t = (e || this).location.href.match(/#(.*)$/);
                return t ? t[1] : ""
            },
            getFragment: function (e, t) {
                if (e == null)
                    if (this._hasPushState || !this._wantsHashChange || t) {
                        e = decodeURI(this.location.pathname + this.location.search);
                        var n = this.root.replace(H, "");
                        e.indexOf(n) || (e = e.slice(n.length))
                    } else e = this.getHash();
                return e.replace(_, "")
            },
            start: function (e) {
                if (M.started) throw new Error("Backbone.history has already been started");
                M.started = !0, this.options = n.extend({
                    root: "/"
                }, this.options, e), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.options.pushState && this.history && this.history.pushState);
                var r = this.getFragment(),
                    i = document.documentMode,
                    s = P.exec(navigator.userAgent.toLowerCase()) && (!i || i <= 7);
                this.root = ("/" + this.root + "/").replace(D, "/");
                if (s && this._wantsHashChange) {
                    var o = t.$('<iframe src="javascript:0" tabindex="-1">');
                    this.iframe = o.hide().appendTo("body")[0].contentWindow, this.navigate(r)
                }
                this._hasPushState ? t.$(window).on("popstate", this.checkUrl) : this._wantsHashChange && "onhashchange" in window && !s ? t.$(window).on("hashchange", this.checkUrl) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), this.fragment = r;
                var u = this.location;
                if (this._wantsHashChange && this._wantsPushState) {
                    if (!this._hasPushState && !this.atRoot()) return this.fragment = this.getFragment(null, !0), this.location.replace(this.root + "#" + this.fragment), !0;
                    this._hasPushState && this.atRoot() && u.hash && (this.fragment = this.getHash().replace(_, ""), this.history.replaceState({}, document.title, this.root + this.fragment))
                }
                if (!this.options.silent) return this.loadUrl()
            },
            stop: function () {
                t.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl), this._checkUrlInterval && clearInterval(this._checkUrlInterval), M.started = !1
            },
            route: function (e, t) {
                this.handlers.unshift({
                    route: e,
                    callback: t
                })
            },
            checkUrl: function (e) {
                var t = this.getFragment();
                t === this.fragment && this.iframe && (t = this.getFragment(this.getHash(this.iframe)));
                if (t === this.fragment) return !1;
                this.iframe && this.navigate(t), this.loadUrl()
            },
            loadUrl: function (e) {
                return e = this.fragment = this.getFragment(e), n.any(this.handlers, function (t) {
                    if (t.route.test(e)) return t.callback(e), !0
                })
            },
            navigate: function (e, t) {
                if (!M.started) return !1;
                if (!t || t === !0) t = {
                    trigger: !!t
                };
                var n = this.root + (e = this.getFragment(e || ""));
                e = e.replace(B, "");
                if (this.fragment === e) return;
                this.fragment = e, e === "" && n !== "/" && (n = n.slice(0, -1));
                if (this._hasPushState) this.history[t.replace ? "replaceState" : "pushState"]({}, document.title, n);
                else {
                    if (!this._wantsHashChange) return this.location.assign(n);
                    this._updateHash(this.location, e, t.replace), this.iframe && e !== this.getFragment(this.getHash(this.iframe)) && (t.replace || this.iframe.document.open().close(), this._updateHash(this.iframe.location, e, t.replace))
                }
                if (t.trigger) return this.loadUrl(e)
            },
            _updateHash: function (e, t, n) {
                if (n) {
                    var r = e.href.replace(/(javascript:|#).*$/, "");
                    e.replace(r + "#" + t)
                } else e.hash = "#" + t
            }
        }), t.history = new M;
        var j = function (e, t) {
            var r = this,
                i;
            e && n.has(e, "constructor") ? i = e.constructor : i = function () {
                return r.apply(this, arguments)
            }, n.extend(i, r, t);
            var s = function () {
                this.constructor = i
            };
            return s.prototype = r.prototype, i.prototype = new s, e && n.extend(i.prototype, e), i.__super__ = r.prototype, i
        };
        d.extend = m.extend = C.extend = E.extend = M.extend = j;
        var F = function () {
                throw new Error('A "url" property or function must be specified')
            },
            I = function (e, t) {
                var n = t.error;
                t.error = function (r) {
                    n && n(e, r, t), e.trigger("error", e, r, t)
                }
            };
        return t
    }), ! function (e, t) {
        if ("function" == typeof define && define.amd) define("lib/marionette", ["backbone", "underscore"], function (n, r) {
            return e.Marionette = t(e, n, r)
        });
        else if ("undefined" != typeof exports) {
            var n = require("backbone"),
                r = require("underscore");
            module.exports = t(e, n, r)
        } else e.Marionette = t(e, e.Backbone, e._)
    }(this, function (e, t, n) {
        ! function (e, t) {
            var n = e.ChildViewContainer;
            return e.ChildViewContainer = function (e, t) {
                var n = function (e) {
                    this._views = {}, this._indexByModel = {}, this._indexByCustom = {}, this._updateLength(), t.each(e, this.add, this)
                };
                t.extend(n.prototype, {
                    add: function (e, t) {
                        var n = e.cid;
                        return this._views[n] = e, e.model && (this._indexByModel[e.model.cid] = n), t && (this._indexByCustom[t] = n), this._updateLength(), this
                    },
                    findByModel: function (e) {
                        return this.findByModelCid(e.cid)
                    },
                    findByModelCid: function (e) {
                        var t = this._indexByModel[e];
                        return this.findByCid(t)
                    },
                    findByCustom: function (e) {
                        var t = this._indexByCustom[e];
                        return this.findByCid(t)
                    },
                    findByIndex: function (e) {
                        return t.values(this._views)[e]
                    },
                    findByCid: function (e) {
                        return this._views[e]
                    },
                    remove: function (e) {
                        var n = e.cid;
                        return e.model && delete this._indexByModel[e.model.cid], t.any(this._indexByCustom, function (e, t) {
                            return e === n ? (delete this._indexByCustom[t], !0) : void 0
                        }, this), delete this._views[n], this._updateLength(), this
                    },
                    call: function (e) {
                        this.apply(e, t.tail(arguments))
                    },
                    apply: function (e, n) {
                        t.each(this._views, function (r) {
                            t.isFunction(r[e]) && r[e].apply(r, n || [])
                        })
                    },
                    _updateLength: function () {
                        this.length = t.size(this._views)
                    }
                });
                var r = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck"];
                return t.each(r, function (e) {
                    n.prototype[e] = function () {
                        var n = t.values(this._views),
                            r = [n].concat(t.toArray(arguments));
                        return t[e].apply(t, r)
                    }
                }), n
            }(e, t), e.ChildViewContainer.VERSION = "0.1.4", e.ChildViewContainer.noConflict = function () {
                return e.ChildViewContainer = n, this
            }, e.ChildViewContainer
        }(t, n),
        function (e, t) {
            var n = e.Wreqr,
                r = e.Wreqr = {};
            return e.Wreqr.VERSION = "1.3.1", e.Wreqr.noConflict = function () {
                return e.Wreqr = n, this
            }, r.Handlers = function (e, t) {
                var n = function (e) {
                    this.options = e, this._wreqrHandlers = {}, t.isFunction(this.initialize) && this.initialize(e)
                };
                return n.extend = e.Model.extend, t.extend(n.prototype, e.Events, {
                    setHandlers: function (e) {
                        t.each(e, function (e, n) {
                            var r = null;
                            t.isObject(e) && !t.isFunction(e) && (r = e.context, e = e.callback), this.setHandler(n, e, r)
                        }, this)
                    },
                    setHandler: function (e, t, n) {
                        var r = {
                            callback: t,
                            context: n
                        };
                        this._wreqrHandlers[e] = r, this.trigger("handler:add", e, t, n)
                    },
                    hasHandler: function (e) {
                        return !!this._wreqrHandlers[e]
                    },
                    getHandler: function (e) {
                        var t = this._wreqrHandlers[e];
                        if (t) return function () {
                            var e = Array.prototype.slice.apply(arguments);
                            return t.callback.apply(t.context, e)
                        }
                    },
                    removeHandler: function (e) {
                        delete this._wreqrHandlers[e]
                    },
                    removeAllHandlers: function () {
                        this._wreqrHandlers = {}
                    }
                }), n
            }(e, t), r.CommandStorage = function () {
                var n = function (e) {
                    this.options = e, this._commands = {}, t.isFunction(this.initialize) && this.initialize(e)
                };
                return t.extend(n.prototype, e.Events, {
                    getCommands: function (e) {
                        var t = this._commands[e];
                        return t || (t = {
                            command: e,
                            instances: []
                        }, this._commands[e] = t), t
                    },
                    addCommand: function (e, t) {
                        var n = this.getCommands(e);
                        n.instances.push(t)
                    },
                    clearCommands: function (e) {
                        var t = this.getCommands(e);
                        t.instances = []
                    }
                }), n
            }(), r.Commands = function (e) {
                return e.Handlers.extend({
                    storageType: e.CommandStorage,
                    constructor: function (t) {
                        this.options = t || {}, this._initializeStorage(this.options), this.on("handler:add", this._executeCommands, this);
                        var n = Array.prototype.slice.call(arguments);
                        e.Handlers.prototype.constructor.apply(this, n)
                    },
                    execute: function (e, t) {
                        e = arguments[0], t = Array.prototype.slice.call(arguments, 1), this.hasHandler(e) ? this.getHandler(e).apply(this, t) : this.storage.addCommand(e, t)
                    },
                    _executeCommands: function (e, n, r) {
                        var i = this.storage.getCommands(e);
                        t.each(i.instances, function (e) {
                            n.apply(r, e)
                        }), this.storage.clearCommands(e)
                    },
                    _initializeStorage: function (e) {
                        var n, r = e.storageType || this.storageType;
                        n = t.isFunction(r) ? new r : r, this.storage = n
                    }
                })
            }(r), r.RequestResponse = function (e) {
                return e.Handlers.extend({
                    request: function () {
                        var e = arguments[0],
                            t = Array.prototype.slice.call(arguments, 1);
                        return this.hasHandler(e) ? this.getHandler(e).apply(this, t) : void 0
                    }
                })
            }(r), r.EventAggregator = function (e, t) {
                var n = function () {};
                return n.extend = e.Model.extend, t.extend(n.prototype, e.Events), n
            }(e, t), r.Channel = function () {
                var n = function (t) {
                    this.vent = new e.Wreqr.EventAggregator, this.reqres = new e.Wreqr.RequestResponse, this.commands = new e.Wreqr.Commands, this.channelName = t
                };
                return t.extend(n.prototype, {
                    reset: function () {
                        return this.vent.off(), this.vent.stopListening(), this.reqres.removeAllHandlers(), this.commands.removeAllHandlers(), this
                    },
                    connectEvents: function (e, t) {
                        return this._connect("vent", e, t), this
                    },
                    connectCommands: function (e, t) {
                        return this._connect("commands", e, t), this
                    },
                    connectRequests: function (e, t) {
                        return this._connect("reqres", e, t), this
                    },
                    _connect: function (e, n, r) {
                        if (n) {
                            r = r || this;
                            var i = "vent" === e ? "on" : "setHandler";
                            t.each(n, function (n, s) {
                                this[e][i](s, t.bind(n, r))
                            }, this)
                        }
                    }
                }), n
            }(r), r.radio = function (e) {
                var n = function () {
                    this._channels = {}, this.vent = {}, this.commands = {}, this.reqres = {}, this._proxyMethods()
                };
                t.extend(n.prototype, {
                    channel: function (e) {
                        if (!e) throw new Error("Channel must receive a name");
                        return this._getChannel(e)
                    },
                    _getChannel: function (t) {
                        var n = this._channels[t];
                        return n || (n = new e.Channel(t), this._channels[t] = n), n
                    },
                    _proxyMethods: function () {
                        t.each(["vent", "commands", "reqres"], function (e) {
                            t.each(r[e], function (t) {
                                this[e][t] = i(this, e, t)
                            }, this)
                        }, this)
                    }
                });
                var r = {
                        vent: ["on", "off", "trigger", "once", "stopListening", "listenTo", "listenToOnce"],
                        commands: ["execute", "setHandler", "setHandlers", "removeHandler", "removeAllHandlers"],
                        reqres: ["request", "setHandler", "setHandlers", "removeHandler", "removeAllHandlers"]
                    },
                    i = function (e, t, n) {
                        return function (r) {
                            var i = e._getChannel(r)[t],
                                s = Array.prototype.slice.call(arguments, 1);
                            return i[n].apply(i, s)
                        }
                    };
                return new n
            }(r), e.Wreqr
        }(t, n);
        var r = e.Marionette,
            i = t.Marionette = {};
        i.VERSION = "2.2.0", i.noConflict = function () {
            return e.Marionette = r, this
        }, t.Marionette = i, i.Deferred = t.$.Deferred;
        var s = Array.prototype.slice;
        i.extend = t.Model.extend, i.getOption = function (e, t) {
                if (e && t) {
                    var n;
                    return n = e.options && void 0 !== e.options[t] ? e.options[t] : e[t]
                }
            }, i.proxyGetOption = function (e) {
                return i.getOption(this, e)
            }, i.normalizeMethods = function (e) {
                var t = {};
                return n.each(e, function (e, r) {
                    n.isFunction(e) || (e = this[e]), e && (t[r] = e)
                }, this), t
            }, i.normalizeUIString = function (e, t) {
                return e.replace(/@ui\.[a-zA-Z_$0-9]*/g, function (e) {
                    return t[e.slice(4)]
                })
            }, i.normalizeUIKeys = function (e, t) {
                return "undefined" != typeof e ? (e = n.clone(e), n.each(n.keys(e), function (n) {
                    var r = i.normalizeUIString(n, t);
                    r !== n && (e[r] = e[n], delete e[n])
                }), e) : void 0
            }, i.normalizeUIValues = function (e, t) {
                return "undefined" != typeof e ? (n.each(e, function (r, s) {
                    n.isString(r) && (e[s] = i.normalizeUIString(r, t))
                }), e) : void 0
            }, i.actAsCollection = function (e, t) {
                var r = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck"];
                n.each(r, function (r) {
                    e[r] = function () {
                        var e = n.values(n.result(this, t)),
                            i = [e].concat(n.toArray(arguments));
                        return n[r].apply(n, i)
                    }
                })
            }, i.triggerMethod = function (e) {
                function t(e, t, n) {
                    return n.toUpperCase()
                }
                var r, i = /(^|:)(\w)/gi,
                    s = "on" + e.replace(i, t),
                    o = this[s];
                return n.isFunction(o) && (r = o.apply(this, n.tail(arguments))), n.isFunction(this.trigger) && this.trigger.apply(this, arguments), r
            }, i.triggerMethodOn = function (e, t) {
                var r, s = n.tail(arguments, 2);
                return r = n.isFunction(e.triggerMethod) ? e.triggerMethod : i.triggerMethod, r.apply(e, [t].concat(s))
            }, i.MonitorDOMRefresh = function (e) {
                function r(e) {
                    e._isShown = !0, s(e)
                }

                function i(e) {
                    e._isRendered = !0, s(e)
                }

                function s(e) {
                    e._isShown && e._isRendered && o(e) && n.isFunction(e.triggerMethod) && e.triggerMethod("dom:refresh")
                }

                function o(n) {
                    return t.$.contains(e, n.el)
                }
                return function (e) {
                    e.listenTo(e, "show", function () {
                        r(e)
                    }), e.listenTo(e, "render", function () {
                        i(e)
                    })
                }
            }(document.documentElement),
            function (e) {
                function t(t, r, i, s) {
                    var o = s.split(/\s+/);
                    n.each(o, function (n) {
                        var s = t[n];
                        if (!s) throw new e.Error('Method "' + n + '" was configured as an event handler, but does not exist.');
                        t.listenTo(r, i, s)
                    })
                }

                function r(e, t, n, r) {
                    e.listenTo(t, n, r)
                }

                function i(e, t, r, i) {
                    var s = i.split(/\s+/);
                    n.each(s, function (n) {
                        var i = e[n];
                        e.stopListening(t, r, i)
                    })
                }

                function s(e, t, n, r) {
                    e.stopListening(t, n, r)
                }

                function o(t, r, i, s, o) {
                    if (r && i) {
                        if (!n.isFunction(i) && !n.isObject(i)) throw new e.Error({
                            message: "Bindings must be an object or function.",
                            url: "marionette.functions.html#marionettebindentityevents"
                        });
                        n.isFunction(i) && (i = i.call(t)), n.each(i, function (e, i) {
                            n.isFunction(e) ? s(t, r, i, e) : o(t, r, i, e)
                        })
                    }
                }
                e.bindEntityEvents = function (e, n, i) {
                    o(e, n, i, r, t)
                }, e.unbindEntityEvents = function (e, t, n) {
                    o(e, t, n, s, i)
                }, e.proxyBindEntityEvents = function (t, n) {
                    return e.bindEntityEvents(this, t, n)
                }, e.proxyUnbindEntityEvents = function (t, n) {
                    return e.unbindEntityEvents(this, t, n)
                }
            }(i);
        var o = ["description", "fileName", "lineNumber", "name", "message", "number"];
        return i.Error = i.extend.call(Error, {
            urlRoot: "http://marionettejs.com/docs/" + i.VERSION + "/",
            constructor: function (e, t) {
                n.isObject(e) ? (t = e, e = t.message) : t || (t = {});
                var r = Error.call(this, e);
                n.extend(this, n.pick(r, o), n.pick(t, o)), this.captureStackTrace(), t.url && (this.url = this.urlRoot + t.url)
            },
            captureStackTrace: function () {
                Error.captureStackTrace && Error.captureStackTrace(this, i.Error)
            },
            toString: function () {
                return this.name + ": " + this.message + (this.url ? " See: " + this.url : "")
            }
        }), i.Error.extend = i.extend, i.Callbacks = function () {
            this._deferred = i.Deferred(), this._callbacks = []
        }, n.extend(i.Callbacks.prototype, {
            add: function (e, t) {
                var r = n.result(this._deferred, "promise");
                this._callbacks.push({
                    cb: e,
                    ctx: t
                }), r.then(function (n) {
                    t && (n.context = t), e.call(n.context, n.options)
                })
            },
            run: function (e, t) {
                this._deferred.resolve({
                    options: e,
                    context: t
                })
            },
            reset: function () {
                var e = this._callbacks;
                this._deferred = i.Deferred(), this._callbacks = [], n.each(e, function (e) {
                    this.add(e.cb, e.ctx)
                }, this)
            }
        }), i.Controller = function (e) {
            this.options = e || {}, n.isFunction(this.initialize) && this.initialize(this.options)
        }, i.Controller.extend = i.extend, n.extend(i.Controller.prototype, t.Events, {
            destroy: function () {
                var e = s.call(arguments);
                return this.triggerMethod.apply(this, ["before:destroy"].concat(e)), this.triggerMethod.apply(this, ["destroy"].concat(e)), this.stopListening(), this.off(), this
            },
            triggerMethod: i.triggerMethod,
            getOption: i.proxyGetOption
        }), i.Object = function (e) {
            this.options = n.extend({}, n.result(this, "options"), e), this.initialize.apply(this, arguments)
        }, i.Object.extend = i.extend, n.extend(i.Object.prototype, {
            initialize: function () {},
            destroy: function () {
                this.triggerMethod("before:destroy"), this.triggerMethod("destroy"), this.stopListening()
            },
            triggerMethod: i.triggerMethod,
            getOption: i.proxyGetOption,
            bindEntityEvents: i.proxyBindEntityEvents,
            unbindEntityEvents: i.proxyUnbindEntityEvents
        }), n.extend(i.Object.prototype, t.Events), i.Region = function (e) {
            if (this.options = e || {}, this.el = this.getOption("el"), this.el = this.el instanceof t.$ ? this.el[0] : this.el, !this.el) throw new i.Error({
                name: "NoElError",
                message: 'An "el" must be specified for a region.'
            });
            if (this.$el = this.getEl(this.el), this.initialize) {
                var n = s.apply(arguments);
                this.initialize.apply(this, n)
            }
        }, n.extend(i.Region, {
            buildRegion: function (e, t) {
                if (n.isString(e)) return this._buildRegionFromSelector(e, t);
                if (e.selector || e.el || e.regionClass) return this._buildRegionFromObject(e, t);
                if (n.isFunction(e)) return this._buildRegionFromRegionClass(e);
                throw new i.Error({
                    message: "Improper region configuration type.",
                    url: "marionette.region.html#region-configuration-types"
                })
            },
            _buildRegionFromSelector: function (e, t) {
                return new t({
                    el: e
                })
            },
            _buildRegionFromObject: function (e, r) {
                var i = e.regionClass || r,
                    s = n.omit(e, "selector", "regionClass");
                e.selector && !s.el && (s.el = e.selector);
                var o = new i(s);
                return e.parentEl && (o.getEl = function (r) {
                    if (n.isObject(r)) return t.$(r);
                    var i = e.parentEl;
                    return n.isFunction(i) && (i = i()), i.find(r)
                }), o
            },
            _buildRegionFromRegionClass: function (e) {
                return new e
            }
        }), n.extend(i.Region.prototype, t.Events, {
            show: function (e, t) {
                this._ensureElement();
                var r = t || {},
                    s = e !== this.currentView,
                    o = !!r.preventDestroy,
                    u = !!r.forceShow,
                    a = !!this.currentView,
                    f = !o && s,
                    l = s || u;
                return a && this.triggerMethod("before:swapOut", this.currentView), f && this.empty(), l ? (e.once("destroy", n.bind(this.empty, this)), e.render(), a && this.triggerMethod("before:swap", e), this.triggerMethod("before:show", e), i.triggerMethodOn(e, "before:show"), a && this.triggerMethod("swapOut", this.currentView), this.attachHtml(e), this.currentView = e, a && this.triggerMethod("swap", e), this.triggerMethod("show", e), i.triggerMethodOn(e, "show"), this) : this
            },
            _ensureElement: function () {
                if (n.isObject(this.el) || (this.$el = this.getEl(this.el), this.el = this.$el[0]), !this.$el || 0 === this.$el.length) throw new i.Error('An "el" ' + this.$el.selector + " must exist in DOM")
            },
            getEl: function (e) {
                return t.$(e)
            },
            attachHtml: function (e) {
                this.el.innerHTML = "", this.el.appendChild(e.el)
            },
            empty: function () {
                var e = this.currentView;
                if (e) return this.triggerMethod("before:empty", e), this._destroyView(), this.triggerMethod("empty", e), delete this.currentView, this
            },
            _destroyView: function () {
                var e = this.currentView;
                e.destroy && !e.isDestroyed ? e.destroy() : e.remove && e.remove()
            },
            attachView: function (e) {
                return this.currentView = e, this
            },
            hasView: function () {
                return !!this.currentView
            },
            reset: function () {
                return this.empty(), this.$el && (this.el = this.$el.selector), delete this.$el, this
            },
            getOption: i.proxyGetOption,
            triggerMethod: i.triggerMethod
        }), i.Region.extend = i.extend, i.RegionManager = function (e) {
            var t = e.Controller.extend({
                constructor: function (t) {
                    this._regions = {}, e.Controller.call(this, t)
                },
                addRegions: function (e, t) {
                    n.isFunction(e) && (e = e.apply(this, arguments));
                    var r = {};
                    return n.each(e, function (e, i) {
                        n.isString(e) && (e = {
                            selector: e
                        }), e.selector && (e = n.defaults({}, e, t));
                        var s = this.addRegion(i, e);
                        r[i] = s
                    }, this), r
                },
                addRegion: function (t, n) {
                    var r;
                    return r = n instanceof e.Region ? n : e.Region.buildRegion(n, e.Region), this.triggerMethod("before:add:region", t, r), this._store(t, r), this.triggerMethod("add:region", t, r), r
                },
                get: function (e) {
                    return this._regions[e]
                },
                getRegions: function () {
                    return n.clone(this._regions)
                },
                removeRegion: function (e) {
                    var t = this._regions[e];
                    return this._remove(e, t), t
                },
                removeRegions: function () {
                    var e = this.getRegions();
                    return n.each(this._regions, function (e, t) {
                        this._remove(t, e)
                    }, this), e
                },
                emptyRegions: function () {
                    var e = this.getRegions();
                    return n.each(e, function (e) {
                        e.empty()
                    }, this), e
                },
                destroy: function () {
                    return this.removeRegions(), e.Controller.prototype.destroy.apply(this, arguments)
                },
                _store: function (e, t) {
                    this._regions[e] = t, this._setLength()
                },
                _remove: function (e, t) {
                    this.triggerMethod("before:remove:region", e, t), t.empty(), t.stopListening(), delete this._regions[e], this._setLength(), this.triggerMethod("remove:region", e, t)
                },
                _setLength: function () {
                    this.length = n.size(this._regions)
                }
            });
            return e.actAsCollection(t.prototype, "_regions"), t
        }(i), i.TemplateCache = function (e) {
            this.templateId = e
        }, n.extend(i.TemplateCache, {
            templateCaches: {},
            get: function (e) {
                var t = this.templateCaches[e];
                return t || (t = new i.TemplateCache(e), this.templateCaches[e] = t), t.load()
            },
            clear: function () {
                var e, t = s.call(arguments),
                    n = t.length;
                if (n > 0)
                    for (e = 0; n > e; e++) delete this.templateCaches[t[e]];
                else this.templateCaches = {}
            }
        }), n.extend(i.TemplateCache.prototype, {
            load: function () {
                if (this.compiledTemplate) return this.compiledTemplate;
                var e = this.loadTemplate(this.templateId);
                return this.compiledTemplate = this.compileTemplate(e), this.compiledTemplate
            },
            loadTemplate: function (e) {
                var n = t.$(e).html();
                if (!n || 0 === n.length) throw new i.Error({
                    name: "NoTemplateError",
                    message: 'Could not find template: "' + e + '"'
                });
                return n
            },
            compileTemplate: function (e) {
                return n.template(e)
            }
        }), i.Renderer = {
            render: function (e, t) {
                if (!e) throw new i.Error({
                    name: "TemplateNotFoundError",
                    message: "Cannot render the template since its false, null or undefined."
                });
                var n;
                return (n = "function" == typeof e ? e : i.TemplateCache.get(e))(t)
            }
        }, i.View = t.View.extend({
            constructor: function (e) {
                n.bindAll(this, "render"), this.options = n.extend({}, n.result(this, "options"), n.isFunction(e) ? e.call(this) : e), this._behaviors = i.Behaviors(this), t.View.apply(this, arguments), i.MonitorDOMRefresh(this), this.listenTo(this, "show", this.onShowCalled)
            },
            getTemplate: function () {
                return this.getOption("template")
            },
            serializeModel: function (e) {
                return e.toJSON.apply(e, s.call(arguments, 1))
            },
            mixinTemplateHelpers: function (e) {
                e = e || {};
                var t = this.getOption("templateHelpers");
                return n.isFunction(t) && (t = t.call(this)), n.extend(e, t)
            },
            normalizeUIKeys: function (e) {
                var t = n.result(this, "ui"),
                    r = n.result(this, "_uiBindings");
                return i.normalizeUIKeys(e, r || t)
            },
            normalizeUIValues: function (e) {
                var t = n.result(this, "ui"),
                    r = n.result(this, "_uiBindings");
                return i.normalizeUIValues(e, r || t)
            },
            configureTriggers: function () {
                if (this.triggers) {
                    var e = {},
                        t = this.normalizeUIKeys(n.result(this, "triggers"));
                    return n.each(t, function (t, n) {
                        e[n] = this._buildViewTrigger(t)
                    }, this), e
                }
            },
            delegateEvents: function (e) {
                return this._delegateDOMEvents(e), this.bindEntityEvents(this.model, this.getOption("modelEvents")), this.bindEntityEvents(this.collection, this.getOption("collectionEvents")), n.each(this._behaviors, function (e) {
                    e.bindEntityEvents(this.model, e.getOption("modelEvents")), e.bindEntityEvents(this.collection, e.getOption("collectionEvents"))
                }, this), this
            },
            _delegateDOMEvents: function (e) {
                var r = e || this.events;
                n.isFunction(r) && (r = r.call(this)), r = this.normalizeUIKeys(r), n.isUndefined(e) && (this.events = r);
                var i = {},
                    s = n.result(this, "behaviorEvents") || {},
                    o = this.configureTriggers(),
                    u = n.result(this, "behaviorTriggers") || {};
                n.extend(i, s, r, o, u), t.View.prototype.delegateEvents.call(this, i)
            },
            undelegateEvents: function () {
                var e = s.call(arguments);
                return t.View.prototype.undelegateEvents.apply(this, e), this.unbindEntityEvents(this.model, this.getOption("modelEvents")), this.unbindEntityEvents(this.collection, this.getOption("collectionEvents")), n.each(this._behaviors, function (e) {
                    e.unbindEntityEvents(this.model, e.getOption("modelEvents")), e.unbindEntityEvents(this.collection, e.getOption("collectionEvents"))
                }, this), this
            },
            onShowCalled: function () {},
            _ensureViewIsIntact: function () {
                if (this.isDestroyed) throw new i.Error({
                    name: "ViewDestroyedError",
                    message: 'View (cid: "' + this.cid + '") has already been destroyed and cannot be used.'
                })
            },
            destroy: function () {
                if (!this.isDestroyed) {
                    var e = s.call(arguments);
                    return this.triggerMethod.apply(this, ["before:destroy"].concat(e)), this.isDestroyed = !0, this.triggerMethod.apply(this, ["destroy"].concat(e)), this.unbindUIElements(), this.remove(), n.invoke(this._behaviors, "destroy", e), this
                }
            },
            bindUIElements: function () {
                this._bindUIElements(), n.invoke(this._behaviors, this._bindUIElements)
            },
            _bindUIElements: function () {
                if (this.ui) {
                    this._uiBindings || (this._uiBindings = this.ui);
                    var e = n.result(this, "_uiBindings");
                    this.ui = {}, n.each(n.keys(e), function (t) {
                        var n = e[t];
                        this.ui[t] = this.$(n)
                    }, this)
                }
            },
            unbindUIElements: function () {
                this._unbindUIElements(), n.invoke(this._behaviors, this._unbindUIElements)
            },
            _unbindUIElements: function () {
                this.ui && this._uiBindings && (n.each(this.ui, function (e, t) {
                    delete this.ui[t]
                }, this), this.ui = this._uiBindings, delete this._uiBindings)
            },
            _buildViewTrigger: function (e) {
                var t = n.isObject(e),
                    r = n.defaults({}, t ? e : {}, {
                        preventDefault: !0,
                        stopPropagation: !0
                    }),
                    i = t ? r.event : e;
                return function (e) {
                    e && (e.preventDefault && r.preventDefault && e.preventDefault(), e.stopPropagation && r.stopPropagation && e.stopPropagation());
                    var t = {
                        view: this,
                        model: this.model,
                        collection: this.collection
                    };
                    this.triggerMethod(i, t)
                }
            },
            setElement: function () {
                var e = t.View.prototype.setElement.apply(this, arguments);
                return n.invoke(this._behaviors, "proxyViewProperties", this), e
            },
            triggerMethod: function () {
                var e = arguments,
                    t = i.triggerMethod,
                    r = t.apply(this, e);
                return n.each(this._behaviors, function (n) {
                    t.apply(n, e)
                }), r
            },
            normalizeMethods: i.normalizeMethods,
            getOption: i.proxyGetOption,
            bindEntityEvents: i.proxyBindEntityEvents,
            unbindEntityEvents: i.proxyUnbindEntityEvents
        }), i.ItemView = i.View.extend({
            constructor: function () {
                i.View.apply(this, arguments)
            },
            serializeData: function () {
                var e = {};
                return this.model ? e = n.partial(this.serializeModel, this.model).apply(this, arguments) : this.collection && (e = {
                    items: n.partial(this.serializeCollection, this.collection).apply(this, arguments)
                }), e
            },
            serializeCollection: function (e) {
                return e.toJSON.apply(e, s.call(arguments, 1))
            },
            render: function () {
                return this._ensureViewIsIntact(), this.triggerMethod("before:render", this), this._renderTemplate(), this.bindUIElements(), this.triggerMethod("render", this), this
            },
            _renderTemplate: function () {
                var e = this.getTemplate();
                if (e !== !1) {
                    if (!e) throw new i.Error({
                        name: "UndefinedTemplateError",
                        message: "Cannot render the template since it is null or undefined."
                    });
                    var t = this.serializeData();
                    t = this.mixinTemplateHelpers(t);
                    var n = i.Renderer.render(e, t, this);
                    return this.attachElContent(n), this
                }
            },
            attachElContent: function (e) {
                return this.$el.html(e), this
            },
            destroy: function () {
                return this.isDestroyed ? void 0 : i.View.prototype.destroy.apply(this, arguments)
            }
        }), i.CollectionView = i.View.extend({
            childViewEventPrefix: "childview",
            constructor: function (e) {
                var r = e || {};
                if (this.sort = n.isUndefined(r.sort) ? !0 : r.sort, !(!r.collection || r.collection instanceof t.Collection)) throw new i.Error("The Collection option passed to this view needs to be an instance of a Backbone.Collection");
                this.once("render", this._initialEvents), this._initChildViewStorage(), i.View.apply(this, arguments), this.initRenderBuffer()
            },
            initRenderBuffer: function () {
                this.elBuffer = document.createDocumentFragment(), this._bufferedChildren = []
            },
            startBuffering: function () {
                this.initRenderBuffer(), this.isBuffering = !0
            },
            endBuffering: function () {
                this.isBuffering = !1, this._triggerBeforeShowBufferedChildren(), this.attachBuffer(this, this.elBuffer), this._triggerShowBufferedChildren(), this.initRenderBuffer()
            },
            _triggerBeforeShowBufferedChildren: function () {
                this._isShown && n.each(this._bufferedChildren, n.partial(this._triggerMethodOnChild, "before:show"))
            },
            _triggerShowBufferedChildren: function () {
                this._isShown && (n.each(this._bufferedChildren, n.partial(this._triggerMethodOnChild, "show")), this._bufferedChildren = [])
            },
            _triggerMethodOnChild: function (e, t) {
                i.triggerMethodOn(t, e)
            },
            _initialEvents: function () {
                this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "remove", this._onCollectionRemove), this.listenTo(this.collection, "reset", this.render), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
            },
            _onCollectionAdd: function (e) {
                this.destroyEmptyView();
                var t = this.getChildView(e),
                    n = this.collection.indexOf(e);
                this.addChild(e, t, n)
            },
            _onCollectionRemove: function (e) {
                var t = this.children.findByModel(e);
                this.removeChildView(t), this.checkEmpty()
            },
            onShowCalled: function () {
                this.children.each(n.partial(this._triggerMethodOnChild, "show"))
            },
            render: function () {
                return this._ensureViewIsIntact(), this.triggerMethod("before:render", this), this._renderChildren(), this.triggerMethod("render", this), this
            },
            resortView: function () {
                this.render()
            },
            _sortViews: function () {
                var e = this.collection.find(function (e, t) {
                    var n = this.children.findByModel(e);
                    return !n || n._index !== t
                }, this);
                e && this.resortView()
            },
            _renderChildren: function () {
                this.destroyEmptyView(), this.destroyChildren(), this.isEmpty(this.collection) ? this.showEmptyView() : (this.triggerMethod("before:render:collection", this), this.startBuffering(), this.showCollection(), this.endBuffering(), this.triggerMethod("render:collection", this))
            },
            showCollection: function () {
                var e;
                this.collection.each(function (t, n) {
                    e = this.getChildView(t), this.addChild(t, e, n)
                }, this)
            },
            showEmptyView: function () {
                var e = this.getEmptyView();
                if (e && !this._showingEmptyView) {
                    this.triggerMethod("before:render:empty"), this._showingEmptyView = !0;
                    var n = new t.Model;
                    this.addEmptyView(n, e), this.triggerMethod("render:empty")
                }
            },
            destroyEmptyView: function () {
                this._showingEmptyView && (this.triggerMethod("before:remove:empty"), this.destroyChildren(), delete this._showingEmptyView, this.triggerMethod("remove:empty"))
            },
            getEmptyView: function () {
                return this.getOption("emptyView")
            },
            addEmptyView: function (e, t) {
                var r = this.getOption("emptyViewOptions") || this.getOption("childViewOptions");
                n.isFunction(r) && (r = r.call(this));
                var s = this.buildChildView(e, t, r);
                this.proxyChildEvents(s), this._isShown && i.triggerMethodOn(s, "before:show"), this.children.add(s), this.renderChildView(s, -1), this._isShown && i.triggerMethodOn(s, "show")
            },
            getChildView: function () {
                var e = this.getOption("childView");
                if (!e) throw new i.Error({
                    name: "NoChildViewError",
                    message: 'A "childView" must be specified'
                });
                return e
            },
            addChild: function (e, t, r) {
                var i = this.getOption("childViewOptions");
                n.isFunction(i) && (i = i.call(this, e, r));
                var s = this.buildChildView(e, t, i);
                return this._updateIndices(s, !0, r), this._addChildView(s, r), s
            },
            _updateIndices: function (e, t, n) {
                this.sort && (t ? (e._index = n, this.children.each(function (t) {
                    t._index >= e._index && t._index++
                })) : this.children.each(function (t) {
                    t._index >= e._index && t._index--
                }))
            },
            _addChildView: function (e, t) {
                this.proxyChildEvents(e), this.triggerMethod("before:add:child", e), this.children.add(e), this.renderChildView(e, t), this._isShown && !this.isBuffering && i.triggerMethodOn(e, "show"), this.triggerMethod("add:child", e)
            },
            renderChildView: function (e, t) {
                return e.render(), this.attachHtml(this, e, t), e
            },
            buildChildView: function (e, t, r) {
                var i = n.extend({
                    model: e
                }, r);
                return new t(i)
            },
            removeChildView: function (e) {
                return e && (this.triggerMethod("before:remove:child", e), e.destroy ? e.destroy() : e.remove && e.remove(), this.stopListening(e), this.children.remove(e), this.triggerMethod("remove:child", e), this._updateIndices(e, !1)), e
            },
            isEmpty: function () {
                return !this.collection || 0 === this.collection.length
            },
            checkEmpty: function () {
                this.isEmpty(this.collection) && this.showEmptyView()
            },
            attachBuffer: function (e, t) {
                e.$el.append(t)
            },
            attachHtml: function (e, t, n) {
                e.isBuffering ? (e.elBuffer.appendChild(t.el), e._bufferedChildren.push(t)) : e._insertBefore(t, n) || e._insertAfter(t)
            },
            _insertBefore: function (e, t) {
                var n, r = this.sort && t < this.children.length - 1;
                return r && (n = this.children.find(function (e) {
                    return e._index === t + 1
                })), n ? (n.$el.before(e.el), !0) : !1
            },
            _insertAfter: function (e) {
                this.$el.append(e.el)
            },
            _initChildViewStorage: function () {
                this.children = new t.ChildViewContainer
            },
            destroy: function () {
                return this.isDestroyed ? void 0 : (this.triggerMethod("before:destroy:collection"), this.destroyChildren(), this.triggerMethod("destroy:collection"), i.View.prototype.destroy.apply(this, arguments))
            },
            destroyChildren: function () {
                var e = this.children.map(n.identity);
                return this.children.each(this.removeChildView, this), this.checkEmpty(), e
            },
            proxyChildEvents: function (e) {
                var t = this.getOption("childViewEventPrefix");
                this.listenTo(e, "all", function () {
                    var r = s.call(arguments),
                        i = r[0],
                        o = this.normalizeMethods(n.result(this, "childEvents"));
                    r[0] = t + ":" + i, r.splice(1, 0, e), "undefined" != typeof o && n.isFunction(o[i]) && o[i].apply(this, r.slice(1)), this.triggerMethod.apply(this, r)
                }, this)
            }
        }), i.CompositeView = i.CollectionView.extend({
            constructor: function () {
                i.CollectionView.apply(this, arguments)
            },
            _initialEvents: function () {
                this.collection && (this.listenTo(this.collection, "add", this._onCollectionAdd), this.listenTo(this.collection, "remove", this._onCollectionRemove), this.listenTo(this.collection, "reset", this._renderChildren), this.sort && this.listenTo(this.collection, "sort", this._sortViews))
            },
            getChildView: function () {
                var e = this.getOption("childView") || this.constructor;
                if (!e) throw new i.Error({
                    name: "NoChildViewError",
                    message: 'A "childView" must be specified'
                });
                return e
            },
            serializeData: function () {
                var e = {};
                return this.model && (e = n.partial(this.serializeModel, this.model).apply(this, arguments)), e
            },
            render: function () {
                return this._ensureViewIsIntact(), this.isRendered = !0, this.resetChildViewContainer(), this.triggerMethod("before:render", this), this._renderTemplate(), this._renderChildren(), this.triggerMethod("render", this), this
            },
            _renderChildren: function () {
                this.isRendered && i.CollectionView.prototype._renderChildren.call(this)
            },
            _renderTemplate: function () {
                var e = {};
                e = this.serializeData(), e = this.mixinTemplateHelpers(e), this.triggerMethod("before:render:template");
                var t = this.getTemplate(),
                    n = i.Renderer.render(t, e, this);
                this.attachElContent(n), this.bindUIElements(), this.triggerMethod("render:template")
            },
            attachElContent: function (e) {
                return this.$el.html(e), this
            },
            attachBuffer: function (e, t) {
                var n = this.getChildViewContainer(e);
                n.append(t)
            },
            _insertAfter: function (e) {
                var t = this.getChildViewContainer(this);
                t.append(e.el)
            },
            getChildViewContainer: function (e) {
                if ("$childViewContainer" in e) return e.$childViewContainer;
                var t, r = i.getOption(e, "childViewContainer");
                if (r) {
                    var s = n.isFunction(r) ? r.call(e) : r;
                    if (t = "@" === s.charAt(0) && e.ui ? e.ui[s.substr(4)] : e.$(s), t.length <= 0) throw new i.Error({
                        name: "ChildViewContainerMissingError",
                        message: 'The specified "childViewContainer" was not found: ' + e.childViewContainer
                    })
                } else t = e.$el;
                return e.$childViewContainer = t, t
            },
            resetChildViewContainer: function () {
                this.$childViewContainer && delete this.$childViewContainer
            }
        }), i.LayoutView = i.ItemView.extend({
            regionClass: i.Region,
            constructor: function (e) {
                e = e || {}, this._firstRender = !0, this._initializeRegions(e), i.ItemView.call(this, e)
            },
            render: function () {
                return this._ensureViewIsIntact(), this._firstRender ? this._firstRender = !1 : this._reInitializeRegions(), i.ItemView.prototype.render.apply(this, arguments)
            },
            destroy: function () {
                return this.isDestroyed ? this : (this.regionManager.destroy(), i.ItemView.prototype.destroy.apply(this, arguments))
            },
            addRegion: function (e, t) {
                this.triggerMethod("before:region:add", e);
                var n = {};
                return n[e] = t, this._buildRegions(n)[e]
            },
            addRegions: function (e) {
                return this.regions = n.extend({}, this.regions, e), this._buildRegions(e)
            },
            removeRegion: function (e) {
                return this.triggerMethod("before:region:remove", e), delete this.regions[e], this.regionManager.removeRegion(e)
            },
            getRegion: function (e) {
                return this.regionManager.get(e)
            },
            getRegions: function () {
                return this.regionManager.getRegions()
            },
            _buildRegions: function (e) {
                var t = this,
                    n = {
                        regionClass: this.getOption("regionClass"),
                        parentEl: function () {
                            return t.$el
                        }
                    };
                return this.regionManager.addRegions(e, n)
            },
            _initializeRegions: function (e) {
                var t;
                this._initRegionManager(), t = n.isFunction(this.regions) ? this.regions(e) : this.regions || {};
                var r = this.getOption.call(e, "regions");
                n.isFunction(r) && (r = r.call(this, e)), n.extend(t, r), t = this.normalizeUIValues(t), this.addRegions(t)
            },
            _reInitializeRegions: function () {
                this.regionManager.emptyRegions(), this.regionManager.each(function (e) {
                    e.reset()
                })
            },
            getRegionManager: function () {
                return new i.RegionManager
            },
            _initRegionManager: function () {
                this.regionManager = this.getRegionManager(), this.listenTo(this.regionManager, "before:add:region", function (e) {
                    this.triggerMethod("before:add:region", e)
                }), this.listenTo(this.regionManager, "add:region", function (e, t) {
                    this[e] = t, this.triggerMethod("add:region", e, t)
                }), this.listenTo(this.regionManager, "before:remove:region", function (e) {
                    this.triggerMethod("before:remove:region", e)
                }), this.listenTo(this.regionManager, "remove:region", function (e, t) {
                    delete this[e], this.triggerMethod("remove:region", e, t)
                })
            }
        }), i.Behavior = function (e, t) {
            function n(t, n) {
                this.view = n, this.defaults = e.result(this, "defaults") || {}, this.options = e.extend({}, this.defaults, t), this.$ = function () {
                    return this.view.$.apply(this.view, arguments)
                }, this.initialize.apply(this, arguments)
            }
            return e.extend(n.prototype, t.Events, {
                initialize: function () {},
                destroy: function () {
                    this.stopListening()
                },
                proxyViewProperties: function (e) {
                    this.$el = e.$el, this.el = e.el
                },
                triggerMethod: i.triggerMethod,
                getOption: i.proxyGetOption,
                bindEntityEvents: i.proxyBindEntityEvents,
                unbindEntityEvents: i.proxyUnbindEntityEvents
            }), n.extend = i.extend, n
        }(n, t), i.Behaviors = function (e, t) {
            function n(e, r) {
                return t.isObject(e.behaviors) ? (r = n.parseBehaviors(e, r || t.result(e, "behaviors")), n.wrap(e, r, t.keys(i)), r) : {}
            }

            function r(e, n) {
                this._view = e, this._viewUI = t.result(e, "ui"), this._behaviors = n, this._triggers = {}
            }
            var i = {
                behaviorTriggers: function (e, t) {
                    var n = new r(this, t);
                    return n.buildBehaviorTriggers()
                },
                behaviorEvents: function (n, r) {
                    var i = {},
                        s = t.result(this, "ui");
                    return t.each(r, function (n, r) {
                        var o = {},
                            u = t.clone(t.result(n, "events")) || {},
                            l = t.result(n, "ui"),
                            c = t.extend({}, s, l);
                        u = e.normalizeUIKeys(u, c), t.each(t.keys(u), function (e) {
                            var i = (new Array(r + 2)).join(" "),
                                s = e + i,
                                a = t.isFunction(u[e]) ? u[e] : n[u[e]];
                            o[s] = t.bind(a, n)
                        }), i = t.extend(i, o)
                    }), i
                }
            };
            return t.extend(n, {
                behaviorsLookup: function () {
                    throw new e.Error({
                        message: "You must define where your behaviors are stored.",
                        url: "marionette.behaviors.html#behaviorslookup"
                    })
                },
                getBehaviorClass: function (e, r) {
                    return e.behaviorClass ? e.behaviorClass : t.isFunction(n.behaviorsLookup) ? n.behaviorsLookup.apply(this, arguments)[r] : n.behaviorsLookup[r]
                },
                parseBehaviors: function (e, r) {
                    return t.chain(r).map(function (r, i) {
                        var s = n.getBehaviorClass(r, i),
                            o = new s(r, e),
                            u = n.parseBehaviors(e, t.result(o, "behaviors"));
                        return [o].concat(u)
                    }).flatten().value()
                },
                wrap: function (e, n, r) {
                    t.each(r, function (r) {
                        e[r] = t.partial(i[r], e[r], n)
                    })
                }
            }), t.extend(r.prototype, {
                buildBehaviorTriggers: function () {
                    return t.each(this._behaviors, this._buildTriggerHandlersForBehavior, this), this._triggers
                },
                _buildTriggerHandlersForBehavior: function (n, r) {
                    var i = t.extend({}, this._viewUI, t.result(n, "ui")),
                        s = t.clone(t.result(n, "triggers")) || {};
                    s = e.normalizeUIKeys(s, i), t.each(s, t.partial(this._setHandlerForBehavior, n, r), this)
                },
                _setHandlerForBehavior: function (e, t, n, r) {
                    var i = r.replace(/^\S+/, function (e) {
                        return e + ".behaviortriggers" + t
                    });
                    this._triggers[i] = this._view._buildViewTrigger(n)
                }
            }), n
        }(i, n), i.AppRouter = t.Router.extend({
            constructor: function (e) {
                t.Router.apply(this, arguments), this.options = e || {};
                var n = this.getOption("appRoutes"),
                    r = this._getController();
                this.processAppRoutes(r, n), this.on("route", this._processOnRoute, this)
            },
            appRoute: function (e, t) {
                var n = this._getController();
                this._addAppRoute(n, e, t)
            },
            _processOnRoute: function (e, t) {
                var r = n.invert(this.getOption("appRoutes"))[e];
                n.isFunction(this.onRoute) && this.onRoute(e, r, t)
            },
            processAppRoutes: function (e, t) {
                if (t) {
                    var r = n.keys(t).reverse();
                    n.each(r, function (n) {
                        this._addAppRoute(e, n, t[n])
                    }, this)
                }
            },
            _getController: function () {
                return this.getOption("controller")
            },
            _addAppRoute: function (e, t, r) {
                var s = e[r];
                if (!s) throw new i.Error('Method "' + r + '" was not found on the controller');
                this.route(t, r, n.bind(s, e))
            },
            getOption: i.proxyGetOption
        }), i.Application = function (e) {
            this.options = e, this._initializeRegions(e), this._initCallbacks = new i.Callbacks, this.submodules = {}, n.extend(this, e), this._initChannel(), this.initialize.apply(this, arguments)
        }, n.extend(i.Application.prototype, t.Events, {
            initialize: function () {},
            execute: function () {
                this.commands.execute.apply(this.commands, arguments)
            },
            request: function () {
                return this.reqres.request.apply(this.reqres, arguments)
            },
            addInitializer: function (e) {
                this._initCallbacks.add(e)
            },
            start: function (e) {
                this.triggerMethod("before:start", e), this._initCallbacks.run(e, this), this.triggerMethod("start", e)
            },
            addRegions: function (e) {
                return this._regionManager.addRegions(e)
            },
            emptyRegions: function () {
                return this._regionManager.emptyRegions()
            },
            removeRegion: function (e) {
                return this._regionManager.removeRegion(e)
            },
            getRegion: function (e) {
                return this._regionManager.get(e)
            },
            getRegions: function () {
                return this._regionManager.getRegions()
            },
            module: function (e, t) {
                var n = i.Module.getClass(t),
                    r = s.call(arguments);
                return r.unshift(this), n.create.apply(n, r)
            },
            getRegionManager: function () {
                return new i.RegionManager
            },
            _initializeRegions: function (e) {
                var t = n.isFunction(this.regions) ? this.regions(e) : this.regions || {};
                this._initRegionManager();
                var r = i.getOption(e, "regions");
                return n.isFunction(r) && (r = r.call(this, e)), n.extend(t, r), this.addRegions(t), this
            },
            _initRegionManager: function () {
                this._regionManager = this.getRegionManager(), this.listenTo(this._regionManager, "before:add:region", function (e) {
                    this.triggerMethod("before:add:region", e)
                }), this.listenTo(this._regionManager, "add:region", function (e, t) {
                    this[e] = t, this.triggerMethod("add:region", e, t)
                }), this.listenTo(this._regionManager, "before:remove:region", function (e) {
                    this.triggerMethod("before:remove:region", e)
                }), this.listenTo(this._regionManager, "remove:region", function (e, t) {
                    delete this[e], this.triggerMethod("remove:region", e, t)
                })
            },
            _initChannel: function () {
                this.channelName = n.result(this, "channelName") || "global", this.channel = n.result(this, "channel") || t.Wreqr.radio.channel(this.channelName), this.vent = n.result(this, "vent") || this.channel.vent, this.commands = n.result(this, "commands") || this.channel.commands, this.reqres = n.result(this, "reqres") || this.channel.reqres
            },
            triggerMethod: i.triggerMethod,
            getOption: i.proxyGetOption
        }), i.Application.extend = i.extend, i.Module = function (e, t, r) {
            this.moduleName = e, this.options = n.extend({}, this.options, r), this.initialize = r.initialize || this.initialize, this.submodules = {}, this._setupInitializersAndFinalizers(), this.app = t, n.isFunction(this.initialize) && this.initialize(e, t, this.options)
        }, i.Module.extend = i.extend, n.extend(i.Module.prototype, t.Events, {
            startWithParent: !0,
            initialize: function () {},
            addInitializer: function (e) {
                this._initializerCallbacks.add(e)
            },
            addFinalizer: function (e) {
                this._finalizerCallbacks.add(e)
            },
            start: function (e) {
                this._isInitialized || (n.each(this.submodules, function (t) {
                    t.startWithParent && t.start(e)
                }), this.triggerMethod("before:start", e), this._initializerCallbacks.run(e, this), this._isInitialized = !0, this.triggerMethod("start", e))
            },
            stop: function () {
                this._isInitialized && (this._isInitialized = !1, this.triggerMethod("before:stop"), n.each(this.submodules, function (e) {
                    e.stop()
                }), this._finalizerCallbacks.run(void 0, this), this._initializerCallbacks.reset(), this._finalizerCallbacks.reset(), this.triggerMethod("stop"))
            },
            addDefinition: function (e, t) {
                this._runModuleDefinition(e, t)
            },
            _runModuleDefinition: function (e, r) {
                if (e) {
                    var s = n.flatten([this, this.app, t, i, t.$, n, r]);
                    e.apply(this, s)
                }
            },
            _setupInitializersAndFinalizers: function () {
                this._initializerCallbacks = new i.Callbacks, this._finalizerCallbacks = new i.Callbacks
            },
            triggerMethod: i.triggerMethod
        }), n.extend(i.Module, {
            create: function (e, t, r) {
                var i = e,
                    o = s.call(arguments);
                o.splice(0, 3), t = t.split(".");
                var u = t.length,
                    a = [];
                return a[u - 1] = r, n.each(t, function (t, n) {
                    var s = i;
                    i = this._getModule(s, t, e, r), this._addModuleDefinition(s, i, a[n], o)
                }, this), i
            },
            _getModule: function (e, t, r, i) {
                var s = n.extend({}, i),
                    o = this.getClass(i),
                    u = e[t];
                return u || (u = new o(t, r, s), e[t] = u, e.submodules[t] = u), u
            },
            getClass: function (e) {
                var t = i.Module;
                return e ? e.prototype instanceof t ? e : e.moduleClass || t : t
            },
            _addModuleDefinition: function (e, t, n, r) {
                var i = this._getDefine(n),
                    s = this._getStartWithParent(n, t);
                i && t.addDefinition(i, r), this._addStartWithParent(e, t, s)
            },
            _getStartWithParent: function (e, t) {
                var r;
                return n.isFunction(e) && e.prototype instanceof i.Module ? (r = t.constructor.prototype.startWithParent, n.isUndefined(r) ? !0 : r) : n.isObject(e) ? (r = e.startWithParent, n.isUndefined(r) ? !0 : r) : !0
            },
            _getDefine: function (e) {
                return !n.isFunction(e) || e.prototype instanceof i.Module ? n.isObject(e) ? e.define : null : e
            },
            _addStartWithParent: function (e, t, n) {
                t.startWithParent = t.startWithParent && n, t.startWithParent && !t.startWithParentIsConfigured && (t.startWithParentIsConfigured = !0, e.addInitializer(function (e) {
                    t.startWithParent && t.start(e)
                }))
            }
        }), i
    });
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); + function (e) {
    function t() {
        var e = document.createElement("bootstrap"),
            t = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            };
        for (var n in t)
            if (void 0 !== e.style[n]) return {
                end: t[n]
            };
        return !1
    }
    e.fn.emulateTransitionEnd = function (t) {
        var n = !1,
            r = this;
        e(this).one("bsTransitionEnd", function () {
            n = !0
        });
        var i = function () {
            n || e(r).trigger(e.support.transition.end)
        };
        return setTimeout(i, t), this
    }, e(function () {
        e.support.transition = t(), e.support.transition && (e.event.special.bsTransitionEnd = {
            bindType: e.support.transition.end,
            delegateType: e.support.transition.end,
            handle: function (t) {
                return e(t.target).is(this) ? t.handleObj.handler.apply(this, arguments) : void 0
            }
        })
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var n = e(this),
                i = n.data("bs.alert");
            i || n.data("bs.alert", i = new r(this)), "string" == typeof t && i[t].call(n)
        })
    }
    var n = '[data-dismiss="alert"]',
        r = function (t) {
            e(t).on("click", n, this.close)
        };
    r.VERSION = "3.2.0", r.prototype.close = function (t) {
        function n() {
            s.detach().trigger("closed.bs.alert").remove()
        }
        var r = e(this),
            i = r.attr("data-target");
        i || (i = r.attr("href"), i = i && i.replace(/.*(?=#[^\s]*$)/, ""));
        var s = e(i);
        t && t.preventDefault(), s.length || (s = r.hasClass("alert") ? r : r.parent()), s.trigger(t = e.Event("close.bs.alert")), t.isDefaultPrevented() || (s.removeClass("in"), e.support.transition && s.hasClass("fade") ? s.one("bsTransitionEnd", n).emulateTransitionEnd(150) : n())
    };
    var i = e.fn.alert;
    e.fn.alert = t, e.fn.alert.Constructor = r, e.fn.alert.noConflict = function () {
        return e.fn.alert = i, this
    }, e(document).on("click.bs.alert.data-api", n, r.prototype.close)
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.button"),
                s = "object" == typeof t && t;
            i || r.data("bs.button", i = new n(this, s)), "toggle" == t ? i.toggle() : t && i.setState(t)
        })
    }
    var n = function (t, r) {
        this.$element = e(t), this.options = e.extend({}, n.DEFAULTS, r), this.isLoading = !1
    };
    n.VERSION = "3.2.0", n.DEFAULTS = {
        loadingText: "loading..."
    }, n.prototype.setState = function (t) {
        var n = "disabled",
            r = this.$element,
            i = r.is("input") ? "val" : "html",
            s = r.data();
        t += "Text", null == s.resetText && r.data("resetText", r[i]()), r[i](null == s[t] ? this.options[t] : s[t]), setTimeout(e.proxy(function () {
            "loadingText" == t ? (this.isLoading = !0, r.addClass(n).attr(n, n)) : this.isLoading && (this.isLoading = !1, r.removeClass(n).removeAttr(n))
        }, this), 0)
    }, n.prototype.toggle = function () {
        var e = !0,
            t = this.$element.closest('[data-toggle="buttons"]');
        if (t.length) {
            var n = this.$element.find("input");
            "radio" == n.prop("type") && (n.prop("checked") && this.$element.hasClass("active") ? e = !1 : t.find(".active").removeClass("active")), e && n.prop("checked", !this.$element.hasClass("active")).trigger("change")
        }
        e && this.$element.toggleClass("active")
    };
    var r = e.fn.button;
    e.fn.button = t, e.fn.button.Constructor = n, e.fn.button.noConflict = function () {
        return e.fn.button = r, this
    }, e(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function (n) {
        var r = e(n.target);
        r.hasClass("btn") || (r = r.closest(".btn")), t.call(r, "toggle"), n.preventDefault()
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.carousel"),
                s = e.extend({}, n.DEFAULTS, r.data(), "object" == typeof t && t),
                o = "string" == typeof t ? t : s.slide;
            i || r.data("bs.carousel", i = new n(this, s)), "number" == typeof t ? i.to(t) : o ? i[o]() : s.interval && i.pause().cycle()
        })
    }
    var n = function (t, n) {
        this.$element = e(t).on("keydown.bs.carousel", e.proxy(this.keydown, this)), this.$indicators = this.$element.find(".carousel-indicators"), this.options = n, this.paused = this.sliding = this.interval = this.$active = this.$items = null, "hover" == this.options.pause && this.$element.on("mouseenter.bs.carousel", e.proxy(this.pause, this)).on("mouseleave.bs.carousel", e.proxy(this.cycle, this))
    };
    n.VERSION = "3.2.0", n.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: !0
    }, n.prototype.keydown = function (e) {
        switch (e.which) {
            case 37:
                this.prev();
                break;
            case 39:
                this.next();
                break;
            default:
                return
        }
        e.preventDefault()
    }, n.prototype.cycle = function (t) {
        return t || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(e.proxy(this.next, this), this.options.interval)), this
    }, n.prototype.getItemIndex = function (e) {
        return this.$items = e.parent().children(".item"), this.$items.index(e || this.$active)
    }, n.prototype.to = function (t) {
        var n = this,
            r = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        return t > this.$items.length - 1 || 0 > t ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function () {
            n.to(t)
        }) : r == t ? this.pause().cycle() : this.slide(t > r ? "next" : "prev", e(this.$items[t]))
    }, n.prototype.pause = function (t) {
        return t || (this.paused = !0), this.$element.find(".next, .prev").length && e.support.transition && (this.$element.trigger(e.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
    }, n.prototype.next = function () {
        return this.sliding ? void 0 : this.slide("next")
    }, n.prototype.prev = function () {
        return this.sliding ? void 0 : this.slide("prev")
    }, n.prototype.slide = function (t, n) {
        var r = this.$element.find(".item.active"),
            i = n || r[t](),
            s = this.interval,
            o = "next" == t ? "left" : "right",
            u = "next" == t ? "first" : "last",
            f = this;
        if (!i.length) {
            if (!this.options.wrap) return;
            i = this.$element.find(".item")[u]()
        }
        if (i.hasClass("active")) return this.sliding = !1;
        var l = i[0],
            c = e.Event("slide.bs.carousel", {
                relatedTarget: l,
                direction: o
            });
        if (this.$element.trigger(c), !c.isDefaultPrevented()) {
            if (this.sliding = !0, s && this.pause(), this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                var h = e(this.$indicators.children()[this.getItemIndex(i)]);
                h && h.addClass("active")
            }
            var p = e.Event("slid.bs.carousel", {
                relatedTarget: l,
                direction: o
            });
            return e.support.transition && this.$element.hasClass("slide") ? (i.addClass(t), i[0].offsetWidth, r.addClass(o), i.addClass(o), r.one("bsTransitionEnd", function () {
                i.removeClass([t, o].join(" ")).addClass("active"), r.removeClass(["active", o].join(" ")), f.sliding = !1, setTimeout(function () {
                    f.$element.trigger(p)
                }, 0)
            }).emulateTransitionEnd(1e3 * r.css("transition-duration").slice(0, -1))) : (r.removeClass("active"), i.addClass("active"), this.sliding = !1, this.$element.trigger(p)), s && this.cycle(), this
        }
    };
    var r = e.fn.carousel;
    e.fn.carousel = t, e.fn.carousel.Constructor = n, e.fn.carousel.noConflict = function () {
        return e.fn.carousel = r, this
    }, e(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", function (n) {
        var r, i = e(this),
            s = e(i.attr("data-target") || (r = i.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""));
        if (s.hasClass("carousel")) {
            var o = e.extend({}, s.data(), i.data()),
                u = i.attr("data-slide-to");
            u && (o.interval = !1), t.call(s, o), u && s.data("bs.carousel").to(u), n.preventDefault()
        }
    }), e(window).on("load", function () {
        e('[data-ride="carousel"]').each(function () {
            var n = e(this);
            t.call(n, n.data())
        })
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.collapse"),
                s = e.extend({}, n.DEFAULTS, r.data(), "object" == typeof t && t);
            !i && s.toggle && "show" == t && (t = !t), i || r.data("bs.collapse", i = new n(this, s)), "string" == typeof t && i[t]()
        })
    }
    var n = function (t, r) {
        this.$element = e(t), this.options = e.extend({}, n.DEFAULTS, r), this.transitioning = null, this.options.parent && (this.$parent = e(this.options.parent)), this.options.toggle && this.toggle()
    };
    n.VERSION = "3.2.0", n.DEFAULTS = {
        toggle: !0
    }, n.prototype.dimension = function () {
        var e = this.$element.hasClass("width");
        return e ? "width" : "height"
    }, n.prototype.show = function () {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var n = e.Event("show.bs.collapse");
            if (this.$element.trigger(n), !n.isDefaultPrevented()) {
                var r = this.$parent && this.$parent.find("> .panel > .in");
                if (r && r.length) {
                    var i = r.data("bs.collapse");
                    if (i && i.transitioning) return;
                    t.call(r, "hide"), i || r.data("bs.collapse", null)
                }
                var s = this.dimension();
                this.$element.removeClass("collapse").addClass("collapsing")[s](0), this.transitioning = 1;
                var o = function () {
                    this.$element.removeClass("collapsing").addClass("collapse in")[s](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
                };
                if (!e.support.transition) return o.call(this);
                var u = e.camelCase(["scroll", s].join("-"));
                this.$element.one("bsTransitionEnd", e.proxy(o, this)).emulateTransitionEnd(350)[s](this.$element[0][u])
            }
        }
    }, n.prototype.hide = function () {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var t = e.Event("hide.bs.collapse");
            if (this.$element.trigger(t), !t.isDefaultPrevented()) {
                var n = this.dimension();
                this.$element[n](this.$element[n]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"), this.transitioning = 1;
                var r = function () {
                    this.transitioning = 0, this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")
                };
                return e.support.transition ? void this.$element[n](0).one("bsTransitionEnd", e.proxy(r, this)).emulateTransitionEnd(350) : r.call(this)
            }
        }
    }, n.prototype.toggle = function () {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    };
    var r = e.fn.collapse;
    e.fn.collapse = t, e.fn.collapse.Constructor = n, e.fn.collapse.noConflict = function () {
        return e.fn.collapse = r, this
    }, e(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (n) {
        var r, i = e(this),
            s = i.attr("data-target") || n.preventDefault() || (r = i.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""),
            o = e(s),
            u = o.data("bs.collapse"),
            f = u ? "toggle" : i.data(),
            l = i.attr("data-parent"),
            c = l && e(l);
        u && u.transitioning || (c && c.find('[data-toggle="collapse"][data-parent="' + l + '"]').not(i).addClass("collapsed"), i[o.hasClass("in") ? "addClass" : "removeClass"]("collapsed")), t.call(o, f)
    })
}(jQuery), + function (e) {
    function t(t) {
        t && 3 === t.which || (e(i).remove(), e(s).each(function () {
            var r = n(e(this)),
                i = {
                    relatedTarget: this
                };
            r.hasClass("open") && (r.trigger(t = e.Event("hide.bs.dropdown", i)), t.isDefaultPrevented() || r.removeClass("open").trigger("hidden.bs.dropdown", i))
        }))
    }

    function n(t) {
        var n = t.attr("data-target");
        n || (n = t.attr("href"), n = n && /#[A-Za-z]/.test(n) && n.replace(/.*(?=#[^\s]*$)/, ""));
        var r = n && e(n);
        return r && r.length ? r : t.parent()
    }

    function r(t) {
        return this.each(function () {
            var n = e(this),
                r = n.data("bs.dropdown");
            r || n.data("bs.dropdown", r = new o(this)), "string" == typeof t && r[t].call(n)
        })
    }
    var i = ".dropdown-backdrop",
        s = '[data-toggle="dropdown"]',
        o = function (t) {
            e(t).on("click.bs.dropdown", this.toggle)
        };
    o.VERSION = "3.2.0", o.prototype.toggle = function (r) {
        var i = e(this);
        if (!i.is(".disabled, :disabled")) {
            var s = n(i),
                o = s.hasClass("open");
            if (t(), !o) {
                "ontouchstart" in document.documentElement && !s.closest(".navbar-nav").length && e('<div class="dropdown-backdrop"/>').insertAfter(e(this)).on("click", t);
                var u = {
                    relatedTarget: this
                };
                if (s.trigger(r = e.Event("show.bs.dropdown", u)), r.isDefaultPrevented()) return;
                i.trigger("focus"), s.toggleClass("open").trigger("shown.bs.dropdown", u)
            }
            return !1
        }
    }, o.prototype.keydown = function (t) {
        if (/(38|40|27)/.test(t.keyCode)) {
            var r = e(this);
            if (t.preventDefault(), t.stopPropagation(), !r.is(".disabled, :disabled")) {
                var i = n(r),
                    o = i.hasClass("open");
                if (!o || o && 27 == t.keyCode) return 27 == t.which && i.find(s).trigger("focus"), r.trigger("click");
                var u = " li:not(.divider):visible a",
                    l = i.find('[role="menu"]' + u + ', [role="listbox"]' + u);
                if (l.length) {
                    var h = l.index(l.filter(":focus"));
                    38 == t.keyCode && h > 0 && h--, 40 == t.keyCode && h < l.length - 1 && h++, ~h || (h = 0), l.eq(h).trigger("focus")
                }
            }
        }
    };
    var u = e.fn.dropdown;
    e.fn.dropdown = r, e.fn.dropdown.Constructor = o, e.fn.dropdown.noConflict = function () {
        return e.fn.dropdown = u, this
    }, e(document).on("click.bs.dropdown.data-api", t).on("click.bs.dropdown.data-api", ".dropdown form", function (e) {
        e.stopPropagation()
    }).on("click.bs.dropdown.data-api", s, o.prototype.toggle).on("keydown.bs.dropdown.data-api", s + ', [role="menu"], [role="listbox"]', o.prototype.keydown)
}(jQuery), + function (e) {
    function t(t, r) {
        return this.each(function () {
            var i = e(this),
                s = i.data("bs.modal"),
                o = e.extend({}, n.DEFAULTS, i.data(), "object" == typeof t && t);
            s || i.data("bs.modal", s = new n(this, o)), "string" == typeof t ? s[t](r) : o.show && s.show(r)
        })
    }
    var n = function (t, n) {
        this.options = n, this.$body = e(document.body), this.$element = e(t), this.$backdrop = this.isShown = null, this.scrollbarWidth = 0, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, e.proxy(function () {
            this.$element.trigger("loaded.bs.modal")
        }, this))
    };
    n.VERSION = "3.2.0", n.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    }, n.prototype.toggle = function (e) {
        return this.isShown ? this.hide() : this.show(e)
    }, n.prototype.show = function (t) {
        var n = this,
            r = e.Event("show.bs.modal", {
                relatedTarget: t
            });
        this.$element.trigger(r), this.isShown || r.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.$body.addClass("modal-open"), this.setScrollbar(), this.escape(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', e.proxy(this.hide, this)), this.backdrop(function () {
            var r = e.support.transition && n.$element.hasClass("fade");
            n.$element.parent().length || n.$element.appendTo(n.$body), n.$element.show().scrollTop(0), r && n.$element[0].offsetWidth, n.$element.addClass("in").attr("aria-hidden", !1), n.enforceFocus();
            var i = e.Event("shown.bs.modal", {
                relatedTarget: t
            });
            r ? n.$element.find(".modal-dialog").one("bsTransitionEnd", function () {
                n.$element.trigger("focus").trigger(i)
            }).emulateTransitionEnd(300) : n.$element.trigger("focus").trigger(i)
        }))
    }, n.prototype.hide = function (t) {
        t && t.preventDefault(), t = e.Event("hide.bs.modal"), this.$element.trigger(t), this.isShown && !t.isDefaultPrevented() && (this.isShown = !1, this.$body.removeClass("modal-open"), this.resetScrollbar(), this.escape(), e(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.bs.modal"), e.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", e.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal())
    }, n.prototype.enforceFocus = function () {
        e(document).off("focusin.bs.modal").on("focusin.bs.modal", e.proxy(function (e) {
            this.$element[0] === e.target || this.$element.has(e.target).length || this.$element.trigger("focus")
        }, this))
    }, n.prototype.escape = function () {
        this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", e.proxy(function (e) {
            27 == e.which && this.hide()
        }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal")
    }, n.prototype.hideModal = function () {
        var e = this;
        this.$element.hide(), this.backdrop(function () {
            e.$element.trigger("hidden.bs.modal")
        })
    }, n.prototype.removeBackdrop = function () {
        this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
    }, n.prototype.backdrop = function (t) {
        var n = this,
            r = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var i = e.support.transition && r;
            if (this.$backdrop = e('<div class="modal-backdrop ' + r + '" />').appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", e.proxy(function (e) {
                    e.target === e.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this))
                }, this)), i && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !t) return;
            i ? this.$backdrop.one("bsTransitionEnd", t).emulateTransitionEnd(150) : t()
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            var s = function () {
                n.removeBackdrop(), t && t()
            };
            e.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", s).emulateTransitionEnd(150) : s()
        } else t && t()
    }, n.prototype.checkScrollbar = function () {
        document.body.clientWidth >= window.innerWidth || (this.scrollbarWidth = this.scrollbarWidth || this.measureScrollbar())
    }, n.prototype.setScrollbar = function () {
        var e = parseInt(this.$body.css("padding-right") || 0, 10);
        this.scrollbarWidth && this.$body.css("padding-right", e + this.scrollbarWidth)
    }, n.prototype.resetScrollbar = function () {
        this.$body.css("padding-right", "")
    }, n.prototype.measureScrollbar = function () {
        var e = document.createElement("div");
        e.className = "modal-scrollbar-measure", this.$body.append(e);
        var t = e.offsetWidth - e.clientWidth;
        return this.$body[0].removeChild(e), t
    };
    var r = e.fn.modal;
    e.fn.modal = t, e.fn.modal.Constructor = n, e.fn.modal.noConflict = function () {
        return e.fn.modal = r, this
    }, e(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (n) {
        var r = e(this),
            i = r.attr("href"),
            s = e(r.attr("data-target") || i && i.replace(/.*(?=#[^\s]+$)/, "")),
            o = s.data("bs.modal") ? "toggle" : e.extend({
                remote: !/#/.test(i) && i
            }, s.data(), r.data());
        r.is("a") && n.preventDefault(), s.one("show.bs.modal", function (e) {
            e.isDefaultPrevented() || s.one("hidden.bs.modal", function () {
                r.is(":visible") && r.trigger("focus")
            })
        }), t.call(s, o, this)
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.tooltip"),
                s = "object" == typeof t && t;
            (i || "destroy" != t) && (i || r.data("bs.tooltip", i = new n(this, s)), "string" == typeof t && i[t]())
        })
    }
    var n = function (e, t) {
        this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null, this.init("tooltip", e, t)
    };
    n.VERSION = "3.2.0", n.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1,
        viewport: {
            selector: "body",
            padding: 0
        }
    }, n.prototype.init = function (t, n, r) {
        this.enabled = !0, this.type = t, this.$element = e(n), this.options = this.getOptions(r), this.$viewport = this.options.viewport && e(this.options.viewport.selector || this.options.viewport);
        for (var i = this.options.trigger.split(" "), s = i.length; s--;) {
            var o = i[s];
            if ("click" == o) this.$element.on("click." + this.type, this.options.selector, e.proxy(this.toggle, this));
            else if ("manual" != o) {
                var u = "hover" == o ? "mouseenter" : "focusin",
                    f = "hover" == o ? "mouseleave" : "focusout";
                this.$element.on(u + "." + this.type, this.options.selector, e.proxy(this.enter, this)), this.$element.on(f + "." + this.type, this.options.selector, e.proxy(this.leave, this))
            }
        }
        this.options.selector ? this._options = e.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle()
    }, n.prototype.getDefaults = function () {
        return n.DEFAULTS
    }, n.prototype.getOptions = function (t) {
        return t = e.extend({}, this.getDefaults(), this.$element.data(), t), t.delay && "number" == typeof t.delay && (t.delay = {
            show: t.delay,
            hide: t.delay
        }), t
    }, n.prototype.getDelegateOptions = function () {
        var t = {},
            n = this.getDefaults();
        return this._options && e.each(this._options, function (e, r) {
            n[e] != r && (t[e] = r)
        }), t
    }, n.prototype.enter = function (t) {
        var n = t instanceof this.constructor ? t : e(t.currentTarget).data("bs." + this.type);
        return n || (n = new this.constructor(t.currentTarget, this.getDelegateOptions()), e(t.currentTarget).data("bs." + this.type, n)), clearTimeout(n.timeout), n.hoverState = "in", n.options.delay && n.options.delay.show ? void(n.timeout = setTimeout(function () {
            "in" == n.hoverState && n.show()
        }, n.options.delay.show)) : n.show()
    }, n.prototype.leave = function (t) {
        var n = t instanceof this.constructor ? t : e(t.currentTarget).data("bs." + this.type);
        return n || (n = new this.constructor(t.currentTarget, this.getDelegateOptions()), e(t.currentTarget).data("bs." + this.type, n)), clearTimeout(n.timeout), n.hoverState = "out", n.options.delay && n.options.delay.hide ? void(n.timeout = setTimeout(function () {
            "out" == n.hoverState && n.hide()
        }, n.options.delay.hide)) : n.hide()
    }, n.prototype.show = function () {
        var t = e.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(t);
            var n = e.contains(document.documentElement, this.$element[0]);
            if (t.isDefaultPrevented() || !n) return;
            var r = this,
                i = this.tip(),
                s = this.getUID(this.type);
            this.setContent(), i.attr("id", s), this.$element.attr("aria-describedby", s), this.options.animation && i.addClass("fade");
            var o = "function" == typeof this.options.placement ? this.options.placement.call(this, i[0], this.$element[0]) : this.options.placement,
                u = /\s?auto?\s?/i,
                f = u.test(o);
            f && (o = o.replace(u, "") || "top"), i.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(o).data("bs." + this.type, this), this.options.container ? i.appendTo(this.options.container) : i.insertAfter(this.$element);
            var l = this.getPosition(),
                c = i[0].offsetWidth,
                h = i[0].offsetHeight;
            if (f) {
                var p = o,
                    d = this.$element.parent(),
                    v = this.getPosition(d);
                o = "bottom" == o && l.top + l.height + h - v.scroll > v.height ? "top" : "top" == o && l.top - v.scroll - h < 0 ? "bottom" : "right" == o && l.right + c > v.width ? "left" : "left" == o && l.left - c < v.left ? "right" : o, i.removeClass(p).addClass(o)
            }
            var m = this.getCalculatedOffset(o, l, c, h);
            this.applyPlacement(m, o);
            var g = function () {
                r.$element.trigger("shown.bs." + r.type), r.hoverState = null
            };
            e.support.transition && this.$tip.hasClass("fade") ? i.one("bsTransitionEnd", g).emulateTransitionEnd(150) : g()
        }
    }, n.prototype.applyPlacement = function (t, n) {
        var r = this.tip(),
            i = r[0].offsetWidth,
            s = r[0].offsetHeight,
            o = parseInt(r.css("margin-top"), 10),
            u = parseInt(r.css("margin-left"), 10);
        isNaN(o) && (o = 0), isNaN(u) && (u = 0), t.top = t.top + o, t.left = t.left + u, e.offset.setOffset(r[0], e.extend({
            using: function (e) {
                r.css({
                    top: Math.round(e.top),
                    left: Math.round(e.left)
                })
            }
        }, t), 0), r.addClass("in");
        var f = r[0].offsetWidth,
            l = r[0].offsetHeight;
        "top" == n && l != s && (t.top = t.top + s - l);
        var c = this.getViewportAdjustedDelta(n, t, f, l);
        c.left ? t.left += c.left : t.top += c.top;
        var h = c.left ? 2 * c.left - i + f : 2 * c.top - s + l,
            p = c.left ? "left" : "top",
            d = c.left ? "offsetWidth" : "offsetHeight";
        r.offset(t), this.replaceArrow(h, r[0][d], p)
    }, n.prototype.replaceArrow = function (e, t, n) {
        this.arrow().css(n, e ? 50 * (1 - e / t) + "%" : "")
    }, n.prototype.setContent = function () {
        var e = this.tip(),
            t = this.getTitle();
        e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t), e.removeClass("fade in top bottom left right")
    }, n.prototype.hide = function () {
        function t() {
            "in" != n.hoverState && r.detach(), n.$element.trigger("hidden.bs." + n.type)
        }
        var n = this,
            r = this.tip(),
            i = e.Event("hide.bs." + this.type);
        return this.$element.removeAttr("aria-describedby"), this.$element.trigger(i), i.isDefaultPrevented() ? void 0 : (r.removeClass("in"), e.support.transition && this.$tip.hasClass("fade") ? r.one("bsTransitionEnd", t).emulateTransitionEnd(150) : t(), this.hoverState = null, this)
    }, n.prototype.fixTitle = function () {
        var e = this.$element;
        (e.attr("title") || "string" != typeof e.attr("data-original-title")) && e.attr("data-original-title", e.attr("title") || "").attr("title", "")
    }, n.prototype.hasContent = function () {
        return this.getTitle()
    }, n.prototype.getPosition = function (t) {
        t = t || this.$element;
        var n = t[0],
            r = "BODY" == n.tagName;
        return e.extend({}, "function" == typeof n.getBoundingClientRect ? n.getBoundingClientRect() : null, {
            scroll: r ? document.documentElement.scrollTop || document.body.scrollTop : t.scrollTop(),
            width: r ? e(window).width() : t.outerWidth(),
            height: r ? e(window).height() : t.outerHeight()
        }, r ? {
            top: 0,
            left: 0
        } : t.offset())
    }, n.prototype.getCalculatedOffset = function (e, t, n, r) {
        return "bottom" == e ? {
            top: t.top + t.height,
            left: t.left + t.width / 2 - n / 2
        } : "top" == e ? {
            top: t.top - r,
            left: t.left + t.width / 2 - n / 2
        } : "left" == e ? {
            top: t.top + t.height / 2 - r / 2,
            left: t.left - n
        } : {
            top: t.top + t.height / 2 - r / 2,
            left: t.left + t.width
        }
    }, n.prototype.getViewportAdjustedDelta = function (e, t, n, r) {
        var i = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) return i;
        var s = this.options.viewport && this.options.viewport.padding || 0,
            o = this.getPosition(this.$viewport);
        if (/right|left/.test(e)) {
            var u = t.top - s - o.scroll,
                a = t.top + s - o.scroll + r;
            u < o.top ? i.top = o.top - u : a > o.top + o.height && (i.top = o.top + o.height - a)
        } else {
            var f = t.left - s,
                l = t.left + s + n;
            f < o.left ? i.left = o.left - f : l > o.width && (i.left = o.left + o.width - l)
        }
        return i
    }, n.prototype.getTitle = function () {
        var e, t = this.$element,
            n = this.options;
        return e = t.attr("data-original-title") || ("function" == typeof n.title ? n.title.call(t[0]) : n.title)
    }, n.prototype.getUID = function (e) {
        do e += ~~(1e6 * Math.random()); while (document.getElementById(e));
        return e
    }, n.prototype.tip = function () {
        return this.$tip = this.$tip || e(this.options.template)
    }, n.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
    }, n.prototype.validate = function () {
        this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null)
    }, n.prototype.enable = function () {
        this.enabled = !0
    }, n.prototype.disable = function () {
        this.enabled = !1
    }, n.prototype.toggleEnabled = function () {
        this.enabled = !this.enabled
    }, n.prototype.toggle = function (t) {
        var n = this;
        t && (n = e(t.currentTarget).data("bs." + this.type), n || (n = new this.constructor(t.currentTarget, this.getDelegateOptions()), e(t.currentTarget).data("bs." + this.type, n))), n.tip().hasClass("in") ? n.leave(n) : n.enter(n)
    }, n.prototype.destroy = function () {
        clearTimeout(this.timeout), this.hide().$element.off("." + this.type).removeData("bs." + this.type)
    };
    var r = e.fn.tooltip;
    e.fn.tooltip = t, e.fn.tooltip.Constructor = n, e.fn.tooltip.noConflict = function () {
        return e.fn.tooltip = r, this
    }
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.popover"),
                s = "object" == typeof t && t;
            (i || "destroy" != t) && (i || r.data("bs.popover", i = new n(this, s)), "string" == typeof t && i[t]())
        })
    }
    var n = function (e, t) {
        this.init("popover", e, t)
    };
    if (!e.fn.tooltip) throw new Error("Popover requires tooltip.js");
    n.VERSION = "3.2.0", n.DEFAULTS = e.extend({}, e.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    }), n.prototype = e.extend({}, e.fn.tooltip.Constructor.prototype), n.prototype.constructor = n, n.prototype.getDefaults = function () {
        return n.DEFAULTS
    }, n.prototype.setContent = function () {
        var e = this.tip(),
            t = this.getTitle(),
            n = this.getContent();
        e.find(".popover-title")[this.options.html ? "html" : "text"](t), e.find(".popover-content").empty()[this.options.html ? "string" == typeof n ? "html" : "append" : "text"](n), e.removeClass("fade top bottom left right in"), e.find(".popover-title").html() || e.find(".popover-title").hide()
    }, n.prototype.hasContent = function () {
        return this.getTitle() || this.getContent()
    }, n.prototype.getContent = function () {
        var e = this.$element,
            t = this.options;
        return e.attr("data-content") || ("function" == typeof t.content ? t.content.call(e[0]) : t.content)
    }, n.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find(".arrow")
    }, n.prototype.tip = function () {
        return this.$tip || (this.$tip = e(this.options.template)), this.$tip
    };
    var r = e.fn.popover;
    e.fn.popover = t, e.fn.popover.Constructor = n, e.fn.popover.noConflict = function () {
        return e.fn.popover = r, this
    }
}(jQuery), + function (e) {
    function t(n, r) {
        var i = e.proxy(this.process, this);
        this.$body = e("body"), this.$scrollElement = e(e(n).is("body") ? window : n), this.options = e.extend({}, t.DEFAULTS, r), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", i), this.refresh(), this.process()
    }

    function n(n) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.scrollspy"),
                s = "object" == typeof n && n;
            i || r.data("bs.scrollspy", i = new t(this, s)), "string" == typeof n && i[n]()
        })
    }
    t.VERSION = "3.2.0", t.DEFAULTS = {
        offset: 10
    }, t.prototype.getScrollHeight = function () {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
    }, t.prototype.refresh = function () {
        var t = "offset",
            n = 0;
        e.isWindow(this.$scrollElement[0]) || (t = "position", n = this.$scrollElement.scrollTop()), this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight();
        var r = this;
        this.$body.find(this.selector).map(function () {
            var r = e(this),
                i = r.data("target") || r.attr("href"),
                s = /^#./.test(i) && e(i);
            return s && s.length && s.is(":visible") && [[s[t]().top + n, i]] || null
        }).sort(function (e, t) {
            return e[0] - t[0]
        }).each(function () {
            r.offsets.push(this[0]), r.targets.push(this[1])
        })
    }, t.prototype.process = function () {
        var e, t = this.$scrollElement.scrollTop() + this.options.offset,
            n = this.getScrollHeight(),
            r = this.options.offset + n - this.$scrollElement.height(),
            i = this.offsets,
            s = this.targets,
            o = this.activeTarget;
        if (this.scrollHeight != n && this.refresh(), t >= r) return o != (e = s[s.length - 1]) && this.activate(e);
        if (o && t <= i[0]) return o != (e = s[0]) && this.activate(e);
        for (e = i.length; e--;) o != s[e] && t >= i[e] && (!i[e + 1] || t <= i[e + 1]) && this.activate(s[e])
    }, t.prototype.activate = function (t) {
        this.activeTarget = t, e(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
        var n = this.selector + '[data-target="' + t + '"],' + this.selector + '[href="' + t + '"]',
            r = e(n).parents("li").addClass("active");
        r.parent(".dropdown-menu").length && (r = r.closest("li.dropdown").addClass("active")), r.trigger("activate.bs.scrollspy")
    };
    var r = e.fn.scrollspy;
    e.fn.scrollspy = n, e.fn.scrollspy.Constructor = t, e.fn.scrollspy.noConflict = function () {
        return e.fn.scrollspy = r, this
    }, e(window).on("load.bs.scrollspy.data-api", function () {
        e('[data-spy="scroll"]').each(function () {
            var t = e(this);
            n.call(t, t.data())
        })
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.tab");
            i || r.data("bs.tab", i = new n(this)), "string" == typeof t && i[t]()
        })
    }
    var n = function (t) {
        this.element = e(t)
    };
    n.VERSION = "3.2.0", n.prototype.show = function () {
        var t = this.element,
            n = t.closest("ul:not(.dropdown-menu)"),
            r = t.data("target");
        if (r || (r = t.attr("href"), r = r && r.replace(/.*(?=#[^\s]*$)/, "")), !t.parent("li").hasClass("active")) {
            var i = n.find(".active:last a")[0],
                s = e.Event("show.bs.tab", {
                    relatedTarget: i
                });
            if (t.trigger(s), !s.isDefaultPrevented()) {
                var o = e(r);
                this.activate(t.closest("li"), n), this.activate(o, o.parent(), function () {
                    t.trigger({
                        type: "shown.bs.tab",
                        relatedTarget: i
                    })
                })
            }
        }
    }, n.prototype.activate = function (t, n, r) {
        function i() {
            s.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"), t.addClass("active"), o ? (t[0].offsetWidth, t.addClass("in")) : t.removeClass("fade"), t.parent(".dropdown-menu") && t.closest("li.dropdown").addClass("active"), r && r()
        }
        var s = n.find("> .active"),
            o = r && e.support.transition && s.hasClass("fade");
        o ? s.one("bsTransitionEnd", i).emulateTransitionEnd(150) : i(), s.removeClass("in")
    };
    var r = e.fn.tab;
    e.fn.tab = t, e.fn.tab.Constructor = n, e.fn.tab.noConflict = function () {
        return e.fn.tab = r, this
    }, e(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function (n) {
        n.preventDefault(), t.call(e(this), "show")
    })
}(jQuery), + function (e) {
    function t(t) {
        return this.each(function () {
            var r = e(this),
                i = r.data("bs.affix"),
                s = "object" == typeof t && t;
            i || r.data("bs.affix", i = new n(this, s)), "string" == typeof t && i[t]()
        })
    }
    var n = function (t, r) {
        this.options = e.extend({}, n.DEFAULTS, r), this.$target = e(this.options.target).on("scroll.bs.affix.data-api", e.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", e.proxy(this.checkPositionWithEventLoop, this)), this.$element = e(t), this.affixed = this.unpin = this.pinnedOffset = null, this.checkPosition()
    };
    n.VERSION = "3.2.0", n.RESET = "affix affix-top affix-bottom", n.DEFAULTS = {
        offset: 0,
        target: window
    }, n.prototype.getPinnedOffset = function () {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(n.RESET).addClass("affix");
        var e = this.$target.scrollTop(),
            t = this.$element.offset();
        return this.pinnedOffset = t.top - e
    }, n.prototype.checkPositionWithEventLoop = function () {
        setTimeout(e.proxy(this.checkPosition, this), 1)
    }, n.prototype.checkPosition = function () {
        if (this.$element.is(":visible")) {
            var t = e(document).height(),
                r = this.$target.scrollTop(),
                i = this.$element.offset(),
                s = this.options.offset,
                o = s.top,
                u = s.bottom;
            "object" != typeof s && (u = o = s), "function" == typeof o && (o = s.top(this.$element)), "function" == typeof u && (u = s.bottom(this.$element));
            var f = null != this.unpin && r + this.unpin <= i.top ? !1 : null != u && i.top + this.$element.height() >= t - u ? "bottom" : null != o && o >= r ? "top" : !1;
            if (this.affixed !== f) {
                null != this.unpin && this.$element.css("top", "");
                var l = "affix" + (f ? "-" + f : ""),
                    h = e.Event(l + ".bs.affix");
                this.$element.trigger(h), h.isDefaultPrevented() || (this.affixed = f, this.unpin = "bottom" == f ? this.getPinnedOffset() : null, this.$element.removeClass(n.RESET).addClass(l).trigger(e.Event(l.replace("affix", "affixed"))), "bottom" == f && this.$element.offset({
                    top: t - this.$element.height() - u
                }))
            }
        }
    };
    var r = e.fn.affix;
    e.fn.affix = t, e.fn.affix.Constructor = n, e.fn.affix.noConflict = function () {
        return e.fn.affix = r, this
    }, e(window).on("load", function () {
        e('[data-spy="affix"]').each(function () {
            var n = e(this),
                r = n.data();
            r.offset = r.offset || {}, r.offsetBottom && (r.offset.bottom = r.offsetBottom), r.offsetTop && (r.offset.top = r.offsetTop), t.call(n, r)
        })
    })
}(jQuery), define("lib/bootstrap.min", function () {}), define("text", ["module"], function (e) {
        var t, n, r, i, s, o = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"],
            u = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
            a = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
            f = typeof location != "undefined" && location.href,
            l = f && location.protocol && location.protocol.replace(/\:/, ""),
            c = f && location.hostname,
            h = f && (location.port || undefined),
            p = {},
            d = e.config && e.config() || {};
        t = {
            version: "2.0.12",
            strip: function (e) {
                if (e) {
                    e = e.replace(u, "");
                    var t = e.match(a);
                    t && (e = t[1])
                } else e = "";
                return e
            },
            jsEscape: function (e) {
                return e.replace(/(['\\])/g, "\\$1").replace(/[\f]/g, "\\f").replace(/[\b]/g, "\\b").replace(/[\n]/g, "\\n").replace(/[\t]/g, "\\t").replace(/[\r]/g, "\\r").replace(/[\u2028]/g, "\\u2028").replace(/[\u2029]/g, "\\u2029")
            },
            createXhr: d.createXhr || function () {
                var e, t, n;
                if (typeof XMLHttpRequest != "undefined") return new XMLHttpRequest;
                if (typeof ActiveXObject != "undefined")
                    for (t = 0; t < 3; t += 1) {
                        n = o[t];
                        try {
                            e = new ActiveXObject(n)
                        } catch (r) {}
                        if (e) {
                            o = [n];
                            break
                        }
                    }
                return e
            },
            parseName: function (e) {
                var t, n, r, i = !1,
                    s = e.indexOf("."),
                    o = e.indexOf("./") === 0 || e.indexOf("../") === 0;
                return s !== -1 && (!o || s > 1) ? (t = e.substring(0, s), n = e.substring(s + 1, e.length)) : t = e, r = n || t, s = r.indexOf("!"), s !== -1 && (i = r.substring(s + 1) === "strip", r = r.substring(0, s), n ? n = r : t = r), {
                    moduleName: t,
                    ext: n,
                    strip: i
                }
            },
            xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,
            useXhr: function (e, n, r, i) {
                var s, o, u, a = t.xdRegExp.exec(e);
                return a ? (s = a[2], o = a[3], o = o.split(":"), u = o[1], o = o[0], (!s || s === n) && (!o || o.toLowerCase() === r.toLowerCase()) && (!u && !o || u === i)) : !0
            },
            finishLoad: function (e, n, r, i) {
                r = n ? t.strip(r) : r, d.isBuild && (p[e] = r), i(r)
            },
            load: function (e, n, r, i) {
                if (i && i.isBuild && !i.inlineText) {
                    r();
                    return
                }
                d.isBuild = i && i.isBuild;
                var s = t.parseName(e),
                    o = s.moduleName + (s.ext ? "." + s.ext : ""),
                    u = n.toUrl(o),
                    a = d.useXhr || t.useXhr;
                if (u.indexOf("empty:") === 0) {
                    r();
                    return
                }!f || a(u, l, c, h) ? t.get(u, function (n) {
                    t.finishLoad(e, s.strip, n, r)
                }, function (e) {
                    r.error && r.error(e)
                }) : n([o], function (e) {
                    t.finishLoad(s.moduleName + "." + s.ext, s.strip, e, r)
                })
            },
            write: function (e, n, r, i) {
                if (p.hasOwnProperty(n)) {
                    var s = t.jsEscape(p[n]);
                    r.asModule(e + "!" + n, "define(function () { return '" + s + "';});\n")
                }
            },
            writeFile: function (e, n, r, i, s) {
                var o = t.parseName(n),
                    u = o.ext ? "." + o.ext : "",
                    a = o.moduleName + u,
                    f = r.toUrl(o.moduleName + u) + ".js";
                t.load(a, r, function (n) {
                    var r = function (e) {
                        return i(f, e)
                    };
                    r.asModule = function (e, t) {
                        return i.asModule(e, f, t)
                    }, t.write(e, a, r, s)
                }, s)
            }
        };
        if (d.env === "node" || !d.env && typeof process != "undefined" && process.versions && !!process.versions.node && !process.versions["node-webkit"]) n = require.nodeRequire("fs"), t.get = function (e, t, r) {
            try {
                var i = n.readFileSync(e, "utf8");
                i.indexOf("﻿") === 0 && (i = i.substring(1)), t(i)
            } catch (s) {
                r && r(s)
            }
        };
        else if (d.env === "xhr" || !d.env && t.createXhr()) t.get = function (e, n, r, i) {
            var s = t.createXhr(),
                o;
            s.open("GET", e, !0);
            if (i)
                for (o in i) i.hasOwnProperty(o) && s.setRequestHeader(o.toLowerCase(), i[o]);
            d.onXhr && d.onXhr(s, e), s.onreadystatechange = function (t) {
                var i, o;
                s.readyState === 4 && (i = s.status || 0, i > 399 && i < 600 ? (o = new Error(e + " HTTP status: " + i), o.xhr = s, r && r(o)) : n(s.responseText), d.onXhrComplete && d.onXhrComplete(s, e))
            }, s.send(null)
        };
        else if (d.env === "rhino" || !d.env && typeof Packages != "undefined" && typeof java != "undefined") t.get = function (e, t) {
            var n, r, i = "utf-8",
                s = new java.io.File(e),
                o = java.lang.System.getProperty("line.separator"),
                u = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(s), i)),
                a = "";
            try {
                n = new java.lang.StringBuffer, r = u.readLine(), r && r.length() && r.charAt(0) === 65279 && (r = r.substring(1)), r !== null && n.append(r);
                while ((r = u.readLine()) !== null) n.append(o), n.append(r);
                a = String(n.toString())
            } finally {
                u.close()
            }
            t(a)
        };
        else if (d.env === "xpconnect" || !d.env && typeof Components != "undefined" && Components.classes && Components.interfaces) r = Components.classes, i = Components.interfaces, Components.utils["import"]("resource://gre/modules/FileUtils.jsm"), s = "@mozilla.org/windows-registry-key;1" in r, t.get = function (e, t) {
            var n, o, u, a = {};
            s && (e = e.replace(/\//g, "\\")), u = new FileUtils.File(e);
            try {
                n = r["@mozilla.org/network/file-input-stream;1"].createInstance(i.nsIFileInputStream), n.init(u, 1, 0, !1), o = r["@mozilla.org/intl/converter-input-stream;1"].createInstance(i.nsIConverterInputStream), o.init(n, "utf-8", n.available(), i.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER), o.readString(n.available(), a), o.close(), n.close(), t(a.value)
            } catch (f) {
                throw new Error((u && u.path || "") + ": " + f)
            }
        };
        return t
    }), define("text!html/layout.html", [], function () {
        return '<div class="header_hcs">\r\n      <img src="img/header.png" style="height:150px;width:1500px;display: block; margin-left: auto; margin-right: auto; ">  <div class="input_hcs" style="margin-top:10px; ">\r\n      <div class="inner1">\r\n      <div class="inner11">\r\n      <div class="name1">\r\n      <label for="TeacherName" class="label11">Teacher Name</label>\r\n      <input type="text" name="TeacherName" id="TeacherName" class="tname">\r\n      </div>\r\n            </div>\r\n      <div class="inner12">\r\n       <label for="class" class="label13">Class</label>\r\n      <select id="class" class="class_hcs" style="width:180px;">\r\n      <option value="Select">Select Option</option>\r\n      <option value="Pre Nur">Pre Nur</option>\r\n      <option value="Nur">Nur</option>\r\n       <option value="Kindergarten">kindergarten</option>\r\n      <option value="Grade 1">Grade 1</option>\r\n      <option value="Grade 2">Grade 2</option>\r\n      <option value="Grade 3">Grade 3</option>\r\n      <option value="Grade 4">Grade 4</option>\r\n      <option value="Grade 5">Grade 5</option>\r\n      <option value="Grade 6">Grade 6</option>\r\n      </select>\r\n      </div>\r\n      <div class="inner13">\r\n       <label for="school" class="label14">School</label>\r\n      <input type="text" name="school" id="school" class="school_hcs">\r\n      </div>\r\n      <div class="inner14">\r\n      <label for="subject" class="label12">Subject</label>\r\n      <select id="subject" name="subject" class="sname">\r\n      <option value="Select">Select Options</option>\r\n      <option value="General">General</option>\r\n      <option value="Unit of Enquiry">Unit of Enquiry</option>\r\n      <option value="Language">Language</option>\r\n      <option value="Math">Math</option>\r\n      <option value="Sciences">Sciences</option>\r\n      <option value="Social Studies">Social Studies</option>\r\n      <option value="ICT">ICT</option>\r\n      <option value="Art">Art</option>\r\n      <option value="Music">Music</option>\r\n      <option value="PE">PE</option>\r\n      <option value="Dance">Dance</option>\r\n      <option value="Others">Others</option>\r\n      </select>\r\n      </div>\r\n      </div>\r\n      <div class="inner2">\r\n      <button class="how-to-use" data-toggle="modal" data-target="#help">How To Use</button>\r\n      <a href="mailto:magicalworldofstories@gmail.com" style = "color: black;"><button class="feedback">Contact Us</button></a>\r\n      </div>\r\n      </div>\r\n            </div>\r\n      <nav id="top-nav" class="navbar navbar-default navbar-fixed-top" role="navigation">\r\n  <div class="nav navbar-nav navbar-left" style="display: none;">\r\n        <div class="navbar-brand" style="display: none;">Student Report Writer</div>\r\n    </div>\r\n    <div class="container-fluid" style="display: none;">\r\n        <div class="nav navbar-nav navbar-left dynamic" style="display: none;"></div>\r\n        <ul class="nav navbar-nav navbar-right">\r\n            <li><a data-toggle="modal" data-target="#help" href="#">How to Use</a></li>\r\n            <li><a href="https://hcs-help.000webhostapp.com/" target="_blank" style="display: none;">HCS</a></li>\r\n            <li>\r\n                <div class="navbar-text" style="display: none;">\r\n                    <span>&#169;</span>\r\n                    <a href="https://hcs-help.000webhostapp.com/" target="_blank">HCS</a></div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n<section id="content"></section>\r\n<section id="social"></section>\r\n<section id="result"></section>\r\n     <div class="modal fade" id="help" tabindex="-1" role="dialog" aria-hidden="true">\r\n    <div class="modal-dialog modal-lg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n                <h3 class="modal-title" style = "text-align: center;">How to Use</h3>\r\n            </div>\r\n            <div class="modal-body">\r\n                <section>\r\n                    <h4>Welcome to Magical Report Card Writer!</h4>\r\n       <p> <b>Supper Time Saver!!</b><br><br>You will save hours of writing report card comments by using our Magical Report Card Writer. Our magical tool contains polished, pre-written sentences which are informative, insightful, clear and helpful for grades K-6.<br><br> Comments address students who are meeting the benchmark, excelling, demonstrating growth and needing improvement and continued support. We have also included recommendations and suggestions for the students. <br><br>All the comments are well organised into different categories for ease of usage. Just add your student’s name, gender and select the sentence you find appropriate for you student … Voila your report is ready. You can copy paste the paragraph into your report card format or you can export the comments into our pre-formatted report card template. In case you wish to benefit from our template please ensure to fill in – Teacher’s name, school, subject etc on the main page.<br><br>  <i>Special focus on IB PYP related comments: IB PYP Learner Profile and ATL skills This resource will save you Tons of time.</i> <br><br><b>Pixie Teacher</b></p>\r\n            \r\n                </section>\r\n\r\n                <section>\r\n                    <h4>How to use:</h4>\r\n\r\n                    <ol class="form-inline" type="1">\r\n    <li>\r\n                            <div>On the top side, enter the teacher\'s name, class, school\'s name and the subject.</div>\r\n                            <div class="panel panel-default has-background" style = "display:flex;flex-direction:row;justify-content:space-between; background-color: #fdffb642;border: 2px solid #f5f5f5;box-shadow: 0 0 7px rgba(0,0,0,0.5); width:100%">\r\n                                <span style="display:inline-block; width:20%;">\r\n                                    <label for="student-name">Teacher Name</label><input type="text"\r\n                              class="form-control"\r\n       id="student-name" style="width:100%;"/>\r\n</span>\r\n  <span style="display:inline-block; width:20%;"><label for="class">Class</label>  <select id="class" class="class_hcs" style = "background-color: white">   <option value="Select">Select Option</option>   <option value="Pre Nur">Pre Nur</option><option value="Nur">Nur</option><option value="Kindergarten">kindergarten</option><option value="Grade 1">Grade 1</option><option value="Grade 2">Grade 2</option><option value="Grade 3">Grade 3</option><option value="Grade 4">Grade 4</option><option value="Grade 5">Grade 5</option><option value="Grade 6">Grade 6</option></select></span><span style="display:inline-block; width:20%;">\r\n                                    <label for="student-name">School</label><input type="text"\r\n                              class="form-control"\r\n       id="student-name" style="width: 100%;"/>\r\n</span>\r\n <span style="display:inline-block; width: 20%;">\r\n                                    <label for="student-name">Subject</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <select id="subject" name="subject" class="sname" style = "background-color:white;width:150px;"><option value="Select">Select Options</option><option value="General">General</option><option value="Unit of Enquiry">Unit of Enquiry</option><option value="Language">Language</option><option value="Math">Math</option><option value="Sciences">Sciences</option><option value="Social Studies">Social Studies</option><option value="ICT">ICT</option><option value="Art">Art</option><option value="Music">Music</option><option value="PE">PE</option><option value="Dance">Dance</option><option value="Others">Others</option></select>\r\n</span>\r\n</div>\r\n\r\n    <div>\r\n  These details will be used only in case you decide to use the <b>Export</b> feature of the <b>Magical Report Card Writer</b>. This feature is only available in the full version.\r\n     </div>\r\n  </li>\r\n                                                                                                                                                                                          <li>\r\n  <div>On the left side, enter the student\'s name and gender.</div>\r\n                            <div class="panel panel-default has-background" style = "    background-color: #fdffb642;border: 2px solid #f5f5f5;box-shadow: 0 0 7px rgba(0,0,0,0.5);">\r\n                                <span>\r\n                                    <label for="student-name">Student Name</label><input type="text"\r\n                                                                                         class="form-control"\r\n value="Steve"                                                                                        id="student-name"/>\r\n                                </span>\r\n                                <span class="radio">\r\n                                    <label class="radio-inline">\r\n                                        <input type="radio" name="gender" value="male"/>\r\n                                        Boy\r\n                                    </label>\r\n                                    <label class="radio-inline">\r\n                                        <input type="radio" name="gender" value="female"/>\r\n                                        Girl\r\n                                    </label>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div>\r\n                                This name will always appear in the first sentence. Thereafter, the correct gender will be automatically applied in the subsequent sentences.                          </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>Select comments that apply for each subject area. Open subject areas by clicking on\r\n                                them.\r\n                            </div>\r\n\r\n                            <div class="panel panel-default list-group-item">\r\n                                <a class="panel-heading panel-title">Social/Emotional</a>\r\n                                <ul class="children panel-collapse in collapse list-group"\r\n                                    id="general-statements-children">\r\n                                    <li class="list-group-item leaf"><input type="checkbox">\r\n                                        <span class="text-item"><span>This is an example sentence of </span><span>[Name]</span><span> this </span><select>\r\n                                            <option>term</option>\r\n                                            <option>quarter</option>\r\n                                            <option>semester</option>\r\n                                            <option>year</option>\r\n                                        </select><span>.</span></span></li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n\r\n                            <div>A paragraph will get automatically generated in the text box on the left side.\r\n                            </div>\r\n\r\n                            <textarea class="form-control" readonly="readonly">This is an example sentence of Steve this term.</textarea>\r\n\r\n                            <div class="controls">\r\n                                <button class="select-text btn">Select Text</button>\r\n               <button class="btn export" id="export" >Export</button>\r\n                  <button class="clear btn btn-danger">Clear All</button>\r\n                                <div class="stats">\r\n                                    <div class="chars"><span class="count">47</span><span class="unit">Characters</span>\r\n                                    </div>\r\n                                    <div class="words"><span class="count">9</span><span class="unit">Words</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>If you do not want to use a selected comment you can uncheck the comment and it will be removed.\r\n                            </div>\r\n\r\n                        </li>\r\n                        <li>\r\n                            When you are ready, click on the <b>‘Select Text’</b> tab to select the paragraph. Copy and paste the paragraph into your report document. Adjust comments as needed so that the writing is fluid and paints a picture of a specific child.                       </li>\r\n <li>To clear out the comment and start with a new student comment , use the <b>‘Clear All’</b> tab.</li>   <li>  User can use <b>‘Export’</b> tab (only available in the full version) to generate a pdf file of the report card in a pre-designed format.<br><br> <span><img src="img/pdf.jpeg" alt="PDF Format" style="width:500px;height:600px;"></span></li> \r\n               </ol>\r\n                </section>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-success" data-dismiss="modal">Ok, got it !</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n      <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\r\n      <footer class="footer_hcs">\r\n       <p class="social_hcs">Join us : <a href=" https://www.facebook.com/Pixieteacher" target="_blank"><i class="fa fa-facebook-square"></i></a><a href=" https://www.instagram.com/pixieteacher" target="_blank"><i class="fa fa-instagram"></i></a><a href="https://www.pinterest.co.uk/magicalworldofstories0007/_created/" target="_blank"><i class="fa fa-pinterest-square"></i></a><a href="https://twitter.com/magical_world1" target="_blank"><i class="fa fa-twitter-square"></i></a></p>\r\n       <p>&copy; Powered by <a href="https://hcs-help.000webhostapp.com/" target="_blank">HCS</a></p>\r\n      <span>Mail us at: <a href="mailto:magicalworldofstories@gmail.com">magicalworldofstories@gmail.com</a></span>\r\n      </footer>\r\n  <h4 style = "text-align: center;margin:0px;padding:10px;padding-top:0px;background-color:black;border: 5px solid yellow;border-top-color: black; color:white;"> This is a demo version. Kindly get the full version for all the premium features. <a href="https://www.teacherspayteachers.com/Store/Magical-World-Of-Stories" target="_blank">Click here</a> to visit our store.</h4> \r\n'
    }),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!MainLayout", ["text!html/layout.html"], function (e) {
            var n;
            return n = function (n) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, n), r.prototype.template = e, r.prototype.regions = {
                    top: "#top-nav .dynamic",
                    content: "#content",
                    result: "#result",
                    social: "#social"
                }, r
            }(Marionette.LayoutView)
        })
    }.call(this),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!Categories", [], function () {
            var e, n;
            return n = function (n) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, n), r.prototype.parse = function (t) {
                    var n;
                    if (t != null ? t.content : void 0) t.content = new e(t.content, {
                        parse: !0,
                        level: ((n = t.level) != null ? n : 0) + 1,
                        excluded: t.excluded
                    });
                    return t.short == null && (t.short = t.text.toLowerCase().replace(/[\s|\/]+/g, "-")), t
                }, r
            }(Backbone.Model), e = function (e) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, e), r.prototype.initialize = function (e, t) {
                    return t.level != null ? t.level : t.level = 0
                }, r.prototype.model = function (e, t) {
                    return new n(_.extend(e, {
                        level: t.level
                    }), t)
                }, r.prototype.parse = function (e, t) {
                    return t.excluded > 0 && e.push({
                        text: "EXCLUDED",
                        excluded: t.excluded
                    }), e
                }, r
            }(Backbone.Collection)
        })
    }.call(this),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!TopNavView", [], function () {
            var e, n;
            return e = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "li", n.prototype.className = "", n.prototype.template = "<a href='#{{short}}-children' data-toggle='collapse' data-parent='#all-items'>{{text}}</a>", n
            }(Marionette.ItemView), n = function (n) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, n), r.prototype.tagName = "ul", r.prototype.className = "nav navbar-nav", r.prototype.childView = e, r
            }(Marionette.CollectionView)
        })
    }.call(this), define("text!html/content-excluded.html", [], function () {
        return '<span class="excluded">{{excluded}} additional {{#if singular}}comment in this category is{{else}}comments in this category are{{/if}} available in the <a\r\n        href="https://www.teacherspayteachers.com/Store/Magical-World-Of-Stories" target="_blank">full version</a> offering more than 1100 comments total.</span>'
    }),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!ContentExcluded", ["text!html/content-excluded.html"], function (e) {
            var n;
            return n = function (n) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, n), r.prototype.tagName = "li", r.prototype.className = "list-group-item list-group-item-warning", r.prototype.template = e, r.prototype.serializeData = function () {
                    var e;
                    return e = r.__super__.serializeData.apply(this, arguments), e.singular = e.excluded === 1, e
                }, r.prototype.getText = function () {
                    return ""
                }, r.prototype.hasChecked = function () {
                    return !1
                }, r.prototype.updateText = function () {}, r.prototype.clearAll = function () {}, r.prototype.useGlobals = function () {}, r
            }(Marionette.ItemView)
        })
    }.call(this), define("text!html/content-item.html", [], function () {
        return '<input type="checkbox"/>\r\n<span class="text-item"></span>'
    }),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!ContentLeaf", ["text!html/content-item.html"], function (e) {
            var n, r, i, s, o, u;
            return i = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "span", n.prototype.template = "{{text}}", n.prototype.globalName = void 0, n.prototype.events = {
                    click: function () {
                        return this.trigger("toggle")
                    }
                }, n.prototype.serializeData = function () {
                    var e;
                    return {
                        text: ((e = this.globalName) != null ? e.length : void 0) > 0 ? this.globalName : this.model.get("text")
                    }
                }, n.prototype.getText = function () {
                    return this.model.get("text")
                }, n.prototype.useGlobals = function (e) {
                    return this.globalName = e.name, this.render()
                }, n.prototype.clearAll = function () {
                    return this.globalName = void 0, this.render()
                }, n
            }(Marionette.ItemView), u = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "span", n.prototype.template = "{{text}}", n.prototype.events = {
                    click: function () {
                        return this.trigger("toggle")
                    }
                }, n.prototype.getText = function () {
                    return this.model.get("text")
                }, n.prototype.clearAll = function () {}, n
            }(Marionette.ItemView), r = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "input", n.prototype.attributes = function () {
                    var e;
                    return e = this.model.get("text"), 0 === e.indexOf("[") ? {
                        placeholder: e.substring(1, e.length - 1)
                    } : {}
                }, n.prototype.template = " ", n.prototype.events = {
                    click: function () {
                        return this.trigger("check")
                    },
                    input: function () {
                        return this.trigger("check")
                    }
                }, n.prototype.getText = function () {
                    var e;
                    return e = this.$el.val(), e.length > 0 ? e : this.model.get("text")
                }, n.prototype.clearAll = function () {
                    return this.$el.val("")
                }, n
            }(Marionette.ItemView), s = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "option", n.prototype.template = "{{value}}", n
            }(Marionette.ItemView), o = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "select", n.prototype.childView = s, n.prototype.events = {
                    mousedown: function () {
                        return this.trigger("check")
                    },
                    change: function () {
                        return this.trigger("check")
                    }
                }, n.prototype.initialize = function () {
                    var e, t, n;
                    return n = this.model.get("text"), e = n.substring(1, n.length - 1), t = e.split("/"), this.collection = new Backbone.Collection(_.map(t, function (e) {
                        return {
                            value: e
                        }
                    }))
                }, n.prototype.getText = function () {
                    return this.$el.val()
                }, n.prototype.clearAll = function () {
                    return this.$el.val(this.children.first().model.get("value"))
                }, n
            }(Marionette.CollectionView), n = function (n) {
                function s() {
                    return s.__super__.constructor.apply(this, arguments)
                }
                return t(s, n), s.prototype.tagName = "li", s.prototype.className = "list-group-item leaf", s.prototype.template = e, s.prototype.childViewContainer = ".text-item", s.prototype.ui = {
                    checkbox: "input"
                }, s.prototype.events = {
                    "click input": "updateText",
                    click: function (e) {
                        if (e.target === this.el) return this.ui.checkbox.prop("checked", !this.hasChecked()), this.updateText()
                    }
                }, s.prototype.childEvents = {
                    toggle: function () {
                        return this.ui.checkbox.prop("checked", !this.hasChecked()), this.updateText()
                    },
                    check: function () {
                        return this.ui.checkbox.prop("checked", !0), this.updateText()
                    }
                }, s.prototype.initialize = function () {
                    var e;
                    return e = this.parseParts(this.model.get("text")), this.collection = new Backbone.Collection(e)
                }, s.prototype.parseParts = function (e) {
                    var t, n, r, i, s, o;
                    i = [], r = "text", n = "";
                    for (s = 0, o = e.length; s < o; s++) {
                        t = e[s];
                        switch (t) {
                            case "[":
                                r === "bracket" ? n += t : (n.length > 0 && i.push({
                                    text: n,
                                    mode: r
                                }), r = "bracket", n = t);
                                break;
                            case "]":
                                r === "bracket" ? (i.push({
                                    text: n + t,
                                    mode: r
                                }), n = "", r = "text") : n += t;
                                break;
                            case "_":
                                r === "field" ? n += t : (n.length > 0 && i.push({
                                    text: n,
                                    mode: r
                                }), r = "field", n = t);
                                break;
                            default:
                                r === "field" ? (i.push({
                                    text: n,
                                    mode: r
                                }), r = "text", n = t) : n += t
                        }
                    }
                    return n.length > 0 && i.push({
                        text: n,
                        mode: r
                    }), i
                }, s.prototype.childView = function (e) {
                    var t, n, s;
                    t = e.model, n = t.get("text");
                    switch (t.get("mode")) {
                        case "bracket":
                            if ((s = n.substring(1, n.length - 1).toLowerCase()) === "he/she" || s === "his/her" || s === "her/his" || s === "him/her" || s === "himself/herself" || s === "herself/himself") return new u(e);
                            if (n.toLowerCase() === "[name]") return new i(e);
                            if (n.indexOf("/") > 0) return new o(e);
                            return new r(e);
                        case "field":
                            return new r(e)
                    }
                    return new u(e)
                }, s.prototype.getText = function () {
                    var e;
                    return this.hasChecked() ? (e = "", this.children.each(function (t) {
                        return e += t.getText()
                    }), $.trim(e)) : ""
                }, s.prototype.hasChecked = function () {
                    return this.ui.checkbox.is(":checked")
                }, s.prototype.updateText = function () {
                    return this.hasChecked() ? this.$el.addClass("list-group-item-info") : this.$el.removeClass("list-group-item-info"), this.trigger("updatetext")
                }, s.prototype.clearAll = function () {
                    return this.ui.checkbox.prop("checked", !1), this.$el.removeClass("list-group-item-info"), this.children.each(function (e) {
                        return e.clearAll()
                    })
                }, s.prototype.useGlobals = function (e) {
                    return this.children.each(function (t) {
                        return typeof t.useGlobals == "function" ? t.useGlobals(e) : void 0
                    })
                }, s
            }(Marionette.CompositeView)
        })
    }.call(this), define("text!html/content-category.html", [], function () {
        return '{{#if isAccordion}}\r\n    <a class="panel-heading panel-title" data-toggle="collapse" data-parent="#{{parentId}}" href="#{{short}}-children">{{text}}</a>\r\n    <div class="children panel-collapse {{#if isExpanded}}in{{/if}} collapse list-group" id="{{short}}-children"></div>\r\n{{else}}\r\n    <span class="category-title">{{text}}</span>\r\n    <div class="children list-group"></div>\r\n{{/if}}\r\n\r\n'
    }),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!ContentTree", ["cs!ContentExcluded", "cs!ContentLeaf", "text!html/content-category.html"], function (e, n, r) {
            var i, s, o;
            return i = function () {
                function t() {}
                return t.prototype.getChildView = function (t) {
                    return t.has("content") ? s : t.get("excluded") > 0 ? e : n
                }, t.prototype.childEvents = {
                    updatetext: function () {
                        return typeof this.textUpdated == "function" && this.textUpdated(), this.trigger("updatetext")
                    }
                }, t.prototype.childViewOptions = function (e, t) {
                    return {
                        parentId: _.result(this, "id"),
                        isExpanded: this.isExpanded && t === 0
                    }
                }, t.prototype.getText = function () {
                    var e;
                    return e = "", this.children.each(function (t) {
                        var n;
                        n = t.getText();
                        if ((n != null ? n.length : void 0) > 0) return e.length > 0 && (e += " "), e += n
                    }), $.trim(e)
                }, t.prototype.clearAll = function () {
                    return this.$el.removeClass("panel-info"), this.children.each(function (e) {
                        return e.clearAll()
                    })
                }, t.prototype.hasChecked = function () {
                    return this.children.some(function (e) {
                        return e.hasChecked()
                    })
                }, t.prototype.useGlobals = function (e) {
                    return this.children.each(function (t) {
                        return t.useGlobals(e)
                    })
                }, t
            }(), s = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "div", n.prototype.className = function () {
                    return this.isAccordion() ? "panel panel-default list-group-item" : "list-group-item"
                }, n.prototype.id = function () {
                    return this.model.get("short")
                }, n.prototype.template = r, n.prototype.childViewContainer = ".children", n.prototype.ui = {
                    title: "> .panel-title",
                    container: "> .collapse"
                }, n.prototype.events = {
                    "shown.bs.collapse @ui.container": function () {
                        var e;
                        return e = this.ui.title.offset().top, e < $(document).scrollTop() && $(document).scrollTop(e - $("#top-nav").height() - 5), !1
                    }
                }, n.prototype.initialize = function (e) {
                    return this.parentId = e.parentId, this.isExpanded = e.isExpanded, this.collection = this.model.get("content")
                }, n.prototype.isAccordion = function () {
                    var e;
                    return (e = this.model.get("level")) === 0 || e === 1
                }, n.prototype.serializeData = function () {
                    return _.extend(n.__super__.serializeData.apply(this, arguments), {
                        isAccordion: this.isAccordion(),
                        parentId: this.parentId + (this.model.get("level") > 0 ? "-children" : ""),
                        isExpanded: this.isExpanded
                    })
                }, n.prototype.expand = function () {
                    var e;
                    this.ui.container.collapse("toggle");
                    if (0 === this.model.get("level")) return (e = this.children.first()) != null ? e.expand() : void 0
                }, n.prototype.textUpdated = function () {
                    return this.hasChecked() ? this.$el.addClass("panel-info") : this.$el.removeClass("panel-info")
                }, n
            }(Marionette.CompositeView), o = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.tagName = "div", n.prototype.id = "all-items", n.prototype.isExpanded = !0, n
            }(Marionette.CollectionView), _.extend(s.prototype, i.prototype), _.extend(o.prototype, i.prototype), o
        })
    }.call(this), define("text!html/result.html", [], function () {
        return '<div id="globals" >\r\n    <span>\r\n        <label for="student-name">Student Name</label><input type="text" class="form-control" id="student-name"/>\r\n    </span>\r\n    <span class="radio">\r\n        <label class="radio-inline">\r\n            <input type="radio" name="gender" value="male"/>\r\n            Boy\r\n        </label>\r\n        <label class="radio-inline">\r\n            <input type="radio" name="gender" value="female"/>\r\n            Girl\r\n        </label>\r\n    </span>\r\n</div>\r\n<textarea class="form-control" readonly="readonly" style="padding-top:15px;height:277px;"></textarea>\r\n<div class="controls">\r\n    <button class="select-text btn btn-success">Select Text</button>\r\n <button class="btn export" id="export" disabled>Export</button>\r\n   <button class="clear btn btn-danger">Clear All</button>\r\n    <div class="stats">\r\n        <div class="chars"><span class="count">0</span><span class="unit">Characters</span></div>\r\n        <div class="words"><span class="count">0</span><span class="unit">Words</span></div>\r\n    </div>\r\n</div>'
    }),
    function (e) {
        "use strict";

        function r(e) {
            var t = [],
                n = 0,
                r = e.length,
                i, s;
            while (n < r) i = e.charCodeAt(n++), (i & 63488) == 55296 && n < r ? (s = e.charCodeAt(n++), (s & 64512) == 56320 ? t.push(((i & 1023) << 10) + (s & 1023) + 65536) : t.push(i, s)) : t.push(i);
            return t
        }

        function i(e, t) {
            var n = e && (Object.prototype.toString.call(e) === "[object NodeList]" && e.length || e.nodeType === 1),
                r = t && typeof t == "function";
            return "console" in window && "warn" in console && (n || console.warn("Countable: No valid elements were found"), r || console.warn('Countable: "' + t + '" is not a valid callback function')), n && r
        }

        function s(e) {
            var t = {
                hardReturns: !1,
                stripTags: !1,
                ignoreReturns: !1
            };
            for (var n in e) t.hasOwnProperty(n) && (t[n] = e[n]);
            return t
        }

        function o(e, t) {
            var n = "value" in e ? e.value : e.innerText || e.textContent,
                i;
            return t.stripTags && (n = n.replace(/<\/?[a-z][^>]*>/gi, "")), i = n.trim(), {
                paragraphs: i ? (i.match(t.hardReturns ? /\n{2,}/g : /\n+/g) || []).length + 1 : 0,
                words: i ? (i.replace(/['";:,.?¿\-!¡]+/g, "").match(/\S+/g) || []).length : 0,
                characters: i ? r(i.replace(/\s/g, "")).length : 0,
                all: r(t.ignoreReturns ? n.replace(/[\n\r]/g, "") : n).length
            }
        }

        function u(e, t) {
            var n = e.length;
            if (typeof n != "undefined")
                while (n--) t(e[n]);
            else t(e)
        }
        var t = [],
            n = "oninput" in document ? "input" : "keyup";
        String.prototype.trim || (String.prototype.trim = function () {
            return this.replace(/^\s+|\s+$/g, "")
        });
        var a = {
            live: function (e, r, a) {
                var f = s(a),
                    l = function (e) {
                        var i = function () {
                            r.call(e, o(e, f))
                        };
                        t.push({
                            element: e,
                            handler: i
                        }), i(), e.addEventListener ? e.addEventListener(n, i, !1) : e.attachEvent && e.attachEvent("on" + n, i)
                    };
                if (!i(e, r)) return;
                return e.length ? u(e, l) : l(e), this
            },
            die: function (e) {
                if (!i(e, function () {})) return;
                return u(e, function (e) {
                    var r;
                    u(t, function (t) {
                        t.element === e && (r = t)
                    });
                    if (!r) return;
                    e.removeEventListener ? e.removeEventListener(n, r.handler, !1) : e.detachEvent && e.detachEvent("on" + n, r.handler), t.splice(t.indexOf(r), 1)
                }), this
            },
            once: function (e, t, n) {
                if (!i(e, t)) return;
                return u(e, function (e) {
                    t.call(e, o(e, s(n)))
                }), this
            },
            enabled: function (e) {
                var n = !1;
                return e && e.nodeType === 1 && u(t, function (t) {
                    t.element === e && (n = !0)
                }), n
            }
        };
        typeof exports == "object" ? module.exports = a : typeof define == "function" && define.amd ? define("lib/countable", [], function () {
            return a
        }) : e.Countable = a
    }(this),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!ResultView", ["text!html/result.html", "lib/countable"], function (e, n) {
            var r;
            return r = function (r) {
                function i() {
                    return i.__super__.constructor.apply(this, arguments)
                }
                return t(i, r), i.prototype.template = e, i.prototype.className = "form-inline", i.prototype.ui = {
                    name: "#student-name",
                    gender: "[name=gender]",
                    textarea: "textarea",
                    charCount: ".chars .count",
                    wordCount: ".words .count",
                    clear: ".clear"
                }, i.prototype.events = {
                    "click .select-text": function () {
                        return this.ui.textarea.select()
                    },
                    "input @ui.name": "updateGlobals",
                    "change @ui.name": "updateGlobals",
                    "click @ui.gender": "updateGlobals",
                    "click @ui.clear": "clearAll"
                }, i.prototype.updateGlobals = function () {
                    return this.trigger("updateglobals")
                }, i.prototype.clearAll = function () {
                    return this.ui.name.val(""), this.ui.gender.prop("checked", !1), this.setText(""), this.trigger("clearall")
                }, i.prototype.getGlobalValues = function () {
                    return {
                        name: this.ui.name.val(),
                        gender: this.ui.gender.filter(":checked").val()
                    }
                }, i.prototype.setText = function (e) {
                    return this.ui.textarea.val(e), n.once(this.ui.textarea[0], function (e) {
                        return function (t) {
                            return e.ui.charCount.text(t.all), e.ui.wordCount.text(t.words)
                        }
                    }(this))
                }, i
            }(Marionette.ItemView)
        })
    }.call(this),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!Controller", [], function () {
            var e;
            return e = function (e) {
                function n() {
                    return n.__super__.constructor.apply(this, arguments)
                }
                return t(n, e), n.prototype.initialize = function (e) {
                    return this.content = e.content, this.result = e.result, this.listenTo(this.content, "updatetext", this.onTextUpdate), this.listenTo(this.result, "updateglobals", this.onTextUpdate), this.listenTo(this.result, "clearall", function () {
                        return this.content.clearAll()
                    })
                }, n.prototype.onTextUpdate = function () {
                    var e;
                    return e = this.result.getGlobalValues(), this.content.useGlobals(e), this.result.setText(this.processPlaceholders(this.content.getText(), e))
                }, n.prototype.processPlaceholders = function (e, t) {
                    var n, r;
                    return ((n = t.name) != null ? n.length : void 0) > 0 && (e = e.replace(/\[Name\]/i, t.name)), t.gender != null && (e = e.replace(/\. \[Name\]'s/ig, t.gender === "male" ? ". His" : ". Her"), e = e.replace(/\[Name\]'s/ig, t.gender === "male" ? "his" : "her"), e = e.replace(/\. \[Name\]/ig, t.gender === "male" ? ". He" : ". She"), e = e.replace(/\[He\/She\]/g, t.gender === "male" ? "He" : "She"), e = e.replace(/\[he\/she\]/g, t.gender === "male" ? "he" : "she"), e = e.replace(/\[His\/Her\]/g, t.gender === "male" ? "His" : "Her"), e = e.replace(/\[his\/her\]/g, t.gender === "male" ? "his" : "her"), e = e.replace(/\[Her\/His\]/g, t.gender === "male" ? "His" : "Her"), e = e.replace(/\[boy\/girl\]/g, t.gender === "male" ? "boy" : "girl"), e = e.replace(/\[Boy\/Girl\]/g, t.gender === "male" ? "Boy" : "Girl"), e = e.replace(/\[her\/his\]/g, t.gender === "male" ? "his" : "her"), e = e.replace(/\[Him\/Her\]/g, t.gender === "male" ? "Him" : "Her"), e = e.replace(/\[him\/her\]/g, t.gender === "male" ? "him" : "her"), e = e.replace(/\[herself\/himself\]/g, t.gender === "male" ? "himself" : "herself"), e = e.replace(/\[himself\/herself\]/g, t.gender === "male" ? "himself" : "herself")), ((r = t.name) != null ? r.length : void 0) > 0 && (e = e.replace(/\[Name\]/ig, t.name)), e = e.replace(/\ a\ (a|e|i|o|u)/g, " an $1"), $.trim(e)
                }, n
            }(Marionette.Controller)
        })
    }.call(this), define("text!html/social.html", [], function () {
        return '<div class="fb-like" data-href="{{store-url}}" data-layout="box_count" data-action="like" data-show-faces="false" data-share="false"></div>\r\n<a class="twitter-share-button" href="https://twitter.com/share" data-count="vertical" data-url="{{store-url}}">Tweet</a>\r\n<div class="g-plusone" data-size="tall" data-href="{{store-url}}"></div>'
    }),
    function () {
        var e = {}.hasOwnProperty,
            t = function (t, n) {
                function i() {
                    this.constructor = t
                }
                for (var r in n) e.call(n, r) && (t[r] = n[r]);
                return i.prototype = n.prototype, t.prototype = new i, t.__super__ = n.prototype, t
            };
        define("cs!SocialView", ["text!html/social.html"], function (e) {
            var n;
            return n = function (n) {
                function r() {
                    return r.__super__.constructor.apply(this, arguments)
                }
                return t(r, n), r.prototype.template = e, r.prototype.className = "buttons", r.prototype.serializeData = function () {
                    return {
                        "store-url": "https://hcs-help.000webhostapp.com/"
                    }
                }, r.prototype.onRender = function () {
                    return function (e, t, n) {
                            var r, i;
                            if (e.getElementById(n)) return;
                            return i = void 0, r = $("body").children()[0], i = e.createElement(t), i.id = n, i.src = "http://connect.facebook.net", r.parentNode.insertBefore(i, r)
                        }(document, "script", "facebook-jssdk"), window.twttr = function (e, t, n) {
                            var r, i, s;
                            if (e.getElementById(n)) return;
                            return r = $("body").children()[0], i = e.createElement(t), i.id = n, i.src = "https://platform.twitter.com", r.parentNode.insertBefore(i, r), window.twttr || (s = {
                                _e: [],
                                ready: function (e) {
                                    s._e.push(e)
                                }
                            })
                        }(document, "script", "twitter-wjs"),
                        function (e, t, n) {
                            var r, i;
                            if (e.getElementById(n)) return;
                            return i = void 0, r = $("body").children()[0], i = e.createElement(t), i.id = n, i.src = "https://apis.google.com/js/platform.js", r.parentNode.insertBefore(i, r)
                        }(document, "script", "google-plus")
                }, r
            }(Marionette.ItemView)
        })
    }.call(this), define("text!../data/texts.json", [], function () {



        return '[{"text":"Overview/ Introduction","content":[{"text":"General","content":[{"text":"[Name] is a loving child with a cheery demeanour that has made [him/her] a friend to many in class."},{"text":"[Name] is a happy and cheerful child who loves taking up responsible roles in class."},{"text":"[Name] is a very sprightly young [boy/girl] who loves pitching in with [his/her] opinion whenever possible. [He/She] loves playing outdoors and accommodates everyone in [his/her] games."},{"text":"[Name] is a sensitive and well-mannered [boy/girl], who has a positive attitude to school life."},{"text":"[Name] is a friendly, fun loving and cheerful child."},{"text":"[Name] has shown a tremendous growth in terms of confidence, articulation of [his/her] ideas and putting in effort into [his/her] work."}],"excluded":47,"mayHaveChildren":false},{"text":"Social / Emotional","content":[{"text":"Emotional Self-Regulation","content":[{"text":"[He/She] was proactive in every discipline and showed incredible enthusiasm to learn."},{"text":"[His/Her] politeness while interacting with peers as well with teachers is highly appreciated."},{"text":"[Name] is mature when it comes to accepting [his/her] follies and is always ready to work on rectifying the same."}],"excluded":12,"mayHaveChildren":false},{"text":"Relationship","content":[{"text":"[He/She] got along very well with all students and extended all possible support to the new students to help them adjust to the new environment."},{"text":"[Name] is respectful of others and is always willing to help [his/her] classmates."},{"text":"[Almost always/Frequently/Sometimes/Occasionally/At times], [Name] needed reminders to keep [his/her] hands to [himself/herself] and respect others´ personal space."}],"excluded":21,"mayHaveChildren":false},{"text":"Others","content":[{"text":"[Name] would benefit a lot by being more attentive to class discussions and pitch in with [his/her] ideas too."},{"text":"[Name] needs to be encouraged to ask questions and clarify [his/her] doubts whenever necessary."}],"excluded":11,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":false},{"text":"Work Habits","content":[{"text":"[Name] served as a model citizen for other students as [he/she] has a strong sense of fairness."},{"text":"[Name] is a very thoughtful child and this attitude of [his/her] came through many times when [he/she] willingly took up the responsibility to help [his/her] friend out in completing a task or in consoling them."}],"excluded":24,"mayHaveChildren":false},{"text":"Achievements","content":[{"text":"[Name] participated in [what event?] during the [School event name] and also won [what?] in the [ name of the category ] category ."}],"excluded":6,"mayHaveChildren":false},{"text":"Concluding Statements","content":[{"text":"I wish [him/her] all the best for Grade [Nursery/Kindergarten/1/2/3/4/5/6]."},{"text":"I look forward to seeing [his/her] continued growth and learning."},{"text":"I wish [him/her] a great [term/semester] ahead!"}],"excluded":13,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":true},                                                                                                         {"text":"ATL Skills / Skills","content":[{"text":"Thinking Skills","content":[{"text":"[Name]’s analytical and logical thinking skills saw [him/her] represent the school in the [Name of the competition] in the [Name of the competition]  challenge, where [he/she] performed well."}],"excluded":17,"mayHaveChildren":false},{"text":"Communication Skills","content":[{"text":"[Name] is polite while conversing with others and exhibits good communication skills."},{"text":"A bright and capable [boy/girl], [Name] is a keen listener who follows instructions well. Diligent and meticulous in what [he/she] does, [he/she] is good at communicating [his/her] views and in clearing the doubts of [his/her] peers."}],"excluded":13,"mayHaveChildren":false},{"text":"Self-Management Skills","content":[{"text":"[Name] displays good self-management skills as [he/she] always completes the class assignments on time and is extremely particular about [his/her] homework submissions. If [he/she] misses any class time, [he/she] makes an effort to ask and complete the missed work."},{"text":"[Name] needs to work on [his/her] organisational and self-management skills as many a time [he/she] ends up misplacing [his/her] things."}],"excluded":10,"mayHaveChildren":false},{"text":"Research Skills","content":[{"text":"[Name] enjoys research work through various sources like the internet, books and interviewing people."},{"text":"[Name] exhibited good research skills as [he/she] inquired into finding about []. [He/She] was encouraged to read non-fiction books to enhance [his/her] research skills to find out about [about what?]."}],"excluded":11,"mayHaveChildren":false},{"text":"Social Skills","content":[{"text":"[Name] is a co-operative [girl/boy] with good social skills and is accommodative while working with others in a group."},{"text":"[Name] needs to build on [his/her] social skills as [he/she] finds it challenging to work in a group and share ideas and resources."},{"text":"[Name] likes to take on responsibilities and volunteers to organize material and resources during group work, which clearly highlights [his/her] social skills."}],"excluded":20,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":false},                                                                                                                                                                                        {"text":"Learner Profile","content":[{"text":"Inquirer","content":[{"text":"[His/Her] enthusiasm to inquire into new things is visible from the tons of questions [he/she] comes up with."},{"text":"[Name] was an inquirer, which was evident when [doing what]."}],"excluded":9,"mayHaveChildren":false},{"text":"Knowledgeable","content":[{"text":"[Name] is confident and knowledgeable. [He/She] has a very pleasing personality and displays the qualities of a good peer tutor when asked to."}],"excluded":7,"mayHaveChildren":false},{"text":"Thinker","content":[{"text":"A true inquirer and thinker, [Name]’s out-of-box ideas have earned [him/her] appreciation from many."}],"excluded":8,"mayHaveChildren":false},{"text":"Communicator","content":[{"text":"An active participant in all class discussions, [ Name]  has time and again proved that [he/she] is not only knowledgeable but also a good communicator as [he/she] takes time to listen to others without interrupting before sharing [his/her] views."}],"excluded":7,"mayHaveChildren":false},{"text":"Principled","content":[{"text":"A principled child, [he/she]  never hesitates to stand up for what is right and takes up the role of a monitor very seriously though at times, [he/she]  [himself/herself] needs reminding to follow certain instructions."}],"excluded":16,"mayHaveChildren":false},{"text":"Open minded","content":[{"text":"[Name] is an open-minded learner who is always [willing/ open] to suggestions and feedback."}],"excluded":14,"mayHaveChildren":false},{"text":"Caring","content":[{"text":"[Name] is a very caring child and a great peer helper who can be seen explaining concepts to [his/her] friends or helping them complete their tasks."}],"excluded":15,"mayHaveChildren":false},{"text":"Risk- Taker","content":[{"text":"[Name] is a risk-taker and approaches new learning tasks and situations with confidence"}],"excluded":9,"mayHaveChildren":false},{"text":"Balanced","content":[{"text":"A well-mannered and soft-spoken child with a balanced personality, [Name] approaches [his/her] teachers without any inhibitions and exhibits good social skills by sharing ideas and resources amicably in group tasks."}],"excluded":10,"mayHaveChildren":false},{"text":"Reflective","content":[{"text":"[Name] is a very helpful and reflective child, who enjoys the company of [his/her] friends and peers."},{"text":"[Name] is very caring and reflective."}],"excluded":10,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":false},                                                                                                                {"text":"Unit of Study / Unit of Inquiry ","content":[{"text":"Genéral","content":[{"text":"[Name] is a keen inquirer and fuels [his/her] curiosity well with research on given topics."},{"text":"[Name] remains focused during lessons but it would be good to see [him/her] contribute to the inquiry in class conversations."},{"text":"Always open to suggestions, [Name] has demonstrated good social and communication skills while working together with [his/her] group and continues to be a wonderful peer-helper to [his/her] classmates."},{"text":"[Name] enjoys group and individual tasks equally."},{"text":"It is good to see [Name] opening up to independent research and [he/she] is starting to make relevant connections."},{"text":"It is good to see [Name] clear [his/her] doubts while others present their work which shows [his/her] interest in the topic being discussed."}],"excluded":47,"mayHaveChildren":false},{"text":"Unit 1","content":[{"text":"In our first unit on [name of the unit], the [what did they create? e.g.: booklet, presentation] that [he/she] had put together on [topic] had in-depth information on [mention the key features you had in mind]."},{"text":"[His/Her] Show and Tell on [name the topic] from unit [name of the unit] was explained very well through an interactive session with [his/her] audience, in which [he/she] handled all their questions efficiently."}],"excluded":24,"mayHaveChildren":false},{"text":"Unit 2","content":[{"text":"[Name] has exhibited remarkable traits of being an independent worker and showing commitment towards completing [his/her] work to the best of [his/her] ability."},{"text":"It is commendable that [Name] is able to articulate [his/her] thoughts clearly in writing, which conveys [his/her] understanding of the various concepts dealt with in UOI."}],"excluded":20,"mayHaveChildren":false},{"text":"Unit 3","content":[{"text":"He did a fair job with Show and Tell on [name the topic], though [he/she] could have explained [points that needed elaboration or missed out]."},{"text":"[Name] is an enthusiastic participant in all our UOI sessions and [he/she] always shares relevant information on the topic under discussion."}],"excluded":20,"mayHaveChildren":false},{"text":"Unit 4","content":[{"text":"A bit hesitant initially, [Name] has grown in confidence when it comes to conveying [his/her] concepts in a creative manner."},{"text":"[His/Her] artistic skills came to the fore as [he/she] worked on beautifully representing a compare and contrast chart between []."}],"excluded":18,"mayHaveChildren":false},{"text":"Concluding Statemént","content":[{"text":"It would be good to see [Name] ask questions whenever [he/she] has doubts on certain concepts, to gain more clarity on the topic."},{"text":"Reading books at [his/her] level or watching online videos and articles on the same will help hone [his/her] research skills and broaden [his/her] views and thinking. This will also improve [his/her] confidence and help [Name] participate better in class discussions."}],"excluded":33,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":false},                                                                                                            {"text":"Language ","content":[{"text":"Reading","content":[{"text":"General","content":[{"text":"[Name] is a soft-spoken and affectionate child who continues to charm [his/her] way into the hearts of [his/her] teachers with [his/her] warm and welcoming smile."},{"text":"[Name] is articulate in the language and can effectively communicate [his/her] ideas in it."},{"text":"[Name] has a good grasp of language in both reading and writing."},{"text":"[Name] loves reading variety of genre but follow up tasks have been an area where reminders were required."},{"text":"[Name] is a voracious reader and [his/her] interest in reading shows [his/her] vast exposure to books."}],"excluded":30,"mayHaveChildren":false},{"text":"Fluency","content":[{"text":"[Name]’s reading fluency is commendable. [He/She] reads well and works on challenging comprehension exercises with enthusiasm."},{"text":"[Name] reads with fluency and expression."}],"excluded":17,"mayHaveChildren":false},{"text":"Solving Word","content":[{"text":"[Name] used multiple strategies to figure out unknown words."},{"text":"[Name] figured out words using strategies such as [what?]."}],"excluded":12,"mayHaveChildren":false},{"text":"Comprehension","content":[{"text":"[Name] has been given comprehension passages to develop this skill and this can be followed up at home as well."},{"text":"Capable of comprehending simple passages, [Name] needs to work on [his/her] capacity to skim through information to understand it clearly and improve [his/her] inferential skills to understand beyond the obvious."}],"excluded":42,"mayHaveChildren":false},{"text":"Monitoring and Correcting","content":[{"text":"[Name] could tell when something didn´t sound right, and slowed down to reread and correct for meaning."},{"text":"[Name] self-corrected for meaning as [he/she] read."}],"excluded":31,"mayHaveChildren":false},{"text":"Analyzing and Critiquing","content":[{"text":"[Name] demonstrated an understanding of how books work. For example, [he/she] knew that nonfiction books use a combination of pictures, captions, and text to convey meaning."}],"excluded":11,"mayHaveChildren":false},{"text":"Book Club Participation","content":[{"text":"[Name] was able to reference the text during book talks."}],"excluded":6,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":true},{"text":"Writing","content":[{"text":"General","content":[{"text":"[Name] has an [excellent/good/fair/developing] command over [his/her] language and is fluent when it comes to articulating [his/her] thoughts in writing or speech."},{"text":"It is a pleasure to read [his/her] stories and the creative writing pieces that [Name] spins out of [his/her] vivid imagination."}],"excluded":33,"mayHaveChildren":false},{"text":"Genre study","content":[{"text":"[Name] demonstrated a [excellent/very good/good/satisfactory/basic] understanding of the [narrative/informational/persuasive] genre."}],"excluded":18,"mayHaveChildren":false},{"text":"Voice","content":[{"text":"[Name] developed voice in [his/her] writing."}],"excluded":11,"mayHaveChildren":false},{"text":"Ideas","content":[{"text":"[His/Her] writing demonstrated well-developed ideas."}],"excluded":7,"mayHaveChildren":false},{"text":"Organization","content":[{"text":"While writing, [Name] needs to break [his/her] run-on sentences and read through [his/her] written pieces to fill in the gaps in [his/her] organization of thoughts."}],"excluded":21,"mayHaveChildren":false},{"text":"Word Choice","content":[{"text":"[Name]’s written work has structure and depth as [he/she] has a feel for words and can create an exciting atmosphere using good vocabulary, which reflects a growing maturity as a writer."}],"excluded":20,"mayHaveChildren":false},{"text":"Sentence Fluency","content":[{"text":"[Name] has an excellent command over the language and is fluent in articulating [his/her] thoughts in writing or speech."}],"excluded":13,"mayHaveChildren":false},{"text":"Process","content":[{"text":"With guidance and support, [Name] stayed focused on a topic and added details to strengthen [his/her] writing as needed."}],"excluded":8,"mayHaveChildren":false},{"text":"Handwriting/Conventions/Spelling","content":[{"text":"[He/She] shows adequate knowledge and application of writing conventions such as capitalization and punctuation but needs constant reminders to do so."},{"text":"[Name] is a good speller who enjoys decoding words above grade level which [he/she] then uses to frame meaningful sentences."},{"text":"[Name] is also encouraged to focus on neater presentation of [his/her] work and improve [his/her] handwriting."},{"text":"[Name] has to work on punctuations like placing full stops at the right place to break [his/her] run-on sentences, speech marks and contractions."}],"excluded":32,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":true},{"text":"Speaking","content":[{"text":"[Name] can communicate and express [himself/herself] in simple, colloquial language with brevity."},{"text":"[His/Her] confidence has improved and [Name] tries to pitch in with [his/her] ideas and views during class discussions."},{"text":"[Name]’s speaking skills are fairly good and [he/she] is able to express [himself/herself] clearly enough though more exposure to the language will improve [his/her] pronunciation of certain words and [his/her] fluency too."},{"text":"[Name] needs to be given opportunities to practice the language by speaking it and listening to it as often as possible."}],"excluded":48,"mayHaveChildren":false},{"text":"Listening","content":[{"text":"[Name] is a good listener in class and participates with enthusiasm in all the class discussions."},{"text":"[Name] is a quiet listener in class and [always/rarely] pitches in with ideas or answers whenever [he/she] is asked a question."}],"excluded":15,"mayHaveChildren":false},{"text":"Concluding Stätement","content":[{"text":"Regularly reading a range of books will also help in developing [Name]’s vocabulary, spellings and understanding the correct usage of the past tense of verbs, which are many a time, a challenge for [him/her]."}],"excluded":14,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":true},                                                                                                                                                                                                {"text":"Math","content":[{"text":"Genéral","content":[{"text":"[Name] eagerly approaches challenging math tasks with a positive and confident attitude."},{"text":"[Name] effectively uses the math word wall to aid in understanding complex math terms."},{"text":"[Name] is becoming comfortable with numbers and takes pride in [his/her] work."},{"text":"[Name] has a passion for Math and tackles challenging problems with gusto."},{"text":"[Name] is a [self-motivated /hardworking /dedicated/passionate] worker and has a strong understanding of mathematical concepts dealt with in class."},{"text":"[Name] asks for assistance from teacher when appropriate."},{"text":"[Name] exhibits poor time management and consequently has trouble completing math assignments on time."},{"text":"[Name] has the potential to produce better work but puts forth minimal effort."},{"text":"[Name] hardly ever participates in [small group discussions/whole class activities]."}],"excluded":26,"mayHaveChildren":false},{"text":"Numeracy","content":[{"text":"[Name] understands place value up to [mention the limit]."},{"text":"[Name] can read, write, count numbers up to [mention the limit]."},{"text":"[Name] [can /requires ongoing support to / requires considerable attention and individual instruction to] demonstrate and explain the process of subtraction of whole numbers up to [mention the limit], with and without regrouping."},{"text":"[Name] knows [his/her] times tables quite well and is able to attempt sums with all the four operations with relative ease."},{"text":"[Name] demonstrated a clear understanding of fractions and explained [his/her] devised strategies to explain [his/her] understanding. "}],"excluded":23,"mayHaveChildren":false},{"text":"Pattern and function","content":[{"text":"As [Name] is confident and quick in [his/her] number work, [he/she] can identify patterns in numbers which is helping [him/her] in developing multiplication skills."}],"excluded":10,"mayHaveChildren":false},{"text":"Measurement and Time","content":[{"text":"[Name] can comfortably select and use the appropriate unit and tool during the unit on Measurement."},{"text":"[Name] has an excellent understanding of clocks and works well with the other units of measurement."},{"text":"[Name] understanding of the concept of time is developing as [he/she] reads time in both analogue and digital clocks with accuracy."}],"excluded":22,"mayHaveChildren":false},{"text":"Data Handling","content":[{"text":"Name]’s speed and accuracy became better by the day and [he/she] loved working hands-on with fractions, grids, and calculation of the perimeter of various objects in class."},{"text":"[Name] is having trouble with [insert any math skill or strategy]"}],"excluded":8,"mayHaveChildren":false},{"text":"Shape and Space","content":[{"text":"[Name] can recognize and sort a range of 2D, and 3D shapes and understands what angles are."}],"excluded":12,"mayHaveChildren":false},{"text":"Problem Solving Skills","content":[{"text":"[Name] has a strong mathematical understanding and has shown great application in all aspects of mathematics and is motivated to work with challenging problem-solving situations."},{"text":"[Name] is not able to retell significant information from a word problem."},{"text":"[Name] exhibits a strong math foundation."},{"text":"[Name] has significant trouble following clear steps to solve higher order thinking word problems."},{"text":"[Name] requires a high level of encouragement in order to complete most higher order thinking math tasks."}],"excluded":41,"mayHaveChildren":false},{"text":"Concluding Statément","content":[{"text":"Continuous and rigorous practice of mathematical operations and multiplication facts during the [summer/winter] break will help [him/her] immensely."},{"text":"Encouraging [Name] to express [his/her] thoughts and explain [his/her] method will build [his/her] confidence. Regular practice of basic concepts all through the break is essential for [him/her] to keep building [his/her] understanding."}],"excluded":26,"mayHaveChildren":false}],"excluded":0,"mayHaveChildren":false},                                                                                                                                                                                                                                                                                                                                 {"text":"Online Classes","content": [ {"text":"Work and Submission habits","content": [ {"text":"[Name] consistently demonstrates an understanding of how to use online platforms during the teaching and learning process."}, {"text":"[Name] was able to effectively use [technology resource] with limited assistance to engage in class activities, complete and submit assignments, and communicate with teachers and other students."}, {"text":"[Name] does a great job of managing [his/her] time well."}, {"text":"[Name] is always prepared and ready to learn."}, {"text":"[Name] routinely seeks assistance when [he/she] has issues accessing the online resources and materials."}, {"text":"[Name] requires a high level of encouragement in order to complete a task."}, {"text":"[Name] frequently asks questions about the assignment before first reviewing the online instructions."} ],"excluded":35,"mayHaveChildren":false}, {"text":"Recommendations","content": [ {"text":"It would benefit [Name] greatly to follow a daily schedule to help keep [him/her] on task."}, {"text":"[Name] may contact me through [phone no. , email id] if [he/she] needs additional support or clarification about an assignment."} ],"excluded":14,"mayHaveChildren":false} ],"excluded":0,"mayHaveChildren":false}]'
    }),
    function () {
        define("cs!startup", ["lib/handlebars.min", "lib/marionette", "lib/bootstrap.min", "cs!MainLayout", "cs!Categories", "cs!TopNavView", "cs!ContentTree", "cs!ResultView", "cs!Controller", "cs!SocialView", "text!../data/texts.json"], function (e, t, n, r, i, s, o, u, a, f, l) {
            var c;
            return function (e) {
                return t.Renderer.render = function (t) {
                    return (t != null ? t.length : void 0) === 0 ? function () {
                        return ""
                    } : e.apply(this, arguments)
                }
            }(t.Renderer.render), t.TemplateCache.prototype.loadTemplate = function (e) {
                var t, n, r;
                r = e;
                if (!r || r.length === 0) throw n = "Could not find template: '" + e + "'", t = new Error(n), t.name = "NoTemplateError", t;
                return e
            }, t.TemplateCache.prototype.compileTemplate = function (t) {
                return e.compile(t)
            }, c = new t.Application, c.addRegions({
                mainRegion: "body"
            }), c.addInitializer(function () {
                var e, t, n, c;
                return n = new r, this.mainRegion.show(n), e = new i(JSON.parse(l), {
                    parse: !0
                }), t = new o({
                    collection: e
                }), c = new u, n.top.show(new s({
                    collection: e
                })), n.content.show(t), n.result.show(c), n.social.show(new f), new a({
                    content: t,
                    result: c
                })
            }), c.start()
        })
    }.call(this), require({
        paths: {
            lib: "../lib",
            html: "../html",
            text: "../lib/text",
            cs: "../lib/cs",
            "coffee-script": "../lib/coffee-script",
            backbone: "../lib/backbone",
            jquery: "../lib/jquery",
            underscore: "../lib/lodash"
        },
        shim: {
            "lib/bootstrap.min.js": ["jquery"],
            "cs!startup": ["lib/marionette"]
        }
    }, ["cs!startup"]), define("main", function () {});